[DEBUG] 2024-12-07 11:53:39.318 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-12-07 11:53:39.322 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-12-07 11:53:39.341 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-12-07 11:53:39.342 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-12-07 11:53:39.393 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-12-07 11:53:39.400 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-12-07 11:53:39.565 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-12-07 11:53:39.567 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-12-07 11:53:39.568 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-12-07 11:53:39.568 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-12-07 11:53:39.568 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-12-07 11:53:39.568 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-12-07 11:53:39.569 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-12-07 11:53:39.569 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-12-07 11:53:39.570 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-12-07 11:53:39.570 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-12-07 11:53:39.570 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-12-07 11:53:39.570 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-12-07 11:53:39.571 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-12-07 11:53:39.576 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-12-07 11:53:39.576 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-12-07 11:53:39.637 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@72bd2871
[DEBUG] 2024-12-07 11:53:39.637 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@72bd2871
[DEBUG] 2024-12-07 11:53:39.637 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@72bd2871
[DEBUG] 2024-12-07 11:53:39.637 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@77429040
[DEBUG] 2024-12-07 11:53:39.637 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@77429040
[DEBUG] 2024-12-07 11:53:39.637 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2d2b6960
[DEBUG] 2024-12-07 11:53:39.637 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2d2b6960
[DEBUG] 2024-12-07 11:53:39.637 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@38291795
[DEBUG] 2024-12-07 11:53:39.638 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@38291795
[DEBUG] 2024-12-07 11:53:39.638 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@234c5e41
[DEBUG] 2024-12-07 11:53:39.638 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@234c5e41
[DEBUG] 2024-12-07 11:53:39.638 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@234c5e41
[DEBUG] 2024-12-07 11:53:39.638 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@40ef0af8
[DEBUG] 2024-12-07 11:53:39.638 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@40ef0af8
[DEBUG] 2024-12-07 11:53:39.638 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@40ef0af8
[DEBUG] 2024-12-07 11:53:39.638 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@36790bec
[DEBUG] 2024-12-07 11:53:39.638 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@36790bec
[DEBUG] 2024-12-07 11:53:39.638 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@461c3709
[DEBUG] 2024-12-07 11:53:39.638 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7e3d7dd
[DEBUG] 2024-12-07 11:53:39.638 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7e3d7dd
[DEBUG] 2024-12-07 11:53:39.639 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3f63a513
[DEBUG] 2024-12-07 11:53:39.639 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@413bef78
[DEBUG] 2024-12-07 11:53:39.639 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@66383c29
[DEBUG] 2024-12-07 11:53:39.639 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@66383c29
[DEBUG] 2024-12-07 11:53:39.639 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@66383c29
[DEBUG] 2024-12-07 11:53:39.639 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7f7c420c
[DEBUG] 2024-12-07 11:53:39.639 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7f7c420c
[DEBUG] 2024-12-07 11:53:39.639 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7f7c420c
[DEBUG] 2024-12-07 11:53:39.639 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5d152bcd
[DEBUG] 2024-12-07 11:53:39.639 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5d152bcd
[DEBUG] 2024-12-07 11:53:39.639 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5d152bcd
[DEBUG] 2024-12-07 11:53:39.639 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@43cb5f38
[DEBUG] 2024-12-07 11:53:39.639 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@43cb5f38
[DEBUG] 2024-12-07 11:53:39.639 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@43cb5f38
[DEBUG] 2024-12-07 11:53:39.640 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6435fa1c
[DEBUG] 2024-12-07 11:53:39.640 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6435fa1c
[DEBUG] 2024-12-07 11:53:39.640 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6435fa1c
[DEBUG] 2024-12-07 11:53:39.640 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7944b8b4
[DEBUG] 2024-12-07 11:53:39.640 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7944b8b4
[DEBUG] 2024-12-07 11:53:39.640 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@d7bbf12
[DEBUG] 2024-12-07 11:53:39.640 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@d7bbf12
[DEBUG] 2024-12-07 11:53:39.640 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1450131a
[DEBUG] 2024-12-07 11:53:39.640 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1450131a
[DEBUG] 2024-12-07 11:53:39.640 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1450131a
[DEBUG] 2024-12-07 11:53:39.640 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5f7eee96
[DEBUG] 2024-12-07 11:53:39.640 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3a36cd5
[DEBUG] 2024-12-07 11:53:39.640 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3a36cd5
[DEBUG] 2024-12-07 11:53:39.641 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@53f0d09c
[DEBUG] 2024-12-07 11:53:39.641 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@47acd13b
[DEBUG] 2024-12-07 11:53:39.641 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@47acd13b
[DEBUG] 2024-12-07 11:53:39.641 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@47acd13b
[DEBUG] 2024-12-07 11:53:39.641 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6f8e9d06
[DEBUG] 2024-12-07 11:53:39.641 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@77d381e6
[DEBUG] 2024-12-07 11:53:39.641 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2272cbb0
[DEBUG] 2024-12-07 11:53:39.641 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3f6f3cc
[DEBUG] 2024-12-07 11:53:39.641 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3f6f3cc
[DEBUG] 2024-12-07 11:53:39.641 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@180b3819
[DEBUG] 2024-12-07 11:53:39.641 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@180b3819
[DEBUG] 2024-12-07 11:53:39.641 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@733c464f
[DEBUG] 2024-12-07 11:53:39.641 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@47272cd3
[DEBUG] 2024-12-07 11:53:39.641 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@73fbdf68
[DEBUG] 2024-12-07 11:53:39.642 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@32f1fafe
[DEBUG] 2024-12-07 11:53:39.642 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@236eccd1
[DEBUG] 2024-12-07 11:53:39.642 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5d512ddb
[DEBUG] 2024-12-07 11:53:39.642 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@707ca986
[DEBUG] 2024-12-07 11:53:39.642 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@707ca986
[DEBUG] 2024-12-07 11:53:39.642 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4de79b7d
[DEBUG] 2024-12-07 11:53:39.642 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4de79b7d
[DEBUG] 2024-12-07 11:53:39.642 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@183ade54
[DEBUG] 2024-12-07 11:53:39.642 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@183ade54
[DEBUG] 2024-12-07 11:53:39.642 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4c51077d
[DEBUG] 2024-12-07 11:53:39.643 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4c51077d
[DEBUG] 2024-12-07 11:53:39.643 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5974b7e8
[DEBUG] 2024-12-07 11:53:39.643 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5974b7e8
[DEBUG] 2024-12-07 11:53:39.643 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2839e3c8
[DEBUG] 2024-12-07 11:53:39.643 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66bf40e5
[DEBUG] 2024-12-07 11:53:39.643 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2291d9a0
[DEBUG] 2024-12-07 11:53:39.643 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2291d9a0
[DEBUG] 2024-12-07 11:53:39.643 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5e26f1ed
[DEBUG] 2024-12-07 11:53:39.643 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@39666e42
[DEBUG] 2024-12-07 11:53:39.644 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@25c2a9e3
[DEBUG] 2024-12-07 11:53:39.644 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@9b23822
[DEBUG] 2024-12-07 11:53:39.644 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@9b23822
[DEBUG] 2024-12-07 11:53:39.644 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@60f21960
[DEBUG] 2024-12-07 11:53:39.644 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6a6c7f42
[DEBUG] 2024-12-07 11:53:39.644 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5a515e5d
[DEBUG] 2024-12-07 11:53:39.644 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5a515e5d
[DEBUG] 2024-12-07 11:53:39.644 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@423a0e1d
[DEBUG] 2024-12-07 11:53:39.644 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@423a0e1d
[DEBUG] 2024-12-07 11:53:39.644 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@32f32623
[DEBUG] 2024-12-07 11:53:39.644 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@32f32623
[DEBUG] 2024-12-07 11:53:39.644 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@32f32623
[DEBUG] 2024-12-07 11:53:39.644 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3becc950
[DEBUG] 2024-12-07 11:53:39.645 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3becc950
[DEBUG] 2024-12-07 11:53:39.645 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3becc950
[DEBUG] 2024-12-07 11:53:39.645 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6b9fdbc6
[DEBUG] 2024-12-07 11:53:39.645 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@79476a4e
[DEBUG] 2024-12-07 11:53:39.645 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@52ae997b
[DEBUG] 2024-12-07 11:53:39.645 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@52ae997b
[DEBUG] 2024-12-07 11:53:39.645 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@f557c37
[DEBUG] 2024-12-07 11:53:39.645 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@f557c37
[DEBUG] 2024-12-07 11:53:39.646 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@f557c37
[DEBUG] 2024-12-07 11:53:39.646 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1a01d7f0
[DEBUG] 2024-12-07 11:53:39.646 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5856dbe4
[DEBUG] 2024-12-07 11:53:39.646 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7e15f4d4
[DEBUG] 2024-12-07 11:53:39.646 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7e15f4d4
[DEBUG] 2024-12-07 11:53:39.646 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5a058be5
[DEBUG] 2024-12-07 11:53:39.647 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5a058be5
[DEBUG] 2024-12-07 11:53:39.647 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5a058be5
[DEBUG] 2024-12-07 11:53:39.647 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4eaf7902
[DEBUG] 2024-12-07 11:53:39.647 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4eaf7902
[DEBUG] 2024-12-07 11:53:39.647 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@20c812c8
[DEBUG] 2024-12-07 11:53:39.647 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@20c812c8
[DEBUG] 2024-12-07 11:53:39.647 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@71aaf151
[DEBUG] 2024-12-07 11:53:39.647 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@71aaf151
[DEBUG] 2024-12-07 11:53:39.647 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7061622
[DEBUG] 2024-12-07 11:53:39.647 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7061622
[DEBUG] 2024-12-07 11:53:39.647 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@32d418a9
[DEBUG] 2024-12-07 11:53:39.648 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@32d418a9
[DEBUG] 2024-12-07 11:53:39.648 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@52ea0269
[DEBUG] 2024-12-07 11:53:39.648 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@746c411c
[DEBUG] 2024-12-07 11:53:39.651 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@83bb0f
[DEBUG] 2024-12-07 11:53:39.652 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@83bb0f
[DEBUG] 2024-12-07 11:53:39.652 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4d09cade
[DEBUG] 2024-12-07 11:53:39.653 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1f87607c
[DEBUG] 2024-12-07 11:53:39.653 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4b862408
[DEBUG] 2024-12-07 11:53:39.653 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6ddee60f
[DEBUG] 2024-12-07 11:53:39.653 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6e829e50
[DEBUG] 2024-12-07 11:53:39.653 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4aa2877c
[DEBUG] 2024-12-07 11:53:39.653 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@307e4c44
[DEBUG] 2024-12-07 11:53:39.653 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2a8a3ada
[DEBUG] 2024-12-07 11:53:39.653 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@500051c5
[INFO ] 2024-12-07 11:53:39.671 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-12-07 11:53:39.672 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-12-07 11:53:39.672 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-12-07 11:53:39.757 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-12-07 11:53:39.940 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-12-07 11:53:39.941 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-12-07 11:53:39.941 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-12-07 11:53:39.978 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-12-07 11:53:39.979 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-12-07 11:53:39.984 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-12-07 11:53:39.984 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-12-07 11:53:39.995 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c742b84) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5db3d57c)
[DEBUG] 2024-12-07 11:53:39.995 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53a50b0a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74ba6ff5)
[DEBUG] 2024-12-07 11:53:39.995 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@395f52ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a84788f)
[DEBUG] 2024-12-07 11:53:39.996 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@102c18e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@26e0d39c)
[DEBUG] 2024-12-07 11:53:39.996 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65eb3597) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c7279a5)
[DEBUG] 2024-12-07 11:53:39.996 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bebd114) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b379bc6)
[DEBUG] 2024-12-07 11:53:39.996 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@374c40ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@18dcb8a7)
[DEBUG] 2024-12-07 11:53:39.996 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6dcab9d9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5a14e60d)
[DEBUG] 2024-12-07 11:53:39.996 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f882465) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72ecbcb3)
[DEBUG] 2024-12-07 11:53:39.997 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-12-07 11:53:39.997 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-12-07 11:53:39.997 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-12-07 11:53:39.999 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-12-07 11:53:39.999 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-12-07 11:53:40.002 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7971c2a9
[DEBUG] 2024-12-07 11:53:40.002 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4d09cade`
[DEBUG] 2024-12-07 11:53:40.006 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-12-07 11:53:40.006 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-12-07 11:53:40.006 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-12-07 11:53:40.009 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-12-07 11:53:40.009 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-12-07 11:53:40.009 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-12-07 11:53:40.009 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-12-07 11:53:40.009 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-12-07 11:53:40.009 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-12-07 11:53:40.009 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-12-07 11:53:40.009 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-12-07 11:53:40.009 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-12-07 11:53:40.010 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@183fc2fa] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3a11c0eb]
[DEBUG] 2024-12-07 11:53:40.040 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-12-07 11:53:40.060 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-12-07 11:53:40.066 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-12-07 11:53:40.071 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-12-07 11:53:40.077 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-12-07 11:53:40.091 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-12-07 11:53:40.091 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-12-07 11:53:40.091 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-12-07 11:53:40.093 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-12-07 11:53:40.096 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-12-07 11:53:40.099 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-12-07 11:53:40.101 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-12-07 11:53:40.101 [main] PropertyBinder - Building property id
[DEBUG] 2024-12-07 11:53:40.104 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-12-07 11:53:40.109 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-12-07 11:53:40.109 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-12-07 11:53:40.116 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-12-07 11:53:40.119 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-12-07 11:53:40.120 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-12-07 11:53:40.120 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-12-07 11:53:40.121 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-12-07 11:53:40.121 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-12-07 11:53:40.123 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-12-07 11:53:40.124 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-12-07 11:53:40.124 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-12-07 11:53:40.125 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-12-07 11:53:40.125 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-12-07 11:53:40.125 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-12-07 11:53:40.125 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-12-07 11:53:40.125 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-12-07 11:53:40.125 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-12-07 11:53:40.128 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-12-07 11:53:40.129 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-12-07 11:53:40.129 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-12-07 11:53:40.129 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-12-07 11:53:40.130 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-12-07 11:53:40.130 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-12-07 11:53:40.130 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-12-07 11:53:40.130 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-12-07 11:53:40.130 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-12-07 11:53:40.131 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-12-07 11:53:40.131 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-12-07 11:53:40.131 [main] PropertyBinder - Building property id
[DEBUG] 2024-12-07 11:53:40.131 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-12-07 11:53:40.131 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-12-07 11:53:40.131 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-12-07 11:53:40.131 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-12-07 11:53:40.131 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-12-07 11:53:40.131 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-12-07 11:53:40.131 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-12-07 11:53:40.132 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-12-07 11:53:40.132 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-12-07 11:53:40.132 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-12-07 11:53:40.132 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-12-07 11:53:40.132 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-12-07 11:53:40.132 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-12-07 11:53:40.133 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-12-07 11:53:40.133 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-12-07 11:53:40.133 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-12-07 11:53:40.133 [main] PropertyBinder - Building property teams
[DEBUG] 2024-12-07 11:53:40.134 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-12-07 11:53:40.134 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-12-07 11:53:40.134 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-12-07 11:53:40.135 [main] EntityBinder - Bind entity com.radams.entity.Team on table teams
[DEBUG] 2024-12-07 11:53:40.135 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-12-07 11:53:40.138 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-12-07 11:53:40.138 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-12-07 11:53:40.138 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-12-07 11:53:40.138 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-12-07 11:53:40.138 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-12-07 11:53:40.138 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-12-07 11:53:40.138 [main] BasicValue - Skipping column re-registration: teams.id
[DEBUG] 2024-12-07 11:53:40.138 [main] PropertyBinder - Building property id
[DEBUG] 2024-12-07 11:53:40.138 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-12-07 11:53:40.138 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-12-07 11:53:40.139 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-12-07 11:53:40.141 [main] PropertyBinder - Building property sport
[DEBUG] 2024-12-07 11:53:40.141 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_abv')
[DEBUG] 2024-12-07 11:53:40.141 [main] PropertyBinder - MetadataSourceProcessor property teamAbv with lazy=false
[DEBUG] 2024-12-07 11:53:40.141 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamAbv]
[DEBUG] 2024-12-07 11:53:40.141 [main] BasicValueBinder - building BasicValue for teamAbv
[DEBUG] 2024-12-07 11:53:40.141 [main] BasicValue - Skipping column re-registration: teams.team_abv
[DEBUG] 2024-12-07 11:53:40.141 [main] PropertyBinder - Building property teamAbv
[DEBUG] 2024-12-07 11:53:40.141 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-12-07 11:53:40.141 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-12-07 11:53:40.141 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-12-07 11:53:40.141 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-12-07 11:53:40.141 [main] BasicValue - Skipping column re-registration: teams.team_name
[DEBUG] 2024-12-07 11:53:40.141 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-12-07 11:53:40.142 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-12-07 11:53:40.142 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.FavoriteTeam
[DEBUG] 2024-12-07 11:53:40.142 [main] EntityBinder - Import with entity name FavoriteTeam
[DEBUG] 2024-12-07 11:53:40.142 [main] EntityBinder - Bind entity com.radams.entity.FavoriteTeam on table favorite_teams
[DEBUG] 2024-12-07 11:53:40.143 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-12-07 11:53:40.143 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-12-07 11:53:40.143 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-12-07 11:53:40.143 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-12-07 11:53:40.143 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-12-07 11:53:40.143 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.FavoriteTeam:id]
[DEBUG] 2024-12-07 11:53:40.143 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-12-07 11:53:40.143 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-12-07 11:53:40.143 [main] PropertyBinder - Building property id
[DEBUG] 2024-12-07 11:53:40.144 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-12-07 11:53:40.144 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='team_id')
[DEBUG] 2024-12-07 11:53:40.144 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-12-07 11:53:40.144 [main] PropertyBinder - Building property team
[DEBUG] 2024-12-07 11:53:40.144 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-12-07 11:53:40.144 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-12-07 11:53:40.144 [main] PropertyBinder - Building property user
[DEBUG] 2024-12-07 11:53:40.145 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-12-07 11:53:40.146 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-12-07 11:53:40.146 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-12-07 11:53:40.147 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-12-07 11:53:40.147 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-12-07 11:53:40.147 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-12-07 11:53:40.147 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamAbv
[DEBUG] 2024-12-07 11:53:40.147 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-12-07 11:53:40.147 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-12-07 11:53:40.151 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-12-07 11:53:40.151 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-12-07 11:53:40.151 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2024-12-07 11:53:40.151 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-12-07 11:53:40.151 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-12-07 11:53:40.152 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-12-07 11:53:40.154 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-12-07 11:53:40.155 [main] TableBinder - Retrieving property com.radams.entity.FavoriteTeam.user
[DEBUG] 2024-12-07 11:53:40.155 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.FavoriteTeam
[DEBUG] 2024-12-07 11:53:40.155 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-12-07 11:53:40.155 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-12-07 11:53:40.156 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> teams
[DEBUG] 2024-12-07 11:53:40.156 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-12-07 11:53:40.156 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-12-07 11:53:40.156 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-12-07 11:53:40.157 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-12-07 11:53:40.157 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-12-07 11:53:40.164 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-12-07 11:53:40.164 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-12-07 11:53:40.164 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-12-07 11:53:40.327 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-12-07 11:53:40.357 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-12-07 11:53:40.357 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.persistence.rapidApiDaoTest, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4403bff8, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-12-07 11:53:40.360 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-12-07 11:53:40.364 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-12-07 11:53:40.392 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-12-07 11:53:40.392 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-12-07 11:53:40.393 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-12-07 11:53:40.393 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-12-07 11:53:40.394 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2a631049] under count; prior registration was null
[DEBUG] 2024-12-07 11:53:40.394 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@59a94d0f] under every; prior registration was null
[DEBUG] 2024-12-07 11:53:40.394 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7ff09659] under any; prior registration was null
[DEBUG] 2024-12-07 11:53:40.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-12-07 11:53:40.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-12-07 11:53:40.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-12-07 11:53:40.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-12-07 11:53:40.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-12-07 11:53:40.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-12-07 11:53:40.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-12-07 11:53:40.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-12-07 11:53:40.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-12-07 11:53:40.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-12-07 11:53:40.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-12-07 11:53:40.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-12-07 11:53:40.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-12-07 11:53:40.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-12-07 11:53:40.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-12-07 11:53:40.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-12-07 11:53:40.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-12-07 11:53:40.398 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7417ef4f] under sinh; prior registration was null
[DEBUG] 2024-12-07 11:53:40.398 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c0e2ec] under cosh; prior registration was null
[DEBUG] 2024-12-07 11:53:40.398 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4fa8bebb] under tanh; prior registration was null
[DEBUG] 2024-12-07 11:53:40.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d3c22a5] under pi; prior registration was null
[DEBUG] 2024-12-07 11:53:40.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@369ad7da] under log; prior registration was null
[DEBUG] 2024-12-07 11:53:40.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-12-07 11:53:40.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-12-07 11:53:40.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-12-07 11:53:40.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-12-07 11:53:40.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-12-07 11:53:40.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-12-07 11:53:40.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-12-07 11:53:40.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-12-07 11:53:40.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-12-07 11:53:40.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-12-07 11:53:40.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-12-07 11:53:40.400 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-12-07 11:53:40.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@18d610e1] under position; prior registration was null
[DEBUG] 2024-12-07 11:53:40.401 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2b5f8e61] under overlay; prior registration was null
[DEBUG] 2024-12-07 11:53:40.402 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@27db45f] under trim; prior registration was null
[DEBUG] 2024-12-07 11:53:40.402 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1ed9d173] under cast; prior registration was null
[DEBUG] 2024-12-07 11:53:40.402 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e981e78] under collate; prior registration was null
[DEBUG] 2024-12-07 11:53:40.403 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1179fc8c] under extract; prior registration was null
[DEBUG] 2024-12-07 11:53:40.404 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-12-07 11:53:40.404 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-12-07 11:53:40.404 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@143413cd] under ifnull; prior registration was null
[DEBUG] 2024-12-07 11:53:40.404 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-12-07 11:53:40.404 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-12-07 11:53:40.405 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@52285a5f] under pad; prior registration was null
[DEBUG] 2024-12-07 11:53:40.405 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@60f9dc7e] under str; prior registration was null
[DEBUG] 2024-12-07 11:53:40.407 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1bec1589] under format; prior registration was null
[DEBUG] 2024-12-07 11:53:40.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2299d903] under timestampadd; prior registration was null
[DEBUG] 2024-12-07 11:53:40.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@b9b97ad] under timestampdiff; prior registration was null
[DEBUG] 2024-12-07 11:53:40.408 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-12-07 11:53:40.408 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-12-07 11:53:40.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c6bd624] under current_date; prior registration was null
[DEBUG] 2024-12-07 11:53:40.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d8d52be] under current_time; prior registration was null
[DEBUG] 2024-12-07 11:53:40.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@645ba24a] under current_timestamp; prior registration was null
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f6a8efe] under local_date; prior registration was null
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dd2b9c1] under local_time; prior registration was null
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a1d1467] under local_datetime; prior registration was null
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@536da29c] under offset_datetime; prior registration was null
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58fbcb71] under instant; prior registration was null
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4a122e68] under sql; prior registration was null
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@369ad7da
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-12-07 11:53:40.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-12-07 11:53:40.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-12-07 11:53:40.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-12-07 11:53:40.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-12-07 11:53:40.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-12-07 11:53:40.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1de85972] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-12-07 11:53:40.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@280ecc33] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-12-07 11:53:40.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-12-07 11:53:40.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-12-07 11:53:40.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-12-07 11:53:40.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-12-07 11:53:40.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-12-07 11:53:40.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-12-07 11:53:40.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-12-07 11:53:40.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-12-07 11:53:40.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-12-07 11:53:40.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-12-07 11:53:40.412 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57b1ec84] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@18d610e1
[DEBUG] 2024-12-07 11:53:40.412 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-12-07 11:53:40.412 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-12-07 11:53:40.412 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-12-07 11:53:40.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1ba35152] under trunc; prior registration was null
[DEBUG] 2024-12-07 11:53:40.414 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-12-07 11:53:40.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-12-07 11:53:40.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@401926df] under bitand; prior registration was null
[DEBUG] 2024-12-07 11:53:40.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ff8a3ad] under bitor; prior registration was null
[DEBUG] 2024-12-07 11:53:40.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@550fa96f] under bitxor; prior registration was null
[DEBUG] 2024-12-07 11:53:40.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54275b5d] under bitnot; prior registration was null
[DEBUG] 2024-12-07 11:53:40.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-12-07 11:53:40.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-12-07 11:53:40.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-12-07 11:53:40.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-12-07 11:53:40.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-12-07 11:53:40.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-12-07 11:53:40.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-12-07 11:53:40.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-12-07 11:53:40.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-12-07 11:53:40.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-12-07 11:53:40.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-12-07 11:53:40.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-12-07 11:53:40.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-12-07 11:53:40.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5d01b0d8] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1bec1589
[DEBUG] 2024-12-07 11:53:40.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-12-07 11:53:40.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-12-07 11:53:40.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-12-07 11:53:40.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-12-07 11:53:40.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3dd2b9c1
[DEBUG] 2024-12-07 11:53:40.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6a1d1467
[DEBUG] 2024-12-07 11:53:40.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-12-07 11:53:40.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@271e851e] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d3c22a5
[DEBUG] 2024-12-07 11:53:40.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@ff21443] under chr; prior registration was null
[DEBUG] 2024-12-07 11:53:40.416 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-12-07 11:53:40.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61e14b53] under sysdate; prior registration was null
[DEBUG] 2024-12-07 11:53:40.417 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-12-07 11:53:40.417 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-12-07 11:53:40.417 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-12-07 11:53:40.417 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-12-07 11:53:40.417 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-12-07 11:53:40.417 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-12-07 11:53:40.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6851b296] under rank; prior registration was null
[DEBUG] 2024-12-07 11:53:40.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@9e50283] under dense_rank; prior registration was null
[DEBUG] 2024-12-07 11:53:40.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5368e981] under percent_rank; prior registration was null
[DEBUG] 2024-12-07 11:53:40.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1c171746] under cume_dist; prior registration was null
[DEBUG] 2024-12-07 11:53:40.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@685e6a68] under listagg; prior registration was null
[DEBUG] 2024-12-07 11:53:40.422 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.422 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.422 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-12-07 11:53:40.422 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-12-07 11:53:40.422 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-12-07 11:53:40.422 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-12-07 11:53:40.422 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.422 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.422 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-12-07 11:53:40.422 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-12-07 11:53:40.422 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-12-07 11:53:40.423 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-12-07 11:53:40.424 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-12-07 11:53:40.425 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-12-07 11:53:40.426 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-12-07 11:53:40.426 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-12-07 11:53:40.426 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-12-07 11:53:40.426 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-12-07 11:53:40.426 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-12-07 11:53:40.426 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-12-07 11:53:40.426 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-12-07 11:53:40.426 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-12-07 11:53:40.426 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.426 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.426 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-12-07 11:53:40.426 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-12-07 11:53:40.426 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-12-07 11:53:40.429 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-12-07 11:53:40.517 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-12-07 11:53:40.518 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-12-07 11:53:40.610 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-12-07 11:53:40.613 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-12-07 11:53:40.620 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-12-07 11:53:40.620 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-12-07 11:53:40.783 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-12-07 11:53:40.787 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-12-07 11:53:40.810 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-12-07 11:53:40.810 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-12-07 11:53:40.811 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-12-07 11:53:40.811 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-12-07 11:53:40.811 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-12-07 11:53:40.811 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-12-07 11:53:40.825 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.FavoriteTeam]: private accessor [team]
[DEBUG] 2024-12-07 11:53:40.826 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-12-07 11:53:40.826 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-12-07 11:53:40.827 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-12-07 11:53:40.827 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-12-07 11:53:40.843 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-12-07 11:53:40.843 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-12-07 11:53:40.843 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-12-07 11:53:40.852 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-12-07 11:53:40.864 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-12-07 11:53:40.865 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-12-07 11:53:40.865 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-12-07 11:53:40.865 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-12-07 11:53:40.865 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-12-07 11:53:40.865 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-12-07 11:53:40.885 [main] creation - Starting post-init callbacks
[DEBUG] 2024-12-07 11:53:40.885 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-12-07 11:53:40.888 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-12-07 11:53:40.888 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.team]
[DEBUG] 2024-12-07 11:53:40.888 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.user]
[DEBUG] 2024-12-07 11:53:40.888 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.FavoriteTeam) `staticFetchableList` generator
[DEBUG] 2024-12-07 11:53:40.888 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-12-07 11:53:40.888 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-12-07 11:53:40.888 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-12-07 11:53:40.888 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-12-07 11:53:40.888 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-12-07 11:53:40.888 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-12-07 11:53:40.889 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-12-07 11:53:40.889 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-12-07 11:53:40.889 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-12-07 11:53:40.889 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-12-07 11:53:40.940 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-12-07 11:53:40.941 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-12-07 11:53:40.948 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4cfe9594] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-12-07 11:53:40.949 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-12-07 11:53:40.955 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamAbv]
 |  \-BasicFetch [com.radams.entity.Team.teamName]

[DEBUG] 2024-12-07 11:53:40.963 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-12-07 11:53:40.970 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-12-07 11:53:40.970 [main] AbstractEntityPersister -  Version select: select id from teams where id=?
[DEBUG] 2024-12-07 11:53:40.970 [main] AbstractEntityPersister -  Insert (0): insert into teams (sport_id,team_abv,team_name) values (?,?,?)
[DEBUG] 2024-12-07 11:53:40.970 [main] AbstractEntityPersister -  Update (0): update teams set sport_id=?,team_abv=?,team_name=? where id=?
[DEBUG] 2024-12-07 11:53:40.970 [main] AbstractEntityPersister -  Delete (0): delete from teams where id=?
[DEBUG] 2024-12-07 11:53:40.970 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-12-07 11:53:40.970 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.FavoriteTeam)] with identifierForTableGroup [com.radams.entity.FavoriteTeam] for NavigablePath [com.radams.entity.FavoriteTeam] 
[DEBUG] 2024-12-07 11:53:40.970 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3c6b300a] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team] for NavigablePath [com.radams.entity.FavoriteTeam.team] 
[DEBUG] 2024-12-07 11:53:40.970 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-12-07 11:53:40.970 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4247093b] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team.sport] for NavigablePath [com.radams.entity.FavoriteTeam.team.sport] 
[DEBUG] 2024-12-07 11:53:40.970 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-12-07 11:53:40.971 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@44a13699] with identifierForTableGroup [com.radams.entity.FavoriteTeam.user] for NavigablePath [com.radams.entity.FavoriteTeam.user] 
[DEBUG] 2024-12-07 11:53:40.971 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-12-07 11:53:40.971 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.FavoriteTeam]
 |  +-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.team]
 |  \-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.user]

[DEBUG] 2024-12-07 11:53:40.971 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ft1 : com.radams.entity.FavoriteTeam) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.FavoriteTeam.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.FavoriteTeam.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.FavoriteTeam.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-12-07 11:53:40.971 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.FavoriteTeam
[DEBUG] 2024-12-07 11:53:40.971 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-12-07 11:53:40.971 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (team_id,user_id) values (?,?)
[DEBUG] 2024-12-07 11:53:40.971 [main] AbstractEntityPersister -  Update (0): update favorite_teams set team_id=?,user_id=? where id=?
[DEBUG] 2024-12-07 11:53:40.971 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-12-07 11:53:40.971 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-12-07 11:53:40.971 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-12-07 11:53:40.972 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-12-07 11:53:40.973 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@b787274] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-12-07 11:53:40.974 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-12-07 11:53:40.980 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-12-07 11:53:40.980 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : teams as t1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-12-07 11:53:40.980 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-12-07 11:53:40.980 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-12-07 11:53:40.980 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-12-07 11:53:40.980 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-12-07 11:53:40.980 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-12-07 11:53:40.980 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-12-07 11:53:40.980 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-12-07 11:53:40.980 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-12-07 11:53:40.980 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5cc075da] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-12-07 11:53:40.980 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-12-07 11:53:40.980 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4258106] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-12-07 11:53:40.980 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-12-07 11:53:40.981 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@24f3fb87] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-12-07 11:53:40.981 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-12-07 11:53:40.982 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
                  primaryTableReference : teams as t1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-12-07 11:53:40.982 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-12-07 11:53:40.982 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-12-07 11:53:40.982 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-12-07 11:53:40.982 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-12-07 11:53:40.982 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-12-07 11:53:40.983 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-12-07 11:53:40.983 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7b5c9412] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-12-07 11:53:40.983 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-12-07 11:53:40.983 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@20723ee] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-12-07 11:53:40.983 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-12-07 11:53:40.984 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@21c5c68a] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-12-07 11:53:40.984 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-12-07 11:53:40.984 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5bb39285] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-12-07 11:53:40.985 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-12-07 11:53:40.985 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-12-07 11:53:40.985 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-12-07 11:53:40.985 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-12-07 11:53:40.985 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1700d089] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-12-07 11:53:40.985 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-12-07 11:53:40.985 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77e6053] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-12-07 11:53:40.985 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-12-07 11:53:40.985 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-12-07 11:53:40.986 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-12-07 11:53:41.007 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-12-07 11:53:41.007 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-12-07 11:53:41.010 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-12-07 11:53:41.010 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-12-07 11:53:41.011 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@183fc2fa] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5c9e6d95]
[DEBUG] 2024-12-07 11:53:41.012 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-12-07 11:53:41.012 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-12-07 11:53:41.013 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-12-07 11:53:41.013 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-12-07 11:53:41.014 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@55e4dd68
[DEBUG] 2024-12-07 11:53:41.014 [main] SessionFactoryRegistry - Registering SessionFactory: a2a9e32e-1783-439a-99e9-bc3828efa359 (<unnamed>)
[DEBUG] 2024-12-07 11:53:41.014 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-12-07 11:53:41.014 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-12-07 11:53:41.042 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-12-07 11:53:41.106 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-12-07 11:53:41.106 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team(306648790376394))] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-12-07 11:53:41.113 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@40d370fa] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-12-07 11:53:41.114 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team(306648790376394)]
 |  +-CircularFetchImpl [com.radams.entity.Team(306648790376394).sport]
 |  +-BasicFetch [com.radams.entity.Team(306648790376394).teamAbv]
 |  \-BasicFetch [com.radams.entity.Team(306648790376394).teamName]

[DEBUG] 2024-12-07 11:53:41.114 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team(306648790376394)) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team(306648790376394).sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-12-07 11:53:41.121 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2024-12-07 11:53:41.134 [main] results - Initializer list:
	  com.radams.entity.Team(306648790376394) -> EntityResultInitializer(com.radams.entity.Team(306648790376394))@386090072 (SingleTableEntityPersister(com.radams.entity.Team))
	  com.radams.entity.Team(306648790376394).sport -> EntitySelectFetchInitializer(com.radams.entity.Team(306648790376394).sport)@1041107879 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1326191625)

[DEBUG] 2024-12-07 11:53:41.137 [main] SQL - select t1_0.id,t1_0.sport_id,t1_0.team_abv,t1_0.team_name from teams t1_0
[DEBUG] 2024-12-07 11:53:41.151 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-12-07 11:53:41.151 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(306648790376394)): 1
[DEBUG] 2024-12-07 11:53:41.152 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team(306648790376394)#1] : 76757235
[DEBUG] 2024-12-07 11:53:41.152 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-12-07 11:53:41.152 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.radams.entity.Team(306648790376394).sport#1) : 1
[DEBUG] 2024-12-07 11:53:41.155 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-12-07 11:53:41.158 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1622460244 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@746876245 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1934714849 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1734909057)

[DEBUG] 2024-12-07 11:53:41.158 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_abv,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-12-07 11:53:41.159 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-12-07 11:53:41.159 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-12-07 11:53:41.159 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-12-07 11:53:41.159 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-12-07 11:53:41.160 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-12-07 11:53:41.160 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-12-07 11:53:41.160 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 807296291
[DEBUG] 2024-12-07 11:53:41.163 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@895177676
[DEBUG] 2024-12-07 11:53:41.164 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@895177676
[DEBUG] 2024-12-07 11:53:41.164 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@895177676
[DEBUG] 2024-12-07 11:53:41.165 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-12-07 11:53:41.168 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-12-07 11:53:41.168 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@346330b6
[DEBUG] 2024-12-07 11:53:41.168 [main] results - Extracted JDBC value [3] - [3]
[DEBUG] 2024-12-07 11:53:41.168 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-12-07 11:53:41.168 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-12-07 11:53:41.168 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-12-07 11:53:41.168 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-12-07 11:53:41.168 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-12-07 11:53:41.168 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#3] : 1379031360
[DEBUG] 2024-12-07 11:53:41.168 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@895177676
[DEBUG] 2024-12-07 11:53:41.168 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@895177676
[DEBUG] 2024-12-07 11:53:41.168 [main] results - Extracted JDBC value [4] - [CHI]
[DEBUG] 2024-12-07 11:53:41.168 [main] results - Extracted JDBC value [5] - [Bulls]
[DEBUG] 2024-12-07 11:53:41.168 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#3
[DEBUG] 2024-12-07 11:53:41.168 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@895177676
[DEBUG] 2024-12-07 11:53:41.168 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@346330b6
[DEBUG] 2024-12-07 11:53:41.169 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-12-07 11:53:41.171 [main] entity - (EntitySelectFetchInitializer) Entity [com.radams.entity.Team(306648790376394).sport#1] : 1 has being loaded by session.internalLoad.
[DEBUG] 2024-12-07 11:53:41.171 [main] results - Extracted JDBC value [2] - [ATL]
[DEBUG] 2024-12-07 11:53:41.171 [main] results - Extracted JDBC value [3] - [Hawks]
[DEBUG] 2024-12-07 11:53:41.171 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team(306648790376394)#1
[DEBUG] 2024-12-07 11:53:41.171 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c200e57
[DEBUG] 2024-12-07 11:53:41.171 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2024-12-07 11:53:41.171 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(306648790376394)): 3
[DEBUG] 2024-12-07 11:53:41.172 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c200e57
[DEBUG] 2024-12-07 11:53:41.172 [main] results - Extracted JDBC value [0] - [4]
[DEBUG] 2024-12-07 11:53:41.172 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(306648790376394)): 4
[DEBUG] 2024-12-07 11:53:41.172 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team(306648790376394)#4] : 487553999
[DEBUG] 2024-12-07 11:53:41.172 [main] results - Extracted JDBC value [1] - [2]
[DEBUG] 2024-12-07 11:53:41.172 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.radams.entity.Team(306648790376394).sport#2) : 2
[DEBUG] 2024-12-07 11:53:41.172 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-12-07 11:53:41.172 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@219040114 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@427339989 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1700153115 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1734909057)

[DEBUG] 2024-12-07 11:53:41.172 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_abv,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-12-07 11:53:41.174 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2024-12-07 11:53:41.174 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 4
[DEBUG] 2024-12-07 11:53:41.174 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-12-07 11:53:41.174 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-12-07 11:53:41.174 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-12-07 11:53:41.174 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-12-07 11:53:41.174 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 1555521648
[DEBUG] 2024-12-07 11:53:41.174 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@860285190
[DEBUG] 2024-12-07 11:53:41.175 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@860285190
[DEBUG] 2024-12-07 11:53:41.175 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@860285190
[DEBUG] 2024-12-07 11:53:41.175 [main] results - Extracted JDBC value [1] - [NFL]
[DEBUG] 2024-12-07 11:53:41.175 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-12-07 11:53:41.175 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@443ac5b8
[DEBUG] 2024-12-07 11:53:41.175 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-12-07 11:53:41.175 [main] entity - (EntitySelectFetchInitializer) Entity [com.radams.entity.Team(306648790376394).sport#2] : 2 has being loaded by session.internalLoad.
[DEBUG] 2024-12-07 11:53:41.175 [main] results - Extracted JDBC value [2] - [ATL]
[DEBUG] 2024-12-07 11:53:41.175 [main] results - Extracted JDBC value [3] - [Falcons]
[DEBUG] 2024-12-07 11:53:41.175 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team(306648790376394)#4
[DEBUG] 2024-12-07 11:53:41.175 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c200e57
[DEBUG] 2024-12-07 11:53:41.175 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-12-07 11:53:41.176 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-12-07 11:53:42.585 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-12-07 11:53:42.585 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team(306650314796086))] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-12-07 11:53:42.585 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@857f1a7] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-12-07 11:53:42.585 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team(306650314796086)]
 |  +-CircularFetchImpl [com.radams.entity.Team(306650314796086).sport]
 |  +-BasicFetch [com.radams.entity.Team(306650314796086).teamAbv]
 |  \-BasicFetch [com.radams.entity.Team(306650314796086).teamName]

[DEBUG] 2024-12-07 11:53:42.586 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team(306650314796086)) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team(306650314796086).sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-12-07 11:53:42.586 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2024-12-07 11:53:42.586 [main] results - Initializer list:
	  com.radams.entity.Team(306650314796086).sport -> EntitySelectFetchInitializer(com.radams.entity.Team(306650314796086).sport)@1747968379 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1326191625)
	  com.radams.entity.Team(306650314796086) -> EntityResultInitializer(com.radams.entity.Team(306650314796086))@1099685353 (SingleTableEntityPersister(com.radams.entity.Team))

[DEBUG] 2024-12-07 11:53:42.586 [main] SQL - select t1_0.id,t1_0.sport_id,t1_0.team_abv,t1_0.team_name from teams t1_0
[DEBUG] 2024-12-07 11:53:42.587 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-12-07 11:53:42.587 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(306650314796086)): 1
[DEBUG] 2024-12-07 11:53:42.587 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team(306650314796086)#1] : 929035017
[DEBUG] 2024-12-07 11:53:42.587 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-12-07 11:53:42.587 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.radams.entity.Team(306650314796086).sport#1) : 1
[DEBUG] 2024-12-07 11:53:42.587 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-12-07 11:53:42.588 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@863768292 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1739628084 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1872061772 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1734909057)

[DEBUG] 2024-12-07 11:53:42.588 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_abv,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-12-07 11:53:42.588 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-12-07 11:53:42.588 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-12-07 11:53:42.588 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-12-07 11:53:42.588 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-12-07 11:53:42.588 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-12-07 11:53:42.588 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-12-07 11:53:42.589 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1104693947
[DEBUG] 2024-12-07 11:53:42.589 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1409842139
[DEBUG] 2024-12-07 11:53:42.589 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1409842139
[DEBUG] 2024-12-07 11:53:42.589 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1409842139
[DEBUG] 2024-12-07 11:53:42.589 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-12-07 11:53:42.589 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-12-07 11:53:42.589 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@587f6634
[DEBUG] 2024-12-07 11:53:42.589 [main] results - Extracted JDBC value [3] - [3]
[DEBUG] 2024-12-07 11:53:42.589 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-12-07 11:53:42.589 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-12-07 11:53:42.589 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-12-07 11:53:42.589 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-12-07 11:53:42.589 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-12-07 11:53:42.589 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#3] : 1300011842
[DEBUG] 2024-12-07 11:53:42.589 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@1409842139
[DEBUG] 2024-12-07 11:53:42.589 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1409842139
[DEBUG] 2024-12-07 11:53:42.589 [main] results - Extracted JDBC value [4] - [CHI]
[DEBUG] 2024-12-07 11:53:42.589 [main] results - Extracted JDBC value [5] - [Bulls]
[DEBUG] 2024-12-07 11:53:42.589 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#3
[DEBUG] 2024-12-07 11:53:42.589 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1409842139
[DEBUG] 2024-12-07 11:53:42.589 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@587f6634
[DEBUG] 2024-12-07 11:53:42.589 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-12-07 11:53:42.590 [main] entity - (EntitySelectFetchInitializer) Entity [com.radams.entity.Team(306650314796086).sport#1] : 1 has being loaded by session.internalLoad.
[DEBUG] 2024-12-07 11:53:42.590 [main] results - Extracted JDBC value [2] - [ATL]
[DEBUG] 2024-12-07 11:53:42.590 [main] results - Extracted JDBC value [3] - [Hawks]
[DEBUG] 2024-12-07 11:53:42.590 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team(306650314796086)#1
[DEBUG] 2024-12-07 11:53:42.590 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ef28dc4
[DEBUG] 2024-12-07 11:53:42.590 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2024-12-07 11:53:42.590 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(306650314796086)): 3
[DEBUG] 2024-12-07 11:53:42.590 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ef28dc4
[DEBUG] 2024-12-07 11:53:42.590 [main] results - Extracted JDBC value [0] - [4]
[DEBUG] 2024-12-07 11:53:42.590 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(306650314796086)): 4
[DEBUG] 2024-12-07 11:53:42.590 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team(306650314796086)#4] : 1504964962
[DEBUG] 2024-12-07 11:53:42.590 [main] results - Extracted JDBC value [1] - [2]
[DEBUG] 2024-12-07 11:53:42.590 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.radams.entity.Team(306650314796086).sport#2) : 2
[DEBUG] 2024-12-07 11:53:42.590 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-12-07 11:53:42.590 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2061394598 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1406226484 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@160918311 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1734909057)

[DEBUG] 2024-12-07 11:53:42.590 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_abv,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-12-07 11:53:42.591 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2024-12-07 11:53:42.591 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 4
[DEBUG] 2024-12-07 11:53:42.591 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-12-07 11:53:42.591 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-12-07 11:53:42.591 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-12-07 11:53:42.591 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-12-07 11:53:42.591 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 813768593
[DEBUG] 2024-12-07 11:53:42.591 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1005849716
[DEBUG] 2024-12-07 11:53:42.591 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1005849716
[DEBUG] 2024-12-07 11:53:42.591 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1005849716
[DEBUG] 2024-12-07 11:53:42.591 [main] results - Extracted JDBC value [1] - [NFL]
[DEBUG] 2024-12-07 11:53:42.591 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-12-07 11:53:42.591 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@665f88e1
[DEBUG] 2024-12-07 11:53:42.591 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-12-07 11:53:42.591 [main] entity - (EntitySelectFetchInitializer) Entity [com.radams.entity.Team(306650314796086).sport#2] : 2 has being loaded by session.internalLoad.
[DEBUG] 2024-12-07 11:53:42.591 [main] results - Extracted JDBC value [2] - [ATL]
[DEBUG] 2024-12-07 11:53:42.592 [main] results - Extracted JDBC value [3] - [Falcons]
[DEBUG] 2024-12-07 11:53:42.592 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team(306650314796086)#4
[DEBUG] 2024-12-07 11:53:42.592 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ef28dc4
[DEBUG] 2024-12-07 11:53:42.592 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-12-07 11:53:42.592 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
