[DEBUG] 2024-11-27 09:45:05.142 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-27 09:45:05.153 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-27 09:45:05.183 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-27 09:45:05.185 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-27 09:45:05.259 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-27 09:45:05.266 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-27 09:45:05.554 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-27 09:45:05.558 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-27 09:45:05.558 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-27 09:45:05.559 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 09:45:05.559 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 09:45:05.559 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-27 09:45:05.560 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-27 09:45:05.561 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-27 09:45:05.562 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 09:45:05.562 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-27 09:45:05.563 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-27 09:45:05.563 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 09:45:05.564 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-27 09:45:05.573 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-27 09:45:05.573 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-27 09:45:05.675 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-27 09:45:05.675 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-27 09:45:05.676 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-27 09:45:05.676 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-27 09:45:05.676 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-27 09:45:05.676 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-27 09:45:05.676 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-27 09:45:05.676 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-27 09:45:05.676 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-27 09:45:05.676 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-27 09:45:05.676 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-27 09:45:05.676 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-27 09:45:05.677 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-27 09:45:05.677 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-27 09:45:05.677 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-27 09:45:05.677 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-27 09:45:05.677 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-27 09:45:05.677 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-27 09:45:05.677 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-27 09:45:05.677 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-27 09:45:05.677 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-27 09:45:05.677 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-27 09:45:05.677 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-27 09:45:05.677 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-27 09:45:05.678 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-27 09:45:05.678 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-27 09:45:05.678 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-27 09:45:05.678 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-27 09:45:05.678 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-27 09:45:05.678 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-27 09:45:05.678 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-27 09:45:05.678 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-27 09:45:05.678 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-27 09:45:05.678 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-27 09:45:05.678 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-27 09:45:05.678 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-27 09:45:05.679 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-27 09:45:05.679 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-27 09:45:05.679 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-27 09:45:05.679 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-27 09:45:05.679 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-27 09:45:05.679 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-27 09:45:05.679 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-27 09:45:05.679 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-27 09:45:05.679 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-27 09:45:05.679 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-27 09:45:05.679 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-27 09:45:05.680 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-27 09:45:05.680 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-27 09:45:05.680 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-27 09:45:05.680 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-27 09:45:05.680 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-27 09:45:05.680 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-27 09:45:05.680 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-27 09:45:05.680 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-27 09:45:05.680 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-27 09:45:05.680 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-27 09:45:05.680 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-27 09:45:05.680 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-27 09:45:05.681 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-27 09:45:05.681 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-27 09:45:05.681 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-27 09:45:05.681 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-27 09:45:05.681 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-27 09:45:05.681 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-27 09:45:05.681 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-27 09:45:05.681 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-27 09:45:05.681 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-27 09:45:05.681 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-27 09:45:05.681 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-27 09:45:05.681 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-27 09:45:05.682 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-27 09:45:05.682 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-27 09:45:05.682 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-27 09:45:05.682 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-27 09:45:05.682 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-27 09:45:05.682 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-27 09:45:05.682 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-27 09:45:05.682 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-27 09:45:05.682 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-27 09:45:05.682 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-27 09:45:05.682 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@12fcb2c3
[DEBUG] 2024-11-27 09:45:05.682 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@12fcb2c3
[DEBUG] 2024-11-27 09:45:05.682 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57bd6a8f
[DEBUG] 2024-11-27 09:45:05.683 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@39ab5ef7
[DEBUG] 2024-11-27 09:45:05.683 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@517704
[DEBUG] 2024-11-27 09:45:05.683 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@517704
[DEBUG] 2024-11-27 09:45:05.683 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@77cca767
[DEBUG] 2024-11-27 09:45:05.683 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@77cca767
[DEBUG] 2024-11-27 09:45:05.683 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4b195203
[DEBUG] 2024-11-27 09:45:05.683 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4b195203
[DEBUG] 2024-11-27 09:45:05.683 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4b195203
[DEBUG] 2024-11-27 09:45:05.683 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@28a6e171
[DEBUG] 2024-11-27 09:45:05.683 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@28a6e171
[DEBUG] 2024-11-27 09:45:05.683 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@28a6e171
[DEBUG] 2024-11-27 09:45:05.683 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@23444a36
[DEBUG] 2024-11-27 09:45:05.683 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@31a136a6
[DEBUG] 2024-11-27 09:45:05.684 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@30a9e3db
[DEBUG] 2024-11-27 09:45:05.684 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@30a9e3db
[DEBUG] 2024-11-27 09:45:05.684 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2f9b21d6
[DEBUG] 2024-11-27 09:45:05.684 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2f9b21d6
[DEBUG] 2024-11-27 09:45:05.684 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2f9b21d6
[DEBUG] 2024-11-27 09:45:05.684 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2e0fdbe9
[DEBUG] 2024-11-27 09:45:05.684 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@16a3cc88
[DEBUG] 2024-11-27 09:45:05.684 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@696b52bc
[DEBUG] 2024-11-27 09:45:05.684 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@696b52bc
[DEBUG] 2024-11-27 09:45:05.684 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1f884bd6
[DEBUG] 2024-11-27 09:45:05.684 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1f884bd6
[DEBUG] 2024-11-27 09:45:05.684 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1f884bd6
[DEBUG] 2024-11-27 09:45:05.685 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4f081b5d
[DEBUG] 2024-11-27 09:45:05.685 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4f081b5d
[DEBUG] 2024-11-27 09:45:05.685 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@474749b8
[DEBUG] 2024-11-27 09:45:05.685 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@474749b8
[DEBUG] 2024-11-27 09:45:05.685 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@740a0d5e
[DEBUG] 2024-11-27 09:45:05.685 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@740a0d5e
[DEBUG] 2024-11-27 09:45:05.685 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@29013ef2
[DEBUG] 2024-11-27 09:45:05.685 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@29013ef2
[DEBUG] 2024-11-27 09:45:05.685 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@265c1a7c
[DEBUG] 2024-11-27 09:45:05.685 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@265c1a7c
[DEBUG] 2024-11-27 09:45:05.685 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5b2b8d86
[DEBUG] 2024-11-27 09:45:05.685 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7fef0b40
[DEBUG] 2024-11-27 09:45:05.690 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@280fafd
[DEBUG] 2024-11-27 09:45:05.690 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@280fafd
[DEBUG] 2024-11-27 09:45:05.691 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@626b639e
[DEBUG] 2024-11-27 09:45:05.692 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@273fa9e
[DEBUG] 2024-11-27 09:45:05.692 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@527a8665
[DEBUG] 2024-11-27 09:45:05.692 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7ab2a07e
[DEBUG] 2024-11-27 09:45:05.692 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@437c4b25
[DEBUG] 2024-11-27 09:45:05.692 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5ec6fede
[DEBUG] 2024-11-27 09:45:05.692 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@580902cd
[DEBUG] 2024-11-27 09:45:05.692 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3757e8e2
[DEBUG] 2024-11-27 09:45:05.692 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1653b84e
[INFO ] 2024-11-27 09:45:05.720 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-27 09:45:05.720 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-27 09:45:05.720 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-27 09:45:05.819 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-27 09:45:05.901 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-27 09:45:05.902 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-27 09:45:05.902 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-27 09:45:05.943 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-27 09:45:05.944 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-27 09:45:05.950 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-27 09:45:05.950 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-27 09:45:05.966 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@664db2ca) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1491cd6c)
[DEBUG] 2024-11-27 09:45:05.966 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@423f8a73) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1aedf08d)
[DEBUG] 2024-11-27 09:45:05.966 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@113dcaf8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b5d9f1e)
[DEBUG] 2024-11-27 09:45:05.967 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@350ff014) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@401317a0)
[DEBUG] 2024-11-27 09:45:05.967 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f866f50) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5844a2d1)
[DEBUG] 2024-11-27 09:45:05.967 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1201769d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4af7dd6a)
[DEBUG] 2024-11-27 09:45:05.967 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4607d78b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b28b7b0)
[DEBUG] 2024-11-27 09:45:05.967 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22048bd6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@566c1e71)
[DEBUG] 2024-11-27 09:45:05.967 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e2f20b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@504497fa)
[DEBUG] 2024-11-27 09:45:05.968 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-27 09:45:05.968 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-27 09:45:05.969 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-27 09:45:05.971 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 09:45:05.971 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 09:45:05.974 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4df7d9ee
[DEBUG] 2024-11-27 09:45:05.974 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@626b639e`
[DEBUG] 2024-11-27 09:45:05.979 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 09:45:05.979 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 09:45:05.979 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 09:45:05.982 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 09:45:05.982 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 09:45:05.982 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 09:45:05.982 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 09:45:05.982 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 09:45:05.982 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 09:45:05.983 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 09:45:05.983 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 09:45:05.983 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 09:45:05.984 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6fb0261e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@d6b532f]
[DEBUG] 2024-11-27 09:45:06.022 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-27 09:45:06.051 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-27 09:45:06.059 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-27 09:45:06.066 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-27 09:45:06.075 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 09:45:06.093 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:45:06.094 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 09:45:06.094 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 09:45:06.096 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 09:45:06.100 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-27 09:45:06.104 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 09:45:06.107 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-27 09:45:06.108 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 09:45:06.112 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 09:45:06.118 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 09:45:06.118 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:45:06.128 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-27 09:45:06.129 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:45:06.130 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 09:45:06.130 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 09:45:06.131 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 09:45:06.131 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 09:45:06.134 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 09:45:06.136 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-27 09:45:06.137 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-27 09:45:06.137 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-27 09:45:06.137 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-27 09:45:06.137 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-27 09:45:06.137 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-27 09:45:06.137 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-27 09:45:06.138 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 09:45:06.142 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-27 09:45:06.143 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-27 09:45:06.143 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-27 09:45:06.143 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 09:45:06.144 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:45:06.144 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 09:45:06.144 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 09:45:06.144 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 09:45:06.144 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-27 09:45:06.144 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 09:45:06.144 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-27 09:45:06.144 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 09:45:06.145 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 09:45:06.145 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-27 09:45:06.145 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-27 09:45:06.145 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-27 09:45:06.145 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-27 09:45:06.145 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-27 09:45:06.145 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-27 09:45:06.146 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 09:45:06.146 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:45:06.146 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-27 09:45:06.146 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:45:06.147 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-27 09:45:06.147 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-27 09:45:06.147 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 09:45:06.147 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 09:45:06.147 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 09:45:06.147 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-27 09:45:06.148 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 09:45:06.148 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-27 09:45:06.149 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-27 09:45:06.149 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-27 09:45:06.149 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 09:45:06.152 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:45:06.152 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 09:45:06.152 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 09:45:06.152 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 09:45:06.152 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-27 09:45:06.153 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 09:45:06.153 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-27 09:45:06.153 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 09:45:06.153 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 09:45:06.153 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-27 09:45:06.154 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:45:06.156 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-27 09:45:06.157 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-27 09:45:06.157 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-27 09:45:06.157 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-27 09:45:06.157 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-27 09:45:06.157 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-27 09:45:06.157 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-27 09:45:06.157 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-27 09:45:06.157 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:45:06.158 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-27 09:45:06.158 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 09:45:06.159 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 09:45:06.159 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-27 09:45:06.160 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 09:45:06.161 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-27 09:45:06.161 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 09:45:06.161 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-27 09:45:06.165 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-27 09:45:06.165 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-27 09:45:06.165 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-27 09:45:06.165 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 09:45:06.167 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-27 09:45:06.169 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-27 09:45:06.170 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-27 09:45:06.170 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 09:45:06.170 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 09:45:06.171 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-27 09:45:06.171 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-27 09:45:06.171 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-27 09:45:06.171 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 09:45:06.171 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 09:45:06.172 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 09:45:06.180 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 09:45:06.181 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 09:45:06.384 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-27 09:45:06.437 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 09:45:06.437 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter4166199287713182784.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire14336145598099003710tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_08766042148589106441tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter4166199287713182784.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@35454c7a, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-27 09:45:06.442 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-27 09:45:06.447 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 09:45:06.501 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-27 09:45:06.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-27 09:45:06.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-27 09:45:06.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-27 09:45:06.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3620eab] under count; prior registration was null
[DEBUG] 2024-11-27 09:45:06.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6cc56b32] under every; prior registration was null
[DEBUG] 2024-11-27 09:45:06.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@43fe2008] under any; prior registration was null
[DEBUG] 2024-11-27 09:45:06.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-27 09:45:06.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-27 09:45:06.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-27 09:45:06.508 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-27 09:45:06.508 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-27 09:45:06.508 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-27 09:45:06.508 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-27 09:45:06.508 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-27 09:45:06.508 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-27 09:45:06.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-27 09:45:06.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-27 09:45:06.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-27 09:45:06.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-27 09:45:06.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-27 09:45:06.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-27 09:45:06.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-27 09:45:06.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-27 09:45:06.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70f5f59d] under sinh; prior registration was null
[DEBUG] 2024-11-27 09:45:06.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74431832] under cosh; prior registration was null
[DEBUG] 2024-11-27 09:45:06.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fa2a006] under tanh; prior registration was null
[DEBUG] 2024-11-27 09:45:06.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70592729] under pi; prior registration was null
[DEBUG] 2024-11-27 09:45:06.513 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fdf7da2] under log; prior registration was null
[DEBUG] 2024-11-27 09:45:06.513 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-27 09:45:06.513 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-27 09:45:06.513 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-27 09:45:06.513 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-27 09:45:06.513 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-27 09:45:06.514 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-27 09:45:06.514 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-27 09:45:06.514 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-27 09:45:06.514 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-27 09:45:06.514 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-27 09:45:06.514 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-27 09:45:06.514 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-27 09:45:06.515 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2db461b5] under position; prior registration was null
[DEBUG] 2024-11-27 09:45:06.518 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4ca5cb99] under overlay; prior registration was null
[DEBUG] 2024-11-27 09:45:06.519 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@70169464] under trim; prior registration was null
[DEBUG] 2024-11-27 09:45:06.520 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@13b29b34] under cast; prior registration was null
[DEBUG] 2024-11-27 09:45:06.520 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@25589735] under collate; prior registration was null
[DEBUG] 2024-11-27 09:45:06.520 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7dddfc35] under extract; prior registration was null
[DEBUG] 2024-11-27 09:45:06.521 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-27 09:45:06.521 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-27 09:45:06.521 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@68df8c6] under ifnull; prior registration was null
[DEBUG] 2024-11-27 09:45:06.521 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-27 09:45:06.521 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-27 09:45:06.521 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4a944af9] under pad; prior registration was null
[DEBUG] 2024-11-27 09:45:06.522 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4b50c21] under str; prior registration was null
[DEBUG] 2024-11-27 09:45:06.523 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5f33e6d] under format; prior registration was null
[DEBUG] 2024-11-27 09:45:06.523 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@a1cb94] under timestampadd; prior registration was null
[DEBUG] 2024-11-27 09:45:06.524 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@156ff70f] under timestampdiff; prior registration was null
[DEBUG] 2024-11-27 09:45:06.524 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-27 09:45:06.524 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-27 09:45:06.524 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4470106b] under current_date; prior registration was null
[DEBUG] 2024-11-27 09:45:06.524 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@690ed13a] under current_time; prior registration was null
[DEBUG] 2024-11-27 09:45:06.524 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@681311a7] under current_timestamp; prior registration was null
[DEBUG] 2024-11-27 09:45:06.524 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-27 09:45:06.524 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-27 09:45:06.525 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-27 09:45:06.525 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2c7375da] under local_date; prior registration was null
[DEBUG] 2024-11-27 09:45:06.525 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68c4db77] under local_time; prior registration was null
[DEBUG] 2024-11-27 09:45:06.525 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@775c4054] under local_datetime; prior registration was null
[DEBUG] 2024-11-27 09:45:06.525 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7b2e931] under offset_datetime; prior registration was null
[DEBUG] 2024-11-27 09:45:06.525 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-27 09:45:06.525 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-27 09:45:06.525 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-27 09:45:06.525 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-27 09:45:06.525 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@305881b8] under instant; prior registration was null
[DEBUG] 2024-11-27 09:45:06.525 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-27 09:45:06.525 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@f08d676] under sql; prior registration was null
[DEBUG] 2024-11-27 09:45:06.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-27 09:45:06.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-27 09:45:06.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-27 09:45:06.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-27 09:45:06.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fdf7da2
[DEBUG] 2024-11-27 09:45:06.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-27 09:45:06.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-27 09:45:06.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-27 09:45:06.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-27 09:45:06.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-27 09:45:06.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-27 09:45:06.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-27 09:45:06.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-27 09:45:06.527 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3b01897f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-27 09:45:06.527 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6b3b2c34] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-27 09:45:06.527 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-27 09:45:06.527 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-27 09:45:06.527 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-27 09:45:06.527 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-27 09:45:06.527 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-27 09:45:06.527 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-27 09:45:06.527 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-27 09:45:06.527 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-27 09:45:06.527 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-27 09:45:06.527 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-27 09:45:06.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-27 09:45:06.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-27 09:45:06.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-27 09:45:06.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-27 09:45:06.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28b5d5dc] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2db461b5
[DEBUG] 2024-11-27 09:45:06.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-27 09:45:06.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-27 09:45:06.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-27 09:45:06.533 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1eb6037d] under trunc; prior registration was null
[DEBUG] 2024-11-27 09:45:06.533 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-27 09:45:06.533 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-27 09:45:06.533 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@335b3d6] under bitand; prior registration was null
[DEBUG] 2024-11-27 09:45:06.533 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a5ce4b8] under bitor; prior registration was null
[DEBUG] 2024-11-27 09:45:06.533 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@38848217] under bitxor; prior registration was null
[DEBUG] 2024-11-27 09:45:06.534 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1607d391] under bitnot; prior registration was null
[DEBUG] 2024-11-27 09:45:06.534 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-27 09:45:06.534 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-27 09:45:06.534 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-27 09:45:06.534 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-27 09:45:06.534 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-27 09:45:06.534 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-27 09:45:06.534 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-27 09:45:06.534 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-27 09:45:06.534 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-27 09:45:06.534 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-27 09:45:06.534 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-27 09:45:06.534 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-27 09:45:06.534 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-27 09:45:06.535 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@38826984] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5f33e6d
[DEBUG] 2024-11-27 09:45:06.535 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-27 09:45:06.535 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-27 09:45:06.535 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-27 09:45:06.535 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-27 09:45:06.535 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@68c4db77
[DEBUG] 2024-11-27 09:45:06.535 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@775c4054
[DEBUG] 2024-11-27 09:45:06.535 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-27 09:45:06.535 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65262308] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70592729
[DEBUG] 2024-11-27 09:45:06.535 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@792e8181] under chr; prior registration was null
[DEBUG] 2024-11-27 09:45:06.535 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-27 09:45:06.535 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@511d5e6e] under sysdate; prior registration was null
[DEBUG] 2024-11-27 09:45:06.535 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-27 09:45:06.536 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-27 09:45:06.536 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-27 09:45:06.536 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-27 09:45:06.536 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-27 09:45:06.536 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 09:45:06.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@189633f2] under rank; prior registration was null
[DEBUG] 2024-11-27 09:45:06.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@76b05c0] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 09:45:06.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2b974137] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 09:45:06.538 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7402c49f] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 09:45:06.538 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@71734463] under listagg; prior registration was null
[DEBUG] 2024-11-27 09:45:06.542 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.542 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.542 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 09:45:06.543 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 09:45:06.543 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 09:45:06.543 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 09:45:06.543 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.543 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.543 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 09:45:06.543 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 09:45:06.543 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 09:45:06.543 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 09:45:06.543 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 09:45:06.543 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 09:45:06.543 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 09:45:06.544 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 09:45:06.545 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 09:45:06.546 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.547 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 09:45:06.548 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 09:45:06.549 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 09:45:06.549 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.549 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.549 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 09:45:06.549 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 09:45:06.549 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 09:45:06.555 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 09:45:06.675 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 09:45:06.676 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 09:45:06.791 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 09:45:06.795 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 09:45:06.799 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 09:45:06.799 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 09:45:06.799 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 09:45:06.799 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 09:45:06.970 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 09:45:06.974 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 09:45:06.974 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 09:45:07.004 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 09:45:07.004 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 09:45:07.021 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 09:45:07.021 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 09:45:07.021 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 09:45:07.030 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 09:45:07.046 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 09:45:07.048 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 09:45:07.048 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 09:45:07.048 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 09:45:07.048 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 09:45:07.048 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 09:45:07.076 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 09:45:07.076 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 09:45:07.079 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-27 09:45:07.079 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 09:45:07.079 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 09:45:07.079 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 09:45:07.079 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 09:45:07.080 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 09:45:07.080 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 09:45:07.080 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 09:45:07.080 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 09:45:07.080 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 09:45:07.080 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 09:45:07.080 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 09:45:07.156 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 09:45:07.158 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 09:45:07.172 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1f3aa970] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 09:45:07.173 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 09:45:07.178 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@10ec4721] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-27 09:45:07.179 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 09:45:07.185 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-27 09:45:07.196 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 09:45:07.206 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 09:45:07.206 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 09:45:07.206 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-27 09:45:07.206 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-27 09:45:07.206 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 09:45:07.206 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 09:45:07.206 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 09:45:07.207 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 09:45:07.208 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5dfec221] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 09:45:07.209 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 09:45:07.216 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5730b513] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-27 09:45:07.216 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 09:45:07.218 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 09:45:07.218 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 09:45:07.218 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 09:45:07.218 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 09:45:07.218 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 09:45:07.218 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 09:45:07.218 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 09:45:07.218 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 09:45:07.218 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 09:45:07.219 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 09:45:07.219 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@73db7df0] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 09:45:07.219 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 09:45:07.219 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@44a485bc] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-27 09:45:07.219 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 09:45:07.219 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 09:45:07.219 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 09:45:07.219 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 09:45:07.219 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 09:45:07.220 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 09:45:07.220 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 09:45:07.220 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 09:45:07.221 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 09:45:07.221 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5718e77c] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 09:45:07.221 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 09:45:07.221 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@289da1bc] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-27 09:45:07.221 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 09:45:07.222 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b5cdd07] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 09:45:07.223 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 09:45:07.223 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 09:45:07.224 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 09:45:07.224 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 09:45:07.224 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@4fce3ed7] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 09:45:07.224 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 09:45:07.224 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@54033a65] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 09:45:07.224 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4fb99927] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-27 09:45:07.224 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 09:45:07.224 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 09:45:07.224 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 09:45:07.224 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 09:45:07.252 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 09:45:07.253 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 09:45:07.256 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 09:45:07.257 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 09:45:07.258 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6fb0261e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@314c6f89]
[DEBUG] 2024-11-27 09:45:07.259 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 09:45:07.259 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 09:45:07.259 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 09:45:07.259 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 09:45:07.262 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7c9512c6
[DEBUG] 2024-11-27 09:45:07.262 [main] SessionFactoryRegistry - Registering SessionFactory: 0111daf7-f3f5-4756-b36a-d5a633fd421d (<unnamed>)
[DEBUG] 2024-11-27 09:45:07.262 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 09:45:07.262 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 09:45:07.300 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 09:45:07.318 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:45:07.335 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@111667836 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@102849021 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@686350055 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@2084023356)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@1424392446 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@245418396 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@377207092)

[DEBUG] 2024-11-27 09:45:07.341 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-27 09:45:07.364 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:45:07.382 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:45:07.382 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@1014870248 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@139193534 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@333199419 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@2084023356)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@1753609207 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@959378687 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@377207092)

[DEBUG] 2024-11-27 09:45:07.382 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-27 09:45:07.383 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:45:07.535 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:45:07.535 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@577672681 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@666851147)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1287328228 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@846052901 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1685759068 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@958575255 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@755146854)

[DEBUG] 2024-11-27 09:45:07.535 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:45:07.539 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-27 09:45:07.539 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-27 09:45:07.539 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-27 09:45:07.539 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-27 09:45:07.539 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 09:45:07.539 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 09:45:07.540 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 09:45:07.540 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-27 09:45:07.541 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1706773689
[DEBUG] 2024-11-27 09:45:07.546 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1046265086
[DEBUG] 2024-11-27 09:45:07.548 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1046265086
[DEBUG] 2024-11-27 09:45:07.548 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 09:45:07.552 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 09:45:07.552 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@8c34631
[DEBUG] 2024-11-27 09:45:07.554 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:45:07.555 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:45:07.558 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-27 09:45:07.558 [main] TransactionImpl - begin
[DEBUG] 2024-11-27 09:45:07.567 [main] TransactionImpl - committing
[DEBUG] 2024-11-27 09:45:07.567 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-27 09:45:07.567 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-27 09:45:07.570 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:45:07.573 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-27 09:45:07.573 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-27 09:45:07.574 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-27 09:45:07.574 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-27 09:45:07.580 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-27 09:45:07.583 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:45:07.583 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:45:07.584 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:45:07.584 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1923489377 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@666851147)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@673901116 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1420130719 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@372124065 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1421436947 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@755146854)

[DEBUG] 2024-11-27 09:45:07.584 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:45:07.585 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:45:07.704 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-27 09:45:07.704 [main] TransactionImpl - begin
[DEBUG] 2024-11-27 09:45:07.706 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-27 09:45:07.707 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-27 09:45:07.712 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-27 09:45:07.712 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-27 09:45:07.714 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-27 09:45:07.716 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-27 09:45:07.716 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-27 09:45:07.731 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-27 09:45:07.731 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-27 09:45:07.732 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-27 09:45:07.732 [main] TransactionImpl - committing
[DEBUG] 2024-11-27 09:45:07.732 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-27 09:45:07.732 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-27 09:45:07.732 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-27 09:45:07.733 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-27 09:45:07.733 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-27 09:45:07.733 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-27 09:45:07.733 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-27 09:45:07.733 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-27 09:45:07.736 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:45:07.736 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:45:07.737 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:45:07.737 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1911830487 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@666851147)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1367787521 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@551821075 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1874842251 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1067780644 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@755146854)

[DEBUG] 2024-11-27 09:45:07.737 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:45:07.739 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-27 09:45:07.739 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-27 09:45:07.739 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-27 09:45:07.739 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 09:45:07.739 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-27 09:45:07.739 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 09:45:07.739 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-27 09:45:07.739 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-27 09:45:07.739 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 1649140180
[DEBUG] 2024-11-27 09:45:07.740 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 1819701896
[DEBUG] 2024-11-27 09:45:07.740 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1359899539
[DEBUG] 2024-11-27 09:45:07.740 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1359899539
[DEBUG] 2024-11-27 09:45:07.740 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-27 09:45:07.740 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-27 09:45:07.740 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1359899539
[DEBUG] 2024-11-27 09:45:07.740 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-27 09:45:07.740 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-27 09:45:07.740 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@15c3849f
[DEBUG] 2024-11-27 09:45:07.741 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-27 09:45:07.741 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:45:07.900 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:45:07.900 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@140468053 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@666851147)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@20039101 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@960704936 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@640103260 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1416656186 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@755146854)

[DEBUG] 2024-11-27 09:45:07.900 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:45:07.903 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-27 09:45:07.903 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-27 09:45:07.903 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-27 09:45:07.903 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-27 09:45:07.903 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 09:45:07.903 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 09:45:07.904 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 09:45:07.904 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-27 09:45:07.904 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 2119380781
[DEBUG] 2024-11-27 09:45:07.904 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1108674897
[DEBUG] 2024-11-27 09:45:07.904 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1108674897
[DEBUG] 2024-11-27 09:45:07.904 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 09:45:07.904 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 09:45:07.904 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@248b2091
[DEBUG] 2024-11-27 09:45:07.904 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:45:07.904 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:45:07.905 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-27 09:45:07.905 [main] TransactionImpl - begin
[DEBUG] 2024-11-27 09:45:07.907 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 09:45:07.908 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 09:45:07.908 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 09:45:07.908 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@642d34f1] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 09:45:07.908 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 09:45:07.908 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@49b180c8] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-27 09:45:07.908 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 09:45:07.908 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 09:45:07.908 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 09:45:07.909 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:45:07.909 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1869873220 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@666851147)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1651715047 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@662786209 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1041697470 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1898859288 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@755146854)

[DEBUG] 2024-11-27 09:45:07.909 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:45:07.910 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-27 09:45:07.910 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-27 09:45:07.910 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-27 09:45:07.910 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-27 09:45:07.910 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 09:45:07.910 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 09:45:07.910 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 09:45:07.910 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-27 09:45:07.910 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1170391958
[DEBUG] 2024-11-27 09:45:07.910 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1082987260
[DEBUG] 2024-11-27 09:45:07.910 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1082987260
[DEBUG] 2024-11-27 09:45:07.910 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 09:45:07.910 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 09:45:07.910 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69d61a6f
[DEBUG] 2024-11-27 09:45:07.911 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:45:07.911 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:45:07.911 [main] TransactionImpl - committing
[DEBUG] 2024-11-27 09:45:07.911 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-27 09:45:07.911 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-27 09:45:07.912 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-27 09:45:07.912 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-27 09:45:07.912 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-27 09:45:07.912 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-27 09:45:07.912 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-27 09:45:07.914 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-27 09:45:07.933 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:45:07.934 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:45:07.934 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:45:07.934 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1071364078 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@666851147)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@851478032 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1156336184 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1968179698 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@391554161 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@755146854)

[DEBUG] 2024-11-27 09:45:07.934 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:45:07.935 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-27 09:45:07.935 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-27 09:45:07.935 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-27 09:45:07.935 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-27 09:45:07.935 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 09:45:07.935 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 09:45:07.936 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 09:45:07.936 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-27 09:45:07.936 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1392412640
[DEBUG] 2024-11-27 09:45:07.936 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@926498219
[DEBUG] 2024-11-27 09:45:07.936 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@926498219
[DEBUG] 2024-11-27 09:45:07.936 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-27 09:45:07.936 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 09:45:07.936 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4866a755
[DEBUG] 2024-11-27 09:45:07.936 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:45:07.936 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:45:08.242 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:45:08.243 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@17714374 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@666851147)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1565613612 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1404608759 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1295679363 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1050768030 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@755146854)

[DEBUG] 2024-11-27 09:45:08.243 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:45:08.245 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-27 09:45:08.245 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-27 09:45:08.245 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-27 09:45:08.245 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-27 09:45:08.245 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 09:45:08.245 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 09:45:08.245 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 09:45:08.245 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-27 09:45:08.245 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1367783306
[DEBUG] 2024-11-27 09:45:08.246 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1063951264
[DEBUG] 2024-11-27 09:45:08.246 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1063951264
[DEBUG] 2024-11-27 09:45:08.246 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 09:45:08.246 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 09:45:08.246 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e749235
[DEBUG] 2024-11-27 09:45:08.246 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:45:08.246 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:45:08.247 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:45:08.247 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@141601266 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@666851147)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1814984081 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@133321775 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1034783710 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@807377568 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@755146854)

[DEBUG] 2024-11-27 09:45:08.247 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:45:08.248 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-27 09:45:08.248 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-27 09:45:08.248 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-27 09:45:08.248 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-27 09:45:08.248 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 09:45:08.248 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 09:45:08.248 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 09:45:08.248 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-27 09:45:08.248 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1524396519
[DEBUG] 2024-11-27 09:45:08.248 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2143659352
[DEBUG] 2024-11-27 09:45:08.248 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2143659352
[DEBUG] 2024-11-27 09:45:08.248 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 09:45:08.248 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 09:45:08.248 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@42fd8f2f
[DEBUG] 2024-11-27 09:45:08.249 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:45:08.249 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:59:35.680 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-27 09:59:35.688 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-27 09:59:35.718 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-27 09:59:35.719 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-27 09:59:35.771 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-27 09:59:35.777 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-27 09:59:35.964 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-27 09:59:35.968 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-27 09:59:35.968 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-27 09:59:35.969 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 09:59:35.969 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 09:59:35.969 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-27 09:59:35.970 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-27 09:59:35.970 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-27 09:59:35.971 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 09:59:35.972 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-27 09:59:35.972 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-27 09:59:35.973 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 09:59:35.974 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-27 09:59:35.982 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-27 09:59:35.982 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-27 09:59:36.070 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-27 09:59:36.070 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-27 09:59:36.070 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-27 09:59:36.070 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-27 09:59:36.070 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-27 09:59:36.070 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-27 09:59:36.070 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-27 09:59:36.070 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-27 09:59:36.070 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-27 09:59:36.070 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-27 09:59:36.070 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-27 09:59:36.071 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-27 09:59:36.071 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-27 09:59:36.071 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-27 09:59:36.071 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-27 09:59:36.071 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-27 09:59:36.071 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-27 09:59:36.071 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-27 09:59:36.071 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-27 09:59:36.071 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-27 09:59:36.071 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-27 09:59:36.071 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-27 09:59:36.071 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-27 09:59:36.072 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-27 09:59:36.072 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-27 09:59:36.072 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-27 09:59:36.072 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-27 09:59:36.072 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-27 09:59:36.072 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-27 09:59:36.072 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-27 09:59:36.072 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-27 09:59:36.072 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-27 09:59:36.073 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-27 09:59:36.073 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-27 09:59:36.073 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-27 09:59:36.073 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-27 09:59:36.073 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-27 09:59:36.073 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-27 09:59:36.073 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-27 09:59:36.073 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-27 09:59:36.073 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-27 09:59:36.074 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-27 09:59:36.074 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-27 09:59:36.074 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-27 09:59:36.074 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-27 09:59:36.074 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-27 09:59:36.074 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-27 09:59:36.074 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-27 09:59:36.074 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-27 09:59:36.075 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-27 09:59:36.075 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-27 09:59:36.075 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-27 09:59:36.075 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-27 09:59:36.075 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-27 09:59:36.075 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-27 09:59:36.075 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-27 09:59:36.075 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-27 09:59:36.076 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-27 09:59:36.076 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-27 09:59:36.076 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-27 09:59:36.076 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-27 09:59:36.077 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-27 09:59:36.077 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-27 09:59:36.077 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-27 09:59:36.077 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-27 09:59:36.077 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-27 09:59:36.077 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-27 09:59:36.077 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-27 09:59:36.077 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-27 09:59:36.077 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-27 09:59:36.077 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-27 09:59:36.077 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-27 09:59:36.078 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-27 09:59:36.078 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-27 09:59:36.078 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-27 09:59:36.078 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-27 09:59:36.078 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-27 09:59:36.078 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-27 09:59:36.078 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-27 09:59:36.078 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-27 09:59:36.078 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-27 09:59:36.078 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-27 09:59:36.078 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-27 09:59:36.078 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-27 09:59:36.078 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-27 09:59:36.079 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-27 09:59:36.079 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-27 09:59:36.079 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-27 09:59:36.079 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-27 09:59:36.079 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-27 09:59:36.079 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-27 09:59:36.079 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-27 09:59:36.079 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-27 09:59:36.079 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-27 09:59:36.079 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-27 09:59:36.079 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-27 09:59:36.079 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-27 09:59:36.080 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-27 09:59:36.080 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-27 09:59:36.080 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-27 09:59:36.080 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-27 09:59:36.080 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-27 09:59:36.080 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-27 09:59:36.080 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-27 09:59:36.080 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-27 09:59:36.080 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-27 09:59:36.080 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-27 09:59:36.080 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-27 09:59:36.080 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-27 09:59:36.081 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-27 09:59:36.081 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-27 09:59:36.081 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-27 09:59:36.081 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-27 09:59:36.081 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-27 09:59:36.081 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-27 09:59:36.081 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-27 09:59:36.081 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-27 09:59:36.081 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-27 09:59:36.081 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-27 09:59:36.081 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-27 09:59:36.081 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-27 09:59:36.087 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-27 09:59:36.088 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-27 09:59:36.089 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@491f8831
[DEBUG] 2024-11-27 09:59:36.090 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@691541bc
[DEBUG] 2024-11-27 09:59:36.090 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b733ef7
[DEBUG] 2024-11-27 09:59:36.090 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43a4a9e5
[DEBUG] 2024-11-27 09:59:36.090 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@764fffa0
[DEBUG] 2024-11-27 09:59:36.090 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35145874
[DEBUG] 2024-11-27 09:59:36.090 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77524ca7
[DEBUG] 2024-11-27 09:59:36.090 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11df2829
[DEBUG] 2024-11-27 09:59:36.090 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18e4674d
[INFO ] 2024-11-27 09:59:36.118 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-27 09:59:36.119 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-27 09:59:36.119 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-27 09:59:36.205 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-27 09:59:36.269 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-27 09:59:36.269 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-27 09:59:36.270 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-27 09:59:36.307 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-27 09:59:36.308 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-27 09:59:36.314 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-27 09:59:36.314 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-27 09:59:36.328 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eaf8427) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c)
[DEBUG] 2024-11-27 09:59:36.328 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d6039df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae)
[DEBUG] 2024-11-27 09:59:36.329 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e00016) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3cbe6e)
[DEBUG] 2024-11-27 09:59:36.329 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@177ede17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17176b18)
[DEBUG] 2024-11-27 09:59:36.329 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e4395c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab53860)
[DEBUG] 2024-11-27 09:59:36.329 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5ac347) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b9389f)
[DEBUG] 2024-11-27 09:59:36.329 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b2c5ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41f785e3)
[DEBUG] 2024-11-27 09:59:36.329 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9a3661) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727986ad)
[DEBUG] 2024-11-27 09:59:36.329 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1600a8a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b25ef1c)
[DEBUG] 2024-11-27 09:59:36.330 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-27 09:59:36.330 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-27 09:59:36.331 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-27 09:59:36.332 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 09:59:36.333 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 09:59:36.335 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@383cdd4d
[DEBUG] 2024-11-27 09:59:36.335 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@491f8831`
[DEBUG] 2024-11-27 09:59:36.339 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 09:59:36.340 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 09:59:36.340 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 09:59:36.342 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 09:59:36.342 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 09:59:36.343 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 09:59:36.343 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 09:59:36.343 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 09:59:36.343 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 09:59:36.343 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 09:59:36.343 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 09:59:36.343 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 09:59:36.344 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71369e1a]
[DEBUG] 2024-11-27 09:59:36.378 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-27 09:59:36.404 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-27 09:59:36.411 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-27 09:59:36.418 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-27 09:59:36.426 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 09:59:36.443 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:59:36.443 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 09:59:36.444 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 09:59:36.446 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 09:59:36.449 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-27 09:59:36.453 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 09:59:36.456 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-27 09:59:36.457 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 09:59:36.460 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 09:59:36.466 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 09:59:36.466 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:59:36.475 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-27 09:59:36.476 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:59:36.477 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 09:59:36.477 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 09:59:36.478 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 09:59:36.478 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 09:59:36.481 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 09:59:36.482 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-27 09:59:36.483 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-27 09:59:36.483 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-27 09:59:36.483 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-27 09:59:36.483 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-27 09:59:36.483 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-27 09:59:36.484 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-27 09:59:36.484 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 09:59:36.488 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-27 09:59:36.489 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-27 09:59:36.489 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-27 09:59:36.489 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 09:59:36.490 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:59:36.490 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 09:59:36.490 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 09:59:36.490 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 09:59:36.490 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-27 09:59:36.490 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 09:59:36.490 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-27 09:59:36.491 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 09:59:36.491 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 09:59:36.491 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-27 09:59:36.491 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-27 09:59:36.491 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-27 09:59:36.491 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-27 09:59:36.491 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-27 09:59:36.491 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-27 09:59:36.492 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 09:59:36.492 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:59:36.492 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-27 09:59:36.492 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:59:36.492 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-27 09:59:36.493 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-27 09:59:36.493 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 09:59:36.493 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 09:59:36.493 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 09:59:36.493 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-27 09:59:36.493 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 09:59:36.494 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-27 09:59:36.494 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-27 09:59:36.494 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-27 09:59:36.495 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 09:59:36.498 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:59:36.498 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 09:59:36.498 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 09:59:36.498 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 09:59:36.498 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-27 09:59:36.498 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 09:59:36.498 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-27 09:59:36.498 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 09:59:36.499 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 09:59:36.499 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-27 09:59:36.499 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:59:36.502 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-27 09:59:36.502 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-27 09:59:36.502 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-27 09:59:36.502 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-27 09:59:36.502 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-27 09:59:36.502 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-27 09:59:36.502 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-27 09:59:36.503 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-27 09:59:36.503 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 09:59:36.503 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-27 09:59:36.503 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 09:59:36.504 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 09:59:36.504 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-27 09:59:36.506 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 09:59:36.506 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-27 09:59:36.506 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 09:59:36.506 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-27 09:59:36.510 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-27 09:59:36.510 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-27 09:59:36.510 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-27 09:59:36.510 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 09:59:36.512 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-27 09:59:36.513 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-27 09:59:36.514 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-27 09:59:36.515 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 09:59:36.515 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 09:59:36.515 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-27 09:59:36.515 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-27 09:59:36.515 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-27 09:59:36.515 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 09:59:36.515 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 09:59:36.516 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 09:59:36.525 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 09:59:36.525 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 09:59:36.709 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-27 09:59:36.750 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 09:59:36.750 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter2348483688976414418.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire15487726100890229933tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_0198562681492070021tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter2348483688976414418.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d7d8911, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-27 09:59:36.755 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-27 09:59:36.761 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 09:59:36.806 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-27 09:59:36.807 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-27 09:59:36.807 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-27 09:59:36.808 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-27 09:59:36.809 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@347b370c] under count; prior registration was null
[DEBUG] 2024-11-27 09:59:36.810 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@72a33316] under every; prior registration was null
[DEBUG] 2024-11-27 09:59:36.810 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@57fce8b] under any; prior registration was null
[DEBUG] 2024-11-27 09:59:36.810 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-27 09:59:36.810 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-27 09:59:36.810 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-27 09:59:36.810 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-27 09:59:36.810 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-27 09:59:36.810 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-27 09:59:36.810 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-27 09:59:36.810 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-27 09:59:36.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-27 09:59:36.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-27 09:59:36.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-27 09:59:36.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-27 09:59:36.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-27 09:59:36.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-27 09:59:36.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-27 09:59:36.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-27 09:59:36.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-27 09:59:36.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56f2c9e8] under sinh; prior registration was null
[DEBUG] 2024-11-27 09:59:36.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@457692cb] under cosh; prior registration was null
[DEBUG] 2024-11-27 09:59:36.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350342e0] under tanh; prior registration was null
[DEBUG] 2024-11-27 09:59:36.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d] under pi; prior registration was null
[DEBUG] 2024-11-27 09:59:36.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289] under log; prior registration was null
[DEBUG] 2024-11-27 09:59:36.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-27 09:59:36.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-27 09:59:36.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-27 09:59:36.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-27 09:59:36.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-27 09:59:36.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-27 09:59:36.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-27 09:59:36.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-27 09:59:36.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-27 09:59:36.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-27 09:59:36.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-27 09:59:36.814 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-27 09:59:36.815 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a] under position; prior registration was null
[DEBUG] 2024-11-27 09:59:36.817 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6fa2a006] under overlay; prior registration was null
[DEBUG] 2024-11-27 09:59:36.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@39695803] under trim; prior registration was null
[DEBUG] 2024-11-27 09:59:36.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@57b711b6] under cast; prior registration was null
[DEBUG] 2024-11-27 09:59:36.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2db461b5] under collate; prior registration was null
[DEBUG] 2024-11-27 09:59:36.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@55881f40] under extract; prior registration was null
[DEBUG] 2024-11-27 09:59:36.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-27 09:59:36.820 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-27 09:59:36.820 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11d1735e] under ifnull; prior registration was null
[DEBUG] 2024-11-27 09:59:36.820 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-27 09:59:36.820 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-27 09:59:36.821 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6282f1eb] under pad; prior registration was null
[DEBUG] 2024-11-27 09:59:36.821 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@64ed18ec] under str; prior registration was null
[DEBUG] 2024-11-27 09:59:36.822 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@25589735] under format; prior registration was null
[DEBUG] 2024-11-27 09:59:36.823 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7dddfc35] under timestampadd; prior registration was null
[DEBUG] 2024-11-27 09:59:36.823 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2336cd91] under timestampdiff; prior registration was null
[DEBUG] 2024-11-27 09:59:36.824 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-27 09:59:36.824 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-27 09:59:36.824 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c1e40d9] under current_date; prior registration was null
[DEBUG] 2024-11-27 09:59:36.824 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b50c21] under current_time; prior registration was null
[DEBUG] 2024-11-27 09:59:36.824 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e0fdc83] under current_timestamp; prior registration was null
[DEBUG] 2024-11-27 09:59:36.824 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-27 09:59:36.824 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-27 09:59:36.824 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-27 09:59:36.824 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5dacf18d] under local_date; prior registration was null
[DEBUG] 2024-11-27 09:59:36.824 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@432a6a69] under local_time; prior registration was null
[DEBUG] 2024-11-27 09:59:36.824 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f52a229] under local_datetime; prior registration was null
[DEBUG] 2024-11-27 09:59:36.824 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fe98084] under offset_datetime; prior registration was null
[DEBUG] 2024-11-27 09:59:36.824 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-27 09:59:36.825 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-27 09:59:36.825 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-27 09:59:36.825 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-27 09:59:36.825 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f33e6d] under instant; prior registration was null
[DEBUG] 2024-11-27 09:59:36.825 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-27 09:59:36.825 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a1cb94] under sql; prior registration was null
[DEBUG] 2024-11-27 09:59:36.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-27 09:59:36.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-27 09:59:36.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-27 09:59:36.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-27 09:59:36.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289
[DEBUG] 2024-11-27 09:59:36.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-27 09:59:36.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-27 09:59:36.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-27 09:59:36.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-27 09:59:36.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-27 09:59:36.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-27 09:59:36.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-27 09:59:36.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-27 09:59:36.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@49bb808f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@563ada5] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-27 09:59:36.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-27 09:59:36.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12548f9a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a
[DEBUG] 2024-11-27 09:59:36.829 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-27 09:59:36.829 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-27 09:59:36.829 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-27 09:59:36.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2838eb] under trunc; prior registration was null
[DEBUG] 2024-11-27 09:59:36.832 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-27 09:59:36.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-27 09:59:36.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb5d334] under bitand; prior registration was null
[DEBUG] 2024-11-27 09:59:36.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45dc7be] under bitor; prior registration was null
[DEBUG] 2024-11-27 09:59:36.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under bitxor; prior registration was null
[DEBUG] 2024-11-27 09:59:36.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under bitnot; prior registration was null
[DEBUG] 2024-11-27 09:59:36.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-27 09:59:36.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-27 09:59:36.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-27 09:59:36.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-27 09:59:36.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-27 09:59:36.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-27 09:59:36.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-27 09:59:36.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-27 09:59:36.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-27 09:59:36.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-27 09:59:36.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-27 09:59:36.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-27 09:59:36.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-27 09:59:36.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4d664323] under format; prior registration was org.hibernate.dialect.function.FormatFunction@25589735
[DEBUG] 2024-11-27 09:59:36.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-27 09:59:36.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-27 09:59:36.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-27 09:59:36.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-27 09:59:36.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@432a6a69
[DEBUG] 2024-11-27 09:59:36.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f52a229
[DEBUG] 2024-11-27 09:59:36.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-27 09:59:36.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ec0d06] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d
[DEBUG] 2024-11-27 09:59:36.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2676d96a] under chr; prior registration was null
[DEBUG] 2024-11-27 09:59:36.835 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-27 09:59:36.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under sysdate; prior registration was null
[DEBUG] 2024-11-27 09:59:36.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-27 09:59:36.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-27 09:59:36.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-27 09:59:36.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-27 09:59:36.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-27 09:59:36.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 09:59:36.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@77a9ac36] under rank; prior registration was null
[DEBUG] 2024-11-27 09:59:36.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3c743d40] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 09:59:36.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5aac6f9f] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 09:59:36.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2444c3df] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 09:59:36.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@38848217] under listagg; prior registration was null
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 09:59:36.840 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 09:59:36.841 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 09:59:36.842 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 09:59:36.843 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 09:59:36.844 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.845 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.845 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 09:59:36.845 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 09:59:36.845 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 09:59:36.848 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 09:59:36.947 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 09:59:36.949 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 09:59:37.055 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 09:59:37.058 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 09:59:37.061 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 09:59:37.061 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 09:59:37.061 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 09:59:37.061 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 09:59:37.216 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 09:59:37.220 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 09:59:37.220 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 09:59:37.247 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 09:59:37.247 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 09:59:37.260 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 09:59:37.261 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 09:59:37.261 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 09:59:37.268 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 09:59:37.287 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 09:59:37.288 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 09:59:37.288 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 09:59:37.288 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 09:59:37.288 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 09:59:37.288 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 09:59:37.313 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 09:59:37.313 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 09:59:37.316 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-27 09:59:37.316 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 09:59:37.317 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 09:59:37.317 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 09:59:37.317 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 09:59:37.317 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 09:59:37.317 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 09:59:37.317 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 09:59:37.317 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 09:59:37.317 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 09:59:37.317 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 09:59:37.317 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 09:59:37.379 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 09:59:37.381 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 09:59:37.389 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d01ea33] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 09:59:37.390 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 09:59:37.394 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c3fcbe7] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-27 09:59:37.394 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 09:59:37.398 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-27 09:59:37.405 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 09:59:37.415 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 09:59:37.415 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 09:59:37.415 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-27 09:59:37.415 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-27 09:59:37.415 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 09:59:37.415 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 09:59:37.415 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 09:59:37.416 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 09:59:37.417 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3ae87e38] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 09:59:37.417 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 09:59:37.423 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e9cb95] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-27 09:59:37.423 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 09:59:37.425 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 09:59:37.426 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 09:59:37.426 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 09:59:37.426 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 09:59:37.426 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 09:59:37.426 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 09:59:37.426 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 09:59:37.426 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 09:59:37.426 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 09:59:37.426 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 09:59:37.426 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@21a0795f] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 09:59:37.426 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 09:59:37.426 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2ec156fb] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-27 09:59:37.426 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 09:59:37.427 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 09:59:37.427 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 09:59:37.427 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 09:59:37.427 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 09:59:37.427 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 09:59:37.427 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 09:59:37.427 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 09:59:37.428 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 09:59:37.428 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1bf52f10] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 09:59:37.428 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 09:59:37.428 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@301e5d23] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-27 09:59:37.428 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 09:59:37.429 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74787609] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 09:59:37.430 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 09:59:37.430 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 09:59:37.430 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 09:59:37.430 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 09:59:37.431 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@355b53cc] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 09:59:37.431 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 09:59:37.431 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2568611c] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 09:59:37.431 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bda7a5b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-27 09:59:37.431 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 09:59:37.431 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 09:59:37.431 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 09:59:37.431 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 09:59:37.456 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 09:59:37.456 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 09:59:37.460 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 09:59:37.460 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 09:59:37.461 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@121dac1a]
[DEBUG] 2024-11-27 09:59:37.462 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 09:59:37.462 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 09:59:37.462 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 09:59:37.462 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 09:59:37.464 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3acc65f0
[DEBUG] 2024-11-27 09:59:37.464 [main] SessionFactoryRegistry - Registering SessionFactory: 7716b659-715f-49d1-a3de-9db639ce4ba6 (<unnamed>)
[DEBUG] 2024-11-27 09:59:37.464 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 09:59:37.464 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 09:59:37.499 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 09:59:37.514 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:59:37.532 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@656020492 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@609630217 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1104693947 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@636370090 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1072476278 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-27 09:59:37.537 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-27 09:59:37.553 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:59:37.554 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:59:37.555 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@638978471 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@959016175 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@2113710566 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@125246542 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@289039926 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-27 09:59:37.555 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-27 09:59:37.555 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:59:37.641 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:59:37.641 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1859633528 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1533375298 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@363003357 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1160651280 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@415297573 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-27 09:59:37.641 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:59:37.645 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-27 09:59:37.645 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-27 09:59:37.645 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-27 09:59:37.645 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-27 09:59:37.645 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 09:59:37.645 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 09:59:37.646 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 09:59:37.646 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-27 09:59:37.647 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 663512999
[DEBUG] 2024-11-27 09:59:37.652 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-27 09:59:37.654 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-27 09:59:37.654 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 09:59:37.658 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 09:59:37.658 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20e3b165
[DEBUG] 2024-11-27 09:59:37.660 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:59:37.661 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:59:37.663 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-27 09:59:37.663 [main] TransactionImpl - begin
[DEBUG] 2024-11-27 09:59:37.672 [main] TransactionImpl - committing
[DEBUG] 2024-11-27 09:59:37.673 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-27 09:59:37.673 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-27 09:59:37.676 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:59:37.679 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-27 09:59:37.679 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-27 09:59:37.680 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-27 09:59:37.680 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-27 09:59:37.686 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-27 09:59:37.689 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:59:37.689 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:59:37.690 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:59:37.690 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1456923361 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1318491599 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1139305484 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@208427214 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1833726536 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-27 09:59:37.690 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:59:37.691 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:59:37.757 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-27 09:59:37.757 [main] TransactionImpl - begin
[DEBUG] 2024-11-27 09:59:37.759 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-27 09:59:37.761 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-27 09:59:37.765 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-27 09:59:37.765 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-27 09:59:37.767 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-27 09:59:37.769 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-27 09:59:37.770 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-27 09:59:37.771 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-27 09:59:37.771 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-27 09:59:37.771 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-27 09:59:37.771 [main] TransactionImpl - committing
[DEBUG] 2024-11-27 09:59:37.771 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-27 09:59:37.771 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-27 09:59:37.772 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-27 09:59:37.772 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-27 09:59:37.772 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-27 09:59:37.772 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-27 09:59:37.772 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-27 09:59:37.772 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-27 09:59:37.775 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:59:37.775 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:59:37.776 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:59:37.776 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@408648902 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@546552684 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1384781563 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@913564177 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1972176213 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-27 09:59:37.777 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:59:37.778 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-27 09:59:37.778 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-27 09:59:37.778 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-27 09:59:37.778 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 09:59:37.778 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-27 09:59:37.778 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 09:59:37.778 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-27 09:59:37.778 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-27 09:59:37.778 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 196316233
[DEBUG] 2024-11-27 09:59:37.778 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 345518693
[DEBUG] 2024-11-27 09:59:37.778 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-27 09:59:37.778 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-27 09:59:37.778 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-27 09:59:37.779 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-27 09:59:37.779 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-27 09:59:37.779 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-27 09:59:37.779 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-27 09:59:37.779 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6055e899
[DEBUG] 2024-11-27 09:59:37.779 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-27 09:59:37.779 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:59:37.852 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:59:37.852 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1911830487 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1367787521 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@551821075 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1874842251 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1067780644 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-27 09:59:37.852 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:59:37.854 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-27 09:59:37.854 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-27 09:59:37.854 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-27 09:59:37.854 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-27 09:59:37.854 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 09:59:37.854 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 09:59:37.854 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 09:59:37.854 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-27 09:59:37.855 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1649140180
[DEBUG] 2024-11-27 09:59:37.855 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@862853054
[DEBUG] 2024-11-27 09:59:37.855 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@862853054
[DEBUG] 2024-11-27 09:59:37.855 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 09:59:37.855 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 09:59:37.855 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3897f9ae
[DEBUG] 2024-11-27 09:59:37.855 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:59:37.855 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:59:37.855 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-27 09:59:37.855 [main] TransactionImpl - begin
[DEBUG] 2024-11-27 09:59:37.857 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 09:59:37.857 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 09:59:37.858 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 09:59:37.858 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@642f8b7f] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 09:59:37.858 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 09:59:37.858 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3321fb65] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-27 09:59:37.858 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 09:59:37.858 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 09:59:37.858 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 09:59:37.858 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:59:37.858 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1715414246 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2119380781 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1108674897 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@613097617 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@990656754 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-27 09:59:37.859 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:59:37.859 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-27 09:59:37.859 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-27 09:59:37.859 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-27 09:59:37.859 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-27 09:59:37.859 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 09:59:37.859 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 09:59:37.859 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 09:59:37.859 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-27 09:59:37.859 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1439452257
[DEBUG] 2024-11-27 09:59:37.859 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@721876120
[DEBUG] 2024-11-27 09:59:37.859 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@721876120
[DEBUG] 2024-11-27 09:59:37.859 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 09:59:37.860 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 09:59:37.860 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ddb9a8
[DEBUG] 2024-11-27 09:59:37.860 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:59:37.860 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:59:37.860 [main] TransactionImpl - committing
[DEBUG] 2024-11-27 09:59:37.860 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-27 09:59:37.860 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-27 09:59:37.861 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-27 09:59:37.861 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-27 09:59:37.861 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-27 09:59:37.861 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-27 09:59:37.861 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-27 09:59:37.863 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-27 09:59:37.865 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:59:37.865 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:59:37.865 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:59:37.865 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1775349092 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1166754951 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1392602264 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@694841823 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1303659291 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-27 09:59:37.865 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:59:37.866 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-27 09:59:37.866 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-27 09:59:37.866 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-27 09:59:37.866 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-27 09:59:37.866 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 09:59:37.866 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 09:59:37.866 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 09:59:37.866 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-27 09:59:37.866 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1613461828
[DEBUG] 2024-11-27 09:59:37.866 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1603095377
[DEBUG] 2024-11-27 09:59:37.866 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1603095377
[DEBUG] 2024-11-27 09:59:37.866 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-27 09:59:37.866 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 09:59:37.866 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55821edf
[DEBUG] 2024-11-27 09:59:37.867 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:59:37.867 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:59:38.000 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:59:38.000 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@450728160 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2079936145 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1071364078 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@851478032 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1156336184 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-27 09:59:38.000 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:59:38.002 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-27 09:59:38.002 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-27 09:59:38.002 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-27 09:59:38.002 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-27 09:59:38.002 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 09:59:38.002 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 09:59:38.002 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 09:59:38.002 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-27 09:59:38.002 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1937867829
[DEBUG] 2024-11-27 09:59:38.002 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@802062915
[DEBUG] 2024-11-27 09:59:38.002 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@802062915
[DEBUG] 2024-11-27 09:59:38.002 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 09:59:38.002 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 09:59:38.002 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52fe87e0
[DEBUG] 2024-11-27 09:59:38.002 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:59:38.002 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 09:59:38.003 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 09:59:38.003 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@926498219 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1214687061 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@325183616 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@889633931 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1269566437 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-27 09:59:38.003 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-27 09:59:38.004 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-27 09:59:38.004 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-27 09:59:38.004 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-27 09:59:38.004 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-27 09:59:38.004 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 09:59:38.004 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 09:59:38.004 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 09:59:38.004 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-27 09:59:38.004 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1295679363
[DEBUG] 2024-11-27 09:59:38.004 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1050768030
[DEBUG] 2024-11-27 09:59:38.004 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1050768030
[DEBUG] 2024-11-27 09:59:38.004 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 09:59:38.004 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 09:59:38.004 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6956eb58
[DEBUG] 2024-11-27 09:59:38.004 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 09:59:38.004 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
