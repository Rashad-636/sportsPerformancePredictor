[DEBUG] 2024-11-27 15:53:32.712 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 15:53:32.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@350ff014] under rank; prior registration was null
[DEBUG] 2024-11-27 15:53:32.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@401317a0] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 15:53:32.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3f866f50] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 15:53:32.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5844a2d1] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 15:53:32.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@3b28b7b0] under listagg; prior registration was null
[DEBUG] 2024-11-27 15:53:32.720 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.720 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.720 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 15:53:32.720 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 15:53:32.720 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 15:53:32.720 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 15:53:32.720 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.720 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 15:53:32.721 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 15:53:32.722 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 15:53:32.723 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.724 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 15:53:32.725 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 15:53:32.728 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 15:53:32.814 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 15:53:32.814 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 15:53:32.898 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:53:32.901 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:53:32.903 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 15:53:32.903 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 15:53:33.036 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 15:53:33.039 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:53:33.061 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:53:33.061 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:53:33.061 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:53:33.061 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:53:33.061 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 15:53:33.061 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 15:53:33.075 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.FavoriteTeam]: private accessor [team]
[DEBUG] 2024-11-27 15:53:33.075 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:53:33.075 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:53:33.076 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 15:53:33.076 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 15:53:33.089 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 15:53:33.090 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 15:53:33.090 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 15:53:33.100 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 15:53:33.110 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:53:33.111 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:53:33.111 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:53:33.112 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:53:33.112 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:53:33.112 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:53:33.134 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 15:53:33.134 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 15:53:33.137 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 15:53:33.137 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.team]
[DEBUG] 2024-11-27 15:53:33.137 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.user]
[DEBUG] 2024-11-27 15:53:33.137 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.FavoriteTeam) `staticFetchableList` generator
[DEBUG] 2024-11-27 15:53:33.137 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 15:53:33.137 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 15:53:33.137 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 15:53:33.138 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 15:53:33.138 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 15:53:33.138 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 15:53:33.138 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 15:53:33.138 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 15:53:33.138 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 15:53:33.138 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 15:53:33.188 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:53:33.189 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 15:53:33.196 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@75d539b9] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 15:53:33.197 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 15:53:33.203 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  \-BasicFetch [com.radams.entity.Team.teamName]

[DEBUG] 2024-11-27 15:53:33.211 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:53:33.218 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 15:53:33.218 [main] AbstractEntityPersister -  Version select: select id from teams where id=?
[DEBUG] 2024-11-27 15:53:33.218 [main] AbstractEntityPersister -  Insert (0): insert into teams (sport_id,team_name) values (?,?)
[DEBUG] 2024-11-27 15:53:33.218 [main] AbstractEntityPersister -  Update (0): update teams set sport_id=?,team_name=? where id=?
[DEBUG] 2024-11-27 15:53:33.218 [main] AbstractEntityPersister -  Delete (0): delete from teams where id=?
[DEBUG] 2024-11-27 15:53:33.218 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 15:53:33.218 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.FavoriteTeam)] with identifierForTableGroup [com.radams.entity.FavoriteTeam] for NavigablePath [com.radams.entity.FavoriteTeam] 
[DEBUG] 2024-11-27 15:53:33.218 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3f1d6a13] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team] for NavigablePath [com.radams.entity.FavoriteTeam.team] 
[DEBUG] 2024-11-27 15:53:33.218 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:53:33.218 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7cbf4f8c] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team.sport] for NavigablePath [com.radams.entity.FavoriteTeam.team.sport] 
[DEBUG] 2024-11-27 15:53:33.218 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 15:53:33.219 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6ca33187] with identifierForTableGroup [com.radams.entity.FavoriteTeam.user] for NavigablePath [com.radams.entity.FavoriteTeam.user] 
[DEBUG] 2024-11-27 15:53:33.219 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 15:53:33.219 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.FavoriteTeam]
 |  +-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.team]
 |  \-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.user]

[DEBUG] 2024-11-27 15:53:33.219 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ft1 : com.radams.entity.FavoriteTeam) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.FavoriteTeam.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.FavoriteTeam.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.FavoriteTeam.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:53:33.220 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 15:53:33.220 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 15:53:33.220 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (team_id,user_id) values (?,?)
[DEBUG] 2024-11-27 15:53:33.220 [main] AbstractEntityPersister -  Update (0): update favorite_teams set team_id=?,user_id=? where id=?
[DEBUG] 2024-11-27 15:53:33.220 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 15:53:33.220 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 15:53:33.220 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 15:53:33.221 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:53:33.222 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7ec508e6] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 15:53:33.223 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 15:53:33.230 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 15:53:33.230 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : teams as t1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:53:33.230 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 15:53:33.230 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 15:53:33.230 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 15:53:33.230 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 15:53:33.230 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 15:53:33.230 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 15:53:33.230 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 15:53:33.230 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 15:53:33.230 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6c1b82cd] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 15:53:33.230 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 15:53:33.230 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@acd3460] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 15:53:33.231 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:53:33.231 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@26495639] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 15:53:33.231 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 15:53:33.232 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
                  primaryTableReference : teams as t1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:53:33.232 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 15:53:33.232 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 15:53:33.232 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 15:53:33.232 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 15:53:33.232 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 15:53:33.233 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 15:53:33.233 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@21c99abf] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 15:53:33.233 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 15:53:33.233 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@35af52dc] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 15:53:33.233 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:53:33.233 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4cef0747] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 15:53:33.234 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 15:53:33.234 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4213bc3e] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 15:53:33.235 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 15:53:33.235 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:53:33.235 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:53:33.235 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:53:33.235 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@aa8dce8] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 15:53:33.235 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 15:53:33.235 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6ad112de] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 15:53:33.235 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 15:53:33.236 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:53:33.236 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:53:33.257 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 15:53:33.257 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 15:53:33.260 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 15:53:33.260 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 15:53:33.261 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@299cab08]
[DEBUG] 2024-11-27 15:53:33.262 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 15:53:33.262 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 15:53:33.262 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 15:53:33.262 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 15:53:33.264 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5d3634c8
[DEBUG] 2024-11-27 15:53:33.264 [main] SessionFactoryRegistry - Registering SessionFactory: 99d040ef-d20c-4d06-85e8-4a0a5cccaeb9 (<unnamed>)
[DEBUG] 2024-11-27 15:53:33.264 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 15:53:33.264 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 15:53:33.310 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 15:53:33.323 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 15:53:33.337 [main] results - Initializer list:
	  com.radams.entity.Team -> EntityResultInitializer(com.radams.entity.Team)@1296845588 (SingleTableEntityPersister(com.radams.entity.Team))
	  com.radams.entity.Team.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.Team.sport.teams)@1234328865 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Team.sport -> EntityJoinedFetchInitializer(com.radams.entity.Team.sport)@846570623 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@458946139)

[DEBUG] 2024-11-27 15:53:33.341 [main] SQL - select t1_0.id,s1_0.id,s1_0.name,t1_0.team_name from teams t1_0 left join sports s1_0 on s1_0.id=t1_0.sport_id where t1_0.id=?
[DEBUG] 2024-11-27 15:53:33.356 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 15:53:33.356 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Team.sport): 1
[DEBUG] 2024-11-27 15:53:33.356 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team): 1
[DEBUG] 2024-11-27 15:53:33.357 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : com.radams.entity.Team.sport.teams#1
[DEBUG] 2024-11-27 15:53:33.358 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Team.sport#1] : 678296096
[DEBUG] 2024-11-27 15:53:33.358 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team#1] : 1443030336
[DEBUG] 2024-11-27 15:53:33.363 [main] results - Extracted JDBC value [2] - [NBA]
[DEBUG] 2024-11-27 15:53:33.366 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Team.sport#1
[DEBUG] 2024-11-27 15:53:33.366 [main] results - Extracted JDBC value [3] - [Hawks]
[DEBUG] 2024-11-27 15:53:33.366 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team#1
[DEBUG] 2024-11-27 15:53:33.366 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@774c5e5c
[DEBUG] 2024-11-27 15:53:33.370 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 15:53:33.374 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.sport -> EntitySelectFetchInitializer(com.radams.entity.Sport.teams.{element}.sport)@1127171622 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@458946139)
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@696007235 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1283050069)
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@979620424 (PluralAttribute(com.radams.entity.Sport.teams))

[DEBUG] 2024-11-27 15:53:33.374 [main] SQL - select t1_0.sport_id,t1_0.id,t1_0.team_name from teams t1_0 where t1_0.sport_id=?
[DEBUG] 2024-11-27 15:53:33.375 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 15:53:33.375 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 15:53:33.375 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 15:53:33.375 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 15:53:33.375 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 15:53:33.376 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1000719581
[DEBUG] 2024-11-27 15:53:33.377 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1000719581
[DEBUG] 2024-11-27 15:53:33.377 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@537451d5
[DEBUG] 2024-11-27 15:53:33.377 [main] results - Extracted JDBC value [1] - [3]
[DEBUG] 2024-11-27 15:53:33.377 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 15:53:33.377 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 15:53:33.377 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 15:53:33.377 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 15:53:33.377 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#3] : 2019388056
[DEBUG] 2024-11-27 15:53:33.377 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 15:53:33.377 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#1] - using loading instance
[DEBUG] 2024-11-27 15:53:33.377 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@1000719581
[DEBUG] 2024-11-27 15:53:33.377 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1000719581
[DEBUG] 2024-11-27 15:53:33.377 [main] results - Extracted JDBC value [2] - [Bulls]
[DEBUG] 2024-11-27 15:53:33.377 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#3
[DEBUG] 2024-11-27 15:53:33.377 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1000719581
[DEBUG] 2024-11-27 15:53:33.377 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@537451d5
[DEBUG] 2024-11-27 15:53:33.378 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 15:53:33.379 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 15:53:33.380 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 15:53:33.382 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-27 15:53:33.382 [main] TransactionImpl - begin
[DEBUG] 2024-11-27 15:53:33.388 [main] TransactionImpl - committing
[DEBUG] 2024-11-27 15:53:33.389 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-27 15:53:33.390 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-27 15:53:33.392 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-27 15:53:33.392 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2024-11-27 15:53:33.393 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-27 15:53:33.393 [main] EntityPrinter - com.radams.entity.Team{teamName=Hawks, id=1, sport=com.radams.entity.Sport#1}
[DEBUG] 2024-11-27 15:53:33.398 [main] SQL - delete from teams where id=?
[DEBUG] 2024-11-27 15:53:33.401 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 15:53:33.402 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 15:53:33.402 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 15:53:33.402 [main] results - Initializer list:
	  com.radams.entity.Team -> EntityResultInitializer(com.radams.entity.Team)@37590923 (SingleTableEntityPersister(com.radams.entity.Team))
	  com.radams.entity.Team.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.Team.sport.teams)@1022823162 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Team.sport -> EntityJoinedFetchInitializer(com.radams.entity.Team.sport)@1725760738 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@458946139)

[DEBUG] 2024-11-27 15:53:33.402 [main] SQL - select t1_0.id,s1_0.id,s1_0.name,t1_0.team_name from teams t1_0 left join sports s1_0 on s1_0.id=t1_0.sport_id where t1_0.id=?
[DEBUG] 2024-11-27 15:53:33.403 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 15:54:10.594 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-27 15:54:10.597 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-27 15:54:10.614 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-27 15:54:10.615 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-27 15:54:10.649 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-27 15:54:10.653 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-27 15:54:10.793 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-27 15:54:10.795 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-27 15:54:10.795 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-27 15:54:10.796 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 15:54:10.796 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 15:54:10.796 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-27 15:54:10.796 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-27 15:54:10.797 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-27 15:54:10.797 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 15:54:10.798 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-27 15:54:10.798 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-27 15:54:10.798 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 15:54:10.799 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-27 15:54:10.803 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-27 15:54:10.804 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-27 15:54:10.883 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 15:54:10.883 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 15:54:10.883 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 15:54:10.883 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 15:54:10.884 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 15:54:10.884 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 15:54:10.884 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 15:54:10.884 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 15:54:10.884 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 15:54:10.884 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 15:54:10.884 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 15:54:10.884 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 15:54:10.884 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 15:54:10.884 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 15:54:10.884 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 15:54:10.884 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 15:54:10.885 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 15:54:10.885 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-27 15:54:10.885 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 15:54:10.885 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 15:54:10.885 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 15:54:10.885 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 15:54:10.885 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 15:54:10.885 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 15:54:10.885 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 15:54:10.885 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 15:54:10.885 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 15:54:10.886 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 15:54:10.886 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 15:54:10.886 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 15:54:10.886 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 15:54:10.886 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 15:54:10.886 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 15:54:10.886 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 15:54:10.886 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 15:54:10.886 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 15:54:10.886 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 15:54:10.886 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 15:54:10.886 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 15:54:10.887 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 15:54:10.887 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 15:54:10.887 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 15:54:10.887 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 15:54:10.887 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 15:54:10.887 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 15:54:10.887 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 15:54:10.887 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 15:54:10.887 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-27 15:54:10.887 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 15:54:10.887 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 15:54:10.887 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 15:54:10.888 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 15:54:10.888 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 15:54:10.888 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-27 15:54:10.888 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 15:54:10.888 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 15:54:10.888 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 15:54:10.888 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 15:54:10.888 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-27 15:54:10.888 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-27 15:54:10.888 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-27 15:54:10.889 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 15:54:10.889 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 15:54:10.889 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 15:54:10.889 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 15:54:10.889 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 15:54:10.889 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 15:54:10.889 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 15:54:10.889 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 15:54:10.889 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 15:54:10.889 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 15:54:10.889 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 15:54:10.890 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 15:54:10.890 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 15:54:10.890 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-27 15:54:10.890 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-27 15:54:10.890 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 15:54:10.890 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 15:54:10.890 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 15:54:10.890 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-27 15:54:10.890 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-27 15:54:10.890 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 15:54:10.890 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 15:54:10.890 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 15:54:10.890 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 15:54:10.891 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 15:54:10.891 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 15:54:10.891 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 15:54:10.891 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 15:54:10.891 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 15:54:10.891 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 15:54:10.891 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 15:54:10.891 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 15:54:10.891 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 15:54:10.891 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 15:54:10.891 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 15:54:10.891 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-27 15:54:10.892 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 15:54:10.892 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 15:54:10.892 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 15:54:10.892 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 15:54:10.892 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 15:54:10.892 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 15:54:10.892 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 15:54:10.892 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 15:54:10.892 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 15:54:10.892 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 15:54:10.893 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 15:54:10.893 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 15:54:10.893 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 15:54:10.893 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 15:54:10.893 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 15:54:10.893 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 15:54:10.893 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 15:54:10.893 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 15:54:10.893 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 15:54:10.893 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 15:54:10.893 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 15:54:10.893 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 15:54:10.893 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2024-11-27 15:54:10.894 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2024-11-27 15:54:10.897 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 15:54:10.897 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 15:54:10.898 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1bc49bc5
[DEBUG] 2024-11-27 15:54:10.899 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-27 15:54:10.899 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-27 15:54:10.899 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-27 15:54:10.899 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-27 15:54:10.899 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@24e83d19
[DEBUG] 2024-11-27 15:54:10.899 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5c080ef3
[DEBUG] 2024-11-27 15:54:10.899 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@188cbcde
[DEBUG] 2024-11-27 15:54:10.899 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ee6291f
[INFO ] 2024-11-27 15:54:10.921 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-27 15:54:10.921 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-27 15:54:10.921 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-27 15:54:10.981 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-27 15:54:11.047 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-27 15:54:11.047 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-27 15:54:11.047 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-27 15:54:11.078 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-27 15:54:11.079 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-27 15:54:11.083 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-27 15:54:11.083 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-27 15:54:11.093 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e)
[DEBUG] 2024-11-27 15:54:11.094 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@513b52af)
[DEBUG] 2024-11-27 15:54:11.094 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a8c93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bed3315)
[DEBUG] 2024-11-27 15:54:11.094 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24)
[DEBUG] 2024-11-27 15:54:11.094 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c7350b0)
[DEBUG] 2024-11-27 15:54:11.094 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bc4ef12)
[DEBUG] 2024-11-27 15:54:11.094 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50448409) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5634a861)
[DEBUG] 2024-11-27 15:54:11.094 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b0dc227) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37ad042b)
[DEBUG] 2024-11-27 15:54:11.094 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@43bdaa1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30b975ad)
[DEBUG] 2024-11-27 15:54:11.095 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-27 15:54:11.095 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-27 15:54:11.096 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-27 15:54:11.097 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 15:54:11.097 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 15:54:11.099 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@52bf7bf6
[DEBUG] 2024-11-27 15:54:11.099 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1bc49bc5`
[DEBUG] 2024-11-27 15:54:11.103 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 15:54:11.103 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 15:54:11.103 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 15:54:11.105 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 15:54:11.105 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 15:54:11.105 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 15:54:11.106 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 15:54:11.106 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 15:54:11.106 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 15:54:11.106 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 15:54:11.106 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 15:54:11.107 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 15:54:11.108 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@411a5965]
[DEBUG] 2024-11-27 15:54:11.134 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-27 15:54:11.150 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-27 15:54:11.155 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-27 15:54:11.159 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-27 15:54:11.165 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 15:54:11.178 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:54:11.178 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 15:54:11.178 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 15:54:11.180 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 15:54:11.182 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-27 15:54:11.185 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 15:54:11.187 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-27 15:54:11.187 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 15:54:11.190 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 15:54:11.194 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 15:54:11.194 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:54:11.203 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-27 15:54:11.204 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:54:11.205 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 15:54:11.205 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 15:54:11.206 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 15:54:11.206 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 15:54:11.208 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:54:11.209 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-27 15:54:11.209 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-27 15:54:11.209 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-27 15:54:11.209 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-27 15:54:11.210 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-27 15:54:11.210 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-27 15:54:11.210 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-27 15:54:11.210 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 15:54:11.213 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-27 15:54:11.214 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-27 15:54:11.214 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-27 15:54:11.214 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 15:54:11.215 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:54:11.215 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 15:54:11.215 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 15:54:11.215 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 15:54:11.215 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-27 15:54:11.216 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 15:54:11.216 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-27 15:54:11.216 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 15:54:11.216 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 15:54:11.216 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-27 15:54:11.216 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-27 15:54:11.216 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-27 15:54:11.216 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-27 15:54:11.216 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-27 15:54:11.216 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-27 15:54:11.216 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 15:54:11.217 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:54:11.217 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-27 15:54:11.217 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:54:11.217 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-27 15:54:11.217 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-27 15:54:11.217 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 15:54:11.218 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 15:54:11.218 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:54:11.218 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-27 15:54:11.218 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 15:54:11.219 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-27 15:54:11.219 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-27 15:54:11.220 [main] EntityBinder - Bind entity com.radams.entity.Team on table teams
[DEBUG] 2024-11-27 15:54:11.220 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 15:54:11.223 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:54:11.223 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 15:54:11.224 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 15:54:11.224 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 15:54:11.224 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-27 15:54:11.224 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 15:54:11.224 [main] BasicValue - Skipping column re-registration: teams.id
[DEBUG] 2024-11-27 15:54:11.224 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 15:54:11.224 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 15:54:11.225 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-27 15:54:11.225 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:54:11.227 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-27 15:54:11.227 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-27 15:54:11.227 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-27 15:54:11.228 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-27 15:54:11.228 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-27 15:54:11.228 [main] BasicValue - Skipping column re-registration: teams.team_name
[DEBUG] 2024-11-27 15:54:11.228 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-27 15:54:11.228 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 15:54:11.228 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 15:54:11.229 [main] EntityBinder - Import with entity name FavoriteTeam
[DEBUG] 2024-11-27 15:54:11.229 [main] EntityBinder - Bind entity com.radams.entity.FavoriteTeam on table favorite_teams
[DEBUG] 2024-11-27 15:54:11.229 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 15:54:11.229 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:54:11.229 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 15:54:11.229 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 15:54:11.230 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 15:54:11.230 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.FavoriteTeam:id]
[DEBUG] 2024-11-27 15:54:11.230 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 15:54:11.230 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-27 15:54:11.230 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 15:54:11.230 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 15:54:11.230 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='team_id')
[DEBUG] 2024-11-27 15:54:11.230 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:54:11.230 [main] PropertyBinder - Building property team
[DEBUG] 2024-11-27 15:54:11.231 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-27 15:54:11.231 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:54:11.231 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-27 15:54:11.231 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 15:54:11.232 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 15:54:11.232 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-27 15:54:11.233 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 15:54:11.233 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-27 15:54:11.233 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 15:54:11.233 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-27 15:54:11.233 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 15:54:11.237 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-27 15:54:11.237 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-27 15:54:11.237 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2024-11-27 15:54:11.237 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-27 15:54:11.237 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:54:11.238 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-27 15:54:11.240 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-27 15:54:11.240 [main] TableBinder - Retrieving property com.radams.entity.FavoriteTeam.user
[DEBUG] 2024-11-27 15:54:11.241 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 15:54:11.241 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:54:11.241 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-27 15:54:11.241 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> teams
[DEBUG] 2024-11-27 15:54:11.241 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-27 15:54:11.241 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 15:54:11.242 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 15:54:11.243 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 15:54:11.243 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 15:54:11.249 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 15:54:11.250 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 15:54:11.250 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 15:54:11.459 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-27 15:54:11.489 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 15:54:11.490 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.TeamDaoTest,deleteTeamSuccess, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4409cae6, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-27 15:54:11.493 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-27 15:54:11.498 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 15:54:11.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-27 15:54:11.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-27 15:54:11.526 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-27 15:54:11.527 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-27 15:54:11.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1cde374] under count; prior registration was null
[DEBUG] 2024-11-27 15:54:11.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7b5021d1] under every; prior registration was null
[DEBUG] 2024-11-27 15:54:11.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6befbb12] under any; prior registration was null
[DEBUG] 2024-11-27 15:54:11.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-27 15:54:11.528 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-27 15:54:11.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-27 15:54:11.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-27 15:54:11.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-27 15:54:11.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-27 15:54:11.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-27 15:54:11.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-27 15:54:11.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-27 15:54:11.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-27 15:54:11.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-27 15:54:11.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-27 15:54:11.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-27 15:54:11.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-27 15:54:11.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-27 15:54:11.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-27 15:54:11.529 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-27 15:54:11.531 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398] under sinh; prior registration was null
[DEBUG] 2024-11-27 15:54:11.531 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6] under cosh; prior registration was null
[DEBUG] 2024-11-27 15:54:11.531 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37b01ce2] under tanh; prior registration was null
[DEBUG] 2024-11-27 15:54:11.531 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a88c4f5] under pi; prior registration was null
[DEBUG] 2024-11-27 15:54:11.531 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1894fa9f] under log; prior registration was null
[DEBUG] 2024-11-27 15:54:11.532 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-27 15:54:11.532 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-27 15:54:11.532 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-27 15:54:11.532 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-27 15:54:11.532 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-27 15:54:11.532 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-27 15:54:11.532 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-27 15:54:11.532 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-27 15:54:11.532 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-27 15:54:11.532 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-27 15:54:11.533 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-27 15:54:11.533 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-27 15:54:11.533 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@63f9ddf9] under position; prior registration was null
[DEBUG] 2024-11-27 15:54:11.535 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@38087342] under overlay; prior registration was null
[DEBUG] 2024-11-27 15:54:11.536 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5d9d2119] under trim; prior registration was null
[DEBUG] 2024-11-27 15:54:11.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2a04ab05] under cast; prior registration was null
[DEBUG] 2024-11-27 15:54:11.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ebbde60] under collate; prior registration was null
[DEBUG] 2024-11-27 15:54:11.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@25c1f5ee] under extract; prior registration was null
[DEBUG] 2024-11-27 15:54:11.538 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-27 15:54:11.538 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-27 15:54:11.538 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3f6c2763] under ifnull; prior registration was null
[DEBUG] 2024-11-27 15:54:11.538 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-27 15:54:11.538 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-27 15:54:11.539 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2a484710] under pad; prior registration was null
[DEBUG] 2024-11-27 15:54:11.539 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2ad7bd26] under str; prior registration was null
[DEBUG] 2024-11-27 15:54:11.540 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1216eb3f] under format; prior registration was null
[DEBUG] 2024-11-27 15:54:11.540 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1510b9a2] under timestampadd; prior registration was null
[DEBUG] 2024-11-27 15:54:11.541 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3af236d0] under timestampdiff; prior registration was null
[DEBUG] 2024-11-27 15:54:11.541 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-27 15:54:11.541 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-27 15:54:11.541 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bf570c] under current_date; prior registration was null
[DEBUG] 2024-11-27 15:54:11.541 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1796b2d4] under current_time; prior registration was null
[DEBUG] 2024-11-27 15:54:11.541 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@935d3f9] under current_timestamp; prior registration was null
[DEBUG] 2024-11-27 15:54:11.541 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-27 15:54:11.541 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-27 15:54:11.541 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@214b342f] under local_date; prior registration was null
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5db0003d] under local_time; prior registration was null
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f12094d] under local_datetime; prior registration was null
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@589fb74d] under offset_datetime; prior registration was null
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@200d1a3d] under instant; prior registration was null
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7f42b194] under sql; prior registration was null
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-27 15:54:11.542 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1894fa9f
[DEBUG] 2024-11-27 15:54:11.543 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-27 15:54:11.543 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-27 15:54:11.543 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-27 15:54:11.543 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-27 15:54:11.543 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-27 15:54:11.543 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-27 15:54:11.543 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-27 15:54:11.543 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-27 15:54:11.543 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@402b4f81] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-27 15:54:11.543 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@13ef7fa1] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-27 15:54:11.543 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-27 15:54:11.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-27 15:54:11.545 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-27 15:54:11.545 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-27 15:54:11.545 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-27 15:54:11.545 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-27 15:54:11.545 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-27 15:54:11.545 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-27 15:54:11.545 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-27 15:54:11.545 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-27 15:54:11.545 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-27 15:54:11.545 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23b1aa9] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@63f9ddf9
[DEBUG] 2024-11-27 15:54:11.545 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-27 15:54:11.545 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-27 15:54:11.545 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7345f97d] under trunc; prior registration was null
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@554566a8] under bitand; prior registration was null
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66020d69] under bitor; prior registration was null
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3751acd7] under bitxor; prior registration was null
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b832551] under bitnot; prior registration was null
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-27 15:54:11.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@150d6eaf] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1216eb3f
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5db0003d
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@7f12094d
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63124022] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a88c4f5
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@591f6f83] under chr; prior registration was null
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b44605c] under sysdate; prior registration was null
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-27 15:54:11.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-27 15:54:11.550 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-27 15:54:11.550 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-27 15:54:11.550 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 15:54:11.551 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@177ede17] under rank; prior registration was null
[DEBUG] 2024-11-27 15:54:11.551 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@17176b18] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 15:54:11.551 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4e4395c] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 15:54:11.551 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1ab53860] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 15:54:11.551 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@41f785e3] under listagg; prior registration was null
[DEBUG] 2024-11-27 15:54:11.554 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.554 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.554 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 15:54:11.554 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 15:54:11.554 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 15:54:11.554 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 15:54:11.555 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 15:54:11.556 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.557 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 15:54:11.558 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 15:54:11.561 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 15:54:11.660 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 15:54:11.661 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 15:54:11.738 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:54:11.741 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:54:11.743 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 15:54:11.743 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 15:54:11.865 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 15:54:11.869 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:54:11.890 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:54:11.890 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:54:11.890 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:54:11.890 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:54:11.890 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 15:54:11.890 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 15:54:11.903 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.FavoriteTeam]: private accessor [team]
[DEBUG] 2024-11-27 15:54:11.903 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:54:11.903 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:54:11.904 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 15:54:11.904 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 15:54:11.917 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 15:54:11.918 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 15:54:11.918 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 15:54:11.926 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 15:54:11.937 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:54:11.937 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:54:11.937 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:54:11.938 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:54:11.938 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:54:11.938 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:54:11.959 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 15:54:11.959 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 15:54:11.962 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 15:54:11.963 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.team]
[DEBUG] 2024-11-27 15:54:11.963 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.user]
[DEBUG] 2024-11-27 15:54:11.963 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.FavoriteTeam) `staticFetchableList` generator
[DEBUG] 2024-11-27 15:54:11.963 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 15:54:11.963 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 15:54:11.963 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 15:54:11.963 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 15:54:11.963 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 15:54:11.963 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 15:54:11.963 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 15:54:11.963 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 15:54:11.963 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 15:54:11.963 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 15:54:12.014 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:54:12.016 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 15:54:12.022 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@578b2dec] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 15:54:12.023 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 15:54:12.029 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  \-BasicFetch [com.radams.entity.Team.teamName]

[DEBUG] 2024-11-27 15:54:12.037 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:54:12.043 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 15:54:12.043 [main] AbstractEntityPersister -  Version select: select id from teams where id=?
[DEBUG] 2024-11-27 15:54:12.044 [main] AbstractEntityPersister -  Insert (0): insert into teams (sport_id,team_name) values (?,?)
[DEBUG] 2024-11-27 15:54:12.044 [main] AbstractEntityPersister -  Update (0): update teams set sport_id=?,team_name=? where id=?
[DEBUG] 2024-11-27 15:54:12.044 [main] AbstractEntityPersister -  Delete (0): delete from teams where id=?
[DEBUG] 2024-11-27 15:54:12.044 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 15:54:12.044 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.FavoriteTeam)] with identifierForTableGroup [com.radams.entity.FavoriteTeam] for NavigablePath [com.radams.entity.FavoriteTeam] 
[DEBUG] 2024-11-27 15:54:12.044 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1607d391] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team] for NavigablePath [com.radams.entity.FavoriteTeam.team] 
[DEBUG] 2024-11-27 15:54:12.044 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:54:12.044 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38826984] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team.sport] for NavigablePath [com.radams.entity.FavoriteTeam.team.sport] 
[DEBUG] 2024-11-27 15:54:12.044 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 15:54:12.044 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a78d380] with identifierForTableGroup [com.radams.entity.FavoriteTeam.user] for NavigablePath [com.radams.entity.FavoriteTeam.user] 
[DEBUG] 2024-11-27 15:54:12.044 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 15:54:12.044 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.FavoriteTeam]
 |  +-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.team]
 |  \-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.user]

[DEBUG] 2024-11-27 15:54:12.045 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ft1 : com.radams.entity.FavoriteTeam) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.FavoriteTeam.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.FavoriteTeam.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.FavoriteTeam.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:54:12.045 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 15:54:12.045 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 15:54:12.045 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (team_id,user_id) values (?,?)
[DEBUG] 2024-11-27 15:54:12.045 [main] AbstractEntityPersister -  Update (0): update favorite_teams set team_id=?,user_id=? where id=?
[DEBUG] 2024-11-27 15:54:12.045 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 15:54:12.045 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 15:54:12.045 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 15:54:12.046 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:54:12.047 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@71734463] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 15:54:12.047 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 15:54:12.054 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 15:54:12.054 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : teams as t1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:54:12.054 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 15:54:12.054 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 15:54:12.054 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 15:54:12.054 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 15:54:12.054 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 15:54:12.054 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 15:54:12.054 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 15:54:12.054 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 15:54:12.054 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@59b98ad1] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 15:54:12.054 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 15:54:12.055 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@591e5fd4] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 15:54:12.055 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:54:12.055 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37b238da] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 15:54:12.055 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 15:54:12.056 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
                  primaryTableReference : teams as t1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:54:12.056 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 15:54:12.056 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 15:54:12.056 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 15:54:12.056 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 15:54:12.056 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 15:54:12.057 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 15:54:12.057 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@158e6fc2] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 15:54:12.057 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 15:54:12.057 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@acd3460] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 15:54:12.057 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:54:12.057 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3ea9a091] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 15:54:12.057 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 15:54:12.058 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@16f4a3c0] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 15:54:12.059 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 15:54:12.060 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:54:12.060 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:54:12.060 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:54:12.060 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@54496c2d] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 15:54:12.060 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 15:54:12.060 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4e1a3d5a] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 15:54:12.060 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 15:54:12.060 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:54:12.060 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:54:12.081 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 15:54:12.081 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 15:54:12.084 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 15:54:12.084 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 15:54:12.085 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@275902e1]
[DEBUG] 2024-11-27 15:54:12.086 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 15:54:12.087 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 15:54:12.087 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 15:54:12.087 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 15:54:12.089 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3516b881
[DEBUG] 2024-11-27 15:54:12.089 [main] SessionFactoryRegistry - Registering SessionFactory: 884f689e-6d7f-4c1b-b16c-58d0305d9b18 (<unnamed>)
[DEBUG] 2024-11-27 15:54:12.090 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 15:54:12.090 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 15:54:12.136 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 15:54:12.149 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 15:54:12.163 [main] results - Initializer list:
	  com.radams.entity.Team -> EntityResultInitializer(com.radams.entity.Team)@93011633 (SingleTableEntityPersister(com.radams.entity.Team))
	  com.radams.entity.Team.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.Team.sport.teams)@1836984213 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Team.sport -> EntityJoinedFetchInitializer(com.radams.entity.Team.sport)@903383636 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1813769162)

[DEBUG] 2024-11-27 15:54:12.167 [main] SQL - select t1_0.id,s1_0.id,s1_0.name,t1_0.team_name from teams t1_0 left join sports s1_0 on s1_0.id=t1_0.sport_id where t1_0.id=?
[DEBUG] 2024-11-27 15:54:12.181 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 15:54:12.181 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Team.sport): 1
[DEBUG] 2024-11-27 15:54:12.182 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team): 1
[DEBUG] 2024-11-27 15:54:12.182 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : com.radams.entity.Team.sport.teams#1
[DEBUG] 2024-11-27 15:54:12.184 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Team.sport#1] : 754485505
[DEBUG] 2024-11-27 15:54:12.184 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team#1] : 1630192523
[DEBUG] 2024-11-27 15:54:12.188 [main] results - Extracted JDBC value [2] - [NBA]
[DEBUG] 2024-11-27 15:54:12.191 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Team.sport#1
[DEBUG] 2024-11-27 15:54:12.191 [main] results - Extracted JDBC value [3] - [Hawks]
[DEBUG] 2024-11-27 15:54:12.192 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team#1
[DEBUG] 2024-11-27 15:54:12.192 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e7e7a7e
[DEBUG] 2024-11-27 15:54:12.195 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 15:54:12.199 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.sport -> EntitySelectFetchInitializer(com.radams.entity.Sport.teams.{element}.sport)@320043061 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1813769162)
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1333929103 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@570434649)
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@700253546 (PluralAttribute(com.radams.entity.Sport.teams))

[DEBUG] 2024-11-27 15:54:12.199 [main] SQL - select t1_0.sport_id,t1_0.id,t1_0.team_name from teams t1_0 where t1_0.sport_id=?
[DEBUG] 2024-11-27 15:54:12.200 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 15:54:12.200 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 15:54:12.200 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 15:54:12.200 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 15:54:12.201 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 15:54:12.202 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@949107966
[DEBUG] 2024-11-27 15:54:12.202 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@949107966
[DEBUG] 2024-11-27 15:54:12.202 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2ac9e53c
[DEBUG] 2024-11-27 15:54:12.202 [main] results - Extracted JDBC value [1] - [3]
[DEBUG] 2024-11-27 15:54:12.202 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 15:54:12.202 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 15:54:12.202 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 15:54:12.202 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 15:54:12.202 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#3] : 1254589807
[DEBUG] 2024-11-27 15:54:12.202 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 15:54:12.202 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#1] - using loading instance
[DEBUG] 2024-11-27 15:54:12.202 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@949107966
[DEBUG] 2024-11-27 15:54:12.203 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@949107966
[DEBUG] 2024-11-27 15:54:12.203 [main] results - Extracted JDBC value [2] - [Bulls]
[DEBUG] 2024-11-27 15:54:12.203 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#3
[DEBUG] 2024-11-27 15:54:12.203 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@949107966
[DEBUG] 2024-11-27 15:54:12.203 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2ac9e53c
[DEBUG] 2024-11-27 15:54:12.203 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 15:54:12.204 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 15:54:12.205 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 15:54:12.207 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-27 15:54:12.207 [main] TransactionImpl - begin
[DEBUG] 2024-11-27 15:54:12.213 [main] TransactionImpl - committing
[DEBUG] 2024-11-27 15:54:12.214 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-27 15:54:12.214 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-27 15:54:12.217 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-27 15:54:12.217 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2024-11-27 15:54:12.217 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-27 15:54:12.218 [main] EntityPrinter - com.radams.entity.Team{teamName=Hawks, id=1, sport=com.radams.entity.Sport#1}
[DEBUG] 2024-11-27 15:54:12.223 [main] SQL - delete from teams where id=?
[DEBUG] 2024-11-27 15:54:12.226 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 15:54:12.227 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 15:55:37.454 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-27 15:55:37.456 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-27 15:55:37.474 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-27 15:55:37.476 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-27 15:55:37.512 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-27 15:55:37.516 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-27 15:55:37.663 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-27 15:55:37.666 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-27 15:55:37.666 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-27 15:55:37.667 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 15:55:37.667 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 15:55:37.667 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-27 15:55:37.668 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-27 15:55:37.668 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-27 15:55:37.669 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 15:55:37.669 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-27 15:55:37.670 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-27 15:55:37.670 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 15:55:37.671 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-27 15:55:37.684 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-27 15:55:37.684 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-27 15:55:37.755 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 15:55:37.756 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 15:55:37.756 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 15:55:37.756 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 15:55:37.756 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 15:55:37.756 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 15:55:37.756 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 15:55:37.756 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 15:55:37.756 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 15:55:37.756 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 15:55:37.756 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 15:55:37.757 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 15:55:37.757 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 15:55:37.757 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 15:55:37.757 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 15:55:37.757 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 15:55:37.757 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 15:55:37.757 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-27 15:55:37.757 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 15:55:37.757 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 15:55:37.757 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 15:55:37.758 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 15:55:37.758 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 15:55:37.758 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 15:55:37.758 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 15:55:37.758 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 15:55:37.758 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 15:55:37.758 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 15:55:37.758 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 15:55:37.758 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 15:55:37.758 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 15:55:37.759 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 15:55:37.759 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 15:55:37.759 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 15:55:37.759 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 15:55:37.759 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 15:55:37.759 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 15:55:37.759 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 15:55:37.759 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 15:55:37.759 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 15:55:37.759 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 15:55:37.759 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 15:55:37.760 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 15:55:37.760 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 15:55:37.760 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 15:55:37.760 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 15:55:37.760 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 15:55:37.760 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-27 15:55:37.760 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 15:55:37.760 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 15:55:37.760 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 15:55:37.760 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 15:55:37.760 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 15:55:37.760 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-27 15:55:37.761 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 15:55:37.761 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 15:55:37.761 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 15:55:37.761 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 15:55:37.761 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-27 15:55:37.761 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-27 15:55:37.761 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-27 15:55:37.761 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 15:55:37.761 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 15:55:37.761 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 15:55:37.761 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 15:55:37.762 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 15:55:37.762 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 15:55:37.762 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 15:55:37.762 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 15:55:37.762 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 15:55:37.762 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 15:55:37.762 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 15:55:37.762 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 15:55:37.762 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 15:55:37.762 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-27 15:55:37.762 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-27 15:55:37.762 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 15:55:37.763 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 15:55:37.763 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 15:55:37.763 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-27 15:55:37.763 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-27 15:55:37.763 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 15:55:37.763 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 15:55:37.763 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 15:55:37.763 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 15:55:37.763 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 15:55:37.763 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 15:55:37.763 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 15:55:37.763 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 15:55:37.764 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 15:55:37.764 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 15:55:37.764 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 15:55:37.764 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 15:55:37.764 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 15:55:37.764 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 15:55:37.764 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 15:55:37.764 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-27 15:55:37.764 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 15:55:37.764 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 15:55:37.764 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 15:55:37.764 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 15:55:37.765 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 15:55:37.765 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 15:55:37.765 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 15:55:37.765 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 15:55:37.765 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 15:55:37.765 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 15:55:37.765 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 15:55:37.765 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 15:55:37.765 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 15:55:37.766 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 15:55:37.766 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 15:55:37.766 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 15:55:37.766 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 15:55:37.766 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 15:55:37.766 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 15:55:37.766 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 15:55:37.766 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 15:55:37.766 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 15:55:37.766 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2024-11-27 15:55:37.766 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2024-11-27 15:55:37.771 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 15:55:37.771 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 15:55:37.772 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1bc49bc5
[DEBUG] 2024-11-27 15:55:37.772 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-27 15:55:37.773 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-27 15:55:37.773 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-27 15:55:37.773 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-27 15:55:37.773 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@24e83d19
[DEBUG] 2024-11-27 15:55:37.773 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5c080ef3
[DEBUG] 2024-11-27 15:55:37.773 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@188cbcde
[DEBUG] 2024-11-27 15:55:37.773 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ee6291f
[INFO ] 2024-11-27 15:55:37.793 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-27 15:55:37.794 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-27 15:55:37.794 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-27 15:55:37.854 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-27 15:55:37.929 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-27 15:55:37.929 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-27 15:55:37.929 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-27 15:55:37.962 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-27 15:55:37.962 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-27 15:55:37.966 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-27 15:55:37.966 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-27 15:55:37.976 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e)
[DEBUG] 2024-11-27 15:55:37.976 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@513b52af)
[DEBUG] 2024-11-27 15:55:37.977 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a8c93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bed3315)
[DEBUG] 2024-11-27 15:55:37.977 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24)
[DEBUG] 2024-11-27 15:55:37.977 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c7350b0)
[DEBUG] 2024-11-27 15:55:37.977 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bc4ef12)
[DEBUG] 2024-11-27 15:55:37.977 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50448409) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5634a861)
[DEBUG] 2024-11-27 15:55:37.977 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b0dc227) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37ad042b)
[DEBUG] 2024-11-27 15:55:37.977 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@43bdaa1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30b975ad)
[DEBUG] 2024-11-27 15:55:37.978 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-27 15:55:37.978 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-27 15:55:37.979 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-27 15:55:37.980 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 15:55:37.980 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 15:55:37.982 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@52bf7bf6
[DEBUG] 2024-11-27 15:55:37.982 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1bc49bc5`
[DEBUG] 2024-11-27 15:55:37.986 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 15:55:37.986 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 15:55:37.986 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 15:55:37.988 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 15:55:37.988 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 15:55:37.988 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 15:55:37.988 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 15:55:37.988 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 15:55:37.989 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 15:55:37.989 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 15:55:37.989 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 15:55:37.989 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 15:55:37.990 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@411a5965]
[DEBUG] 2024-11-27 15:55:38.016 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-27 15:55:38.033 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-27 15:55:38.038 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-27 15:55:38.043 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-27 15:55:38.048 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 15:55:38.062 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:55:38.062 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 15:55:38.062 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 15:55:38.064 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 15:55:38.067 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-27 15:55:38.070 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 15:55:38.072 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-27 15:55:38.073 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 15:55:38.075 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 15:55:38.080 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 15:55:38.080 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:55:38.087 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-27 15:55:38.088 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:55:38.089 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 15:55:38.089 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 15:55:38.090 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 15:55:38.090 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 15:55:38.092 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:55:38.093 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-27 15:55:38.094 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-27 15:55:38.094 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-27 15:55:38.094 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-27 15:55:38.094 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-27 15:55:38.094 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-27 15:55:38.094 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-27 15:55:38.095 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 15:55:38.098 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-27 15:55:38.098 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-27 15:55:38.099 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-27 15:55:38.099 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 15:55:38.099 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:55:38.100 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 15:55:38.100 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 15:55:38.100 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 15:55:38.100 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-27 15:55:38.100 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 15:55:38.100 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-27 15:55:38.100 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 15:55:38.100 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 15:55:38.100 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-27 15:55:38.100 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-27 15:55:38.100 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-27 15:55:38.101 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-27 15:55:38.101 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-27 15:55:38.101 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-27 15:55:38.101 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 15:55:38.101 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:55:38.101 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-27 15:55:38.102 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:55:38.102 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-27 15:55:38.102 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-27 15:55:38.102 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 15:55:38.102 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 15:55:38.102 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:55:38.102 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-27 15:55:38.102 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 15:55:38.103 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-27 15:55:38.103 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-27 15:55:38.103 [main] EntityBinder - Bind entity com.radams.entity.Team on table teams
[DEBUG] 2024-11-27 15:55:38.104 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 15:55:38.107 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:55:38.107 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 15:55:38.107 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 15:55:38.107 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 15:55:38.107 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-27 15:55:38.108 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 15:55:38.108 [main] BasicValue - Skipping column re-registration: teams.id
[DEBUG] 2024-11-27 15:55:38.108 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 15:55:38.108 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 15:55:38.108 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-27 15:55:38.108 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:55:38.110 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-27 15:55:38.110 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-27 15:55:38.110 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-27 15:55:38.110 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-27 15:55:38.111 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-27 15:55:38.111 [main] BasicValue - Skipping column re-registration: teams.team_name
[DEBUG] 2024-11-27 15:55:38.111 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-27 15:55:38.111 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 15:55:38.111 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 15:55:38.112 [main] EntityBinder - Import with entity name FavoriteTeam
[DEBUG] 2024-11-27 15:55:38.112 [main] EntityBinder - Bind entity com.radams.entity.FavoriteTeam on table favorite_teams
[DEBUG] 2024-11-27 15:55:38.112 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 15:55:38.112 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:55:38.112 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 15:55:38.112 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 15:55:38.113 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 15:55:38.113 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.FavoriteTeam:id]
[DEBUG] 2024-11-27 15:55:38.113 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 15:55:38.113 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-27 15:55:38.113 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 15:55:38.113 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 15:55:38.113 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='team_id')
[DEBUG] 2024-11-27 15:55:38.113 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:55:38.113 [main] PropertyBinder - Building property team
[DEBUG] 2024-11-27 15:55:38.114 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-27 15:55:38.114 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 15:55:38.114 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-27 15:55:38.114 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 15:55:38.115 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 15:55:38.115 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-27 15:55:38.116 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 15:55:38.116 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-27 15:55:38.116 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 15:55:38.116 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-27 15:55:38.116 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 15:55:38.119 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-27 15:55:38.119 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-27 15:55:38.119 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2024-11-27 15:55:38.119 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-27 15:55:38.119 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:55:38.120 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-27 15:55:38.122 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-27 15:55:38.122 [main] TableBinder - Retrieving property com.radams.entity.FavoriteTeam.user
[DEBUG] 2024-11-27 15:55:38.123 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 15:55:38.123 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:55:38.123 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-27 15:55:38.123 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> teams
[DEBUG] 2024-11-27 15:55:38.123 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-27 15:55:38.123 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 15:55:38.123 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 15:55:38.124 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 15:55:38.124 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 15:55:38.130 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 15:55:38.130 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 15:55:38.131 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 15:55:38.338 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-27 15:55:38.373 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 15:55:38.373 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.TeamDaoTest,deleteTeamSuccess, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4409cae6, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-27 15:55:38.376 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-27 15:55:38.381 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 15:55:38.412 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-27 15:55:38.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-27 15:55:38.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-27 15:55:38.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-27 15:55:38.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1cde374] under count; prior registration was null
[DEBUG] 2024-11-27 15:55:38.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7b5021d1] under every; prior registration was null
[DEBUG] 2024-11-27 15:55:38.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6befbb12] under any; prior registration was null
[DEBUG] 2024-11-27 15:55:38.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-27 15:55:38.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-27 15:55:38.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-27 15:55:38.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-27 15:55:38.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-27 15:55:38.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-27 15:55:38.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-27 15:55:38.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-27 15:55:38.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-27 15:55:38.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-27 15:55:38.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-27 15:55:38.417 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-27 15:55:38.417 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-27 15:55:38.417 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-27 15:55:38.417 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-27 15:55:38.417 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-27 15:55:38.417 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-27 15:55:38.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398] under sinh; prior registration was null
[DEBUG] 2024-11-27 15:55:38.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6] under cosh; prior registration was null
[DEBUG] 2024-11-27 15:55:38.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37b01ce2] under tanh; prior registration was null
[DEBUG] 2024-11-27 15:55:38.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a88c4f5] under pi; prior registration was null
[DEBUG] 2024-11-27 15:55:38.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1894fa9f] under log; prior registration was null
[DEBUG] 2024-11-27 15:55:38.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-27 15:55:38.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-27 15:55:38.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-27 15:55:38.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-27 15:55:38.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-27 15:55:38.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-27 15:55:38.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-27 15:55:38.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-27 15:55:38.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-27 15:55:38.421 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-27 15:55:38.421 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-27 15:55:38.421 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-27 15:55:38.421 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@63f9ddf9] under position; prior registration was null
[DEBUG] 2024-11-27 15:55:38.423 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@38087342] under overlay; prior registration was null
[DEBUG] 2024-11-27 15:55:38.424 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5d9d2119] under trim; prior registration was null
[DEBUG] 2024-11-27 15:55:38.425 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2a04ab05] under cast; prior registration was null
[DEBUG] 2024-11-27 15:55:38.425 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ebbde60] under collate; prior registration was null
[DEBUG] 2024-11-27 15:55:38.425 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@25c1f5ee] under extract; prior registration was null
[DEBUG] 2024-11-27 15:55:38.425 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-27 15:55:38.425 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-27 15:55:38.426 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3f6c2763] under ifnull; prior registration was null
[DEBUG] 2024-11-27 15:55:38.426 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-27 15:55:38.426 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-27 15:55:38.426 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2a484710] under pad; prior registration was null
[DEBUG] 2024-11-27 15:55:38.426 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2ad7bd26] under str; prior registration was null
[DEBUG] 2024-11-27 15:55:38.427 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1216eb3f] under format; prior registration was null
[DEBUG] 2024-11-27 15:55:38.428 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1510b9a2] under timestampadd; prior registration was null
[DEBUG] 2024-11-27 15:55:38.428 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3af236d0] under timestampdiff; prior registration was null
[DEBUG] 2024-11-27 15:55:38.428 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-27 15:55:38.428 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-27 15:55:38.428 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bf570c] under current_date; prior registration was null
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1796b2d4] under current_time; prior registration was null
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@935d3f9] under current_timestamp; prior registration was null
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@214b342f] under local_date; prior registration was null
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5db0003d] under local_time; prior registration was null
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f12094d] under local_datetime; prior registration was null
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@589fb74d] under offset_datetime; prior registration was null
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@200d1a3d] under instant; prior registration was null
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7f42b194] under sql; prior registration was null
[DEBUG] 2024-11-27 15:55:38.429 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-27 15:55:38.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-27 15:55:38.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-27 15:55:38.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-27 15:55:38.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1894fa9f
[DEBUG] 2024-11-27 15:55:38.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-27 15:55:38.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-27 15:55:38.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-27 15:55:38.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-27 15:55:38.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-27 15:55:38.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-27 15:55:38.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-27 15:55:38.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-27 15:55:38.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@402b4f81] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-27 15:55:38.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@13ef7fa1] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-27 15:55:38.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23b1aa9] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@63f9ddf9
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-27 15:55:38.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-27 15:55:38.433 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-27 15:55:38.435 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7345f97d] under trunc; prior registration was null
[DEBUG] 2024-11-27 15:55:38.435 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-27 15:55:38.435 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-27 15:55:38.435 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@554566a8] under bitand; prior registration was null
[DEBUG] 2024-11-27 15:55:38.435 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66020d69] under bitor; prior registration was null
[DEBUG] 2024-11-27 15:55:38.435 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3751acd7] under bitxor; prior registration was null
[DEBUG] 2024-11-27 15:55:38.435 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b832551] under bitnot; prior registration was null
[DEBUG] 2024-11-27 15:55:38.435 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@150d6eaf] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1216eb3f
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-27 15:55:38.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-27 15:55:38.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5db0003d
[DEBUG] 2024-11-27 15:55:38.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@7f12094d
[DEBUG] 2024-11-27 15:55:38.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-27 15:55:38.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63124022] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a88c4f5
[DEBUG] 2024-11-27 15:55:38.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@591f6f83] under chr; prior registration was null
[DEBUG] 2024-11-27 15:55:38.437 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-27 15:55:38.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b44605c] under sysdate; prior registration was null
[DEBUG] 2024-11-27 15:55:38.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-27 15:55:38.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-27 15:55:38.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-27 15:55:38.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-27 15:55:38.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-27 15:55:38.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 15:55:38.438 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@177ede17] under rank; prior registration was null
[DEBUG] 2024-11-27 15:55:38.438 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@17176b18] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 15:55:38.438 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4e4395c] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 15:55:38.438 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1ab53860] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 15:55:38.439 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@41f785e3] under listagg; prior registration was null
[DEBUG] 2024-11-27 15:55:38.442 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.442 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.442 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 15:55:38.442 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 15:55:38.442 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 15:55:38.442 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 15:55:38.442 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.442 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 15:55:38.443 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 15:55:38.444 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 15:55:38.445 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 15:55:38.446 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 15:55:38.449 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 15:55:38.541 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 15:55:38.542 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 15:55:38.622 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:55:38.624 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:55:38.626 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 15:55:38.626 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 15:55:38.785 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 15:55:38.788 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:55:38.810 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:55:38.810 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:55:38.810 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:55:38.810 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:55:38.810 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 15:55:38.810 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 15:55:38.824 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.FavoriteTeam]: private accessor [team]
[DEBUG] 2024-11-27 15:55:38.824 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:55:38.824 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 15:55:38.825 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 15:55:38.825 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 15:55:38.838 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 15:55:38.838 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 15:55:38.838 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 15:55:38.847 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 15:55:38.858 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:55:38.859 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:55:38.859 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:55:38.859 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:55:38.859 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:55:38.859 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:55:38.880 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 15:55:38.880 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 15:55:38.883 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 15:55:38.883 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.team]
[DEBUG] 2024-11-27 15:55:38.883 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.user]
[DEBUG] 2024-11-27 15:55:38.883 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.FavoriteTeam) `staticFetchableList` generator
[DEBUG] 2024-11-27 15:55:38.883 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 15:55:38.883 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 15:55:38.883 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 15:55:38.883 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 15:55:38.883 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 15:55:38.883 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 15:55:38.883 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 15:55:38.883 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 15:55:38.883 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 15:55:38.883 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 15:55:38.932 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:55:38.934 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 15:55:38.942 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@578b2dec] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 15:55:38.943 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 15:55:38.949 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  \-BasicFetch [com.radams.entity.Team.teamName]

[DEBUG] 2024-11-27 15:55:38.958 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:55:38.964 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 15:55:38.964 [main] AbstractEntityPersister -  Version select: select id from teams where id=?
[DEBUG] 2024-11-27 15:55:38.965 [main] AbstractEntityPersister -  Insert (0): insert into teams (sport_id,team_name) values (?,?)
[DEBUG] 2024-11-27 15:55:38.965 [main] AbstractEntityPersister -  Update (0): update teams set sport_id=?,team_name=? where id=?
[DEBUG] 2024-11-27 15:55:38.965 [main] AbstractEntityPersister -  Delete (0): delete from teams where id=?
[DEBUG] 2024-11-27 15:55:38.965 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 15:55:38.965 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.FavoriteTeam)] with identifierForTableGroup [com.radams.entity.FavoriteTeam] for NavigablePath [com.radams.entity.FavoriteTeam] 
[DEBUG] 2024-11-27 15:55:38.965 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1607d391] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team] for NavigablePath [com.radams.entity.FavoriteTeam.team] 
[DEBUG] 2024-11-27 15:55:38.965 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:55:38.965 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38826984] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team.sport] for NavigablePath [com.radams.entity.FavoriteTeam.team.sport] 
[DEBUG] 2024-11-27 15:55:38.965 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 15:55:38.965 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a78d380] with identifierForTableGroup [com.radams.entity.FavoriteTeam.user] for NavigablePath [com.radams.entity.FavoriteTeam.user] 
[DEBUG] 2024-11-27 15:55:38.965 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 15:55:38.965 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.FavoriteTeam]
 |  +-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.team]
 |  \-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.user]

[DEBUG] 2024-11-27 15:55:38.966 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ft1 : com.radams.entity.FavoriteTeam) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.FavoriteTeam.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.FavoriteTeam.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.FavoriteTeam.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:55:38.966 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 15:55:38.966 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 15:55:38.966 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (team_id,user_id) values (?,?)
[DEBUG] 2024-11-27 15:55:38.966 [main] AbstractEntityPersister -  Update (0): update favorite_teams set team_id=?,user_id=? where id=?
[DEBUG] 2024-11-27 15:55:38.966 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 15:55:38.966 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 15:55:38.966 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 15:55:38.967 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:55:38.968 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@71734463] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 15:55:38.969 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 15:55:38.975 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 15:55:38.975 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : teams as t1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:55:38.975 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 15:55:38.975 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 15:55:38.975 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 15:55:38.975 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 15:55:38.975 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 15:55:38.975 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 15:55:38.975 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 15:55:38.975 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 15:55:38.975 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@59b98ad1] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 15:55:38.975 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 15:55:38.975 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@591e5fd4] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 15:55:38.976 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:55:38.976 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37b238da] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 15:55:38.977 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 15:55:38.977 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
                  primaryTableReference : teams as t1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:55:38.977 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 15:55:38.977 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 15:55:38.977 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 15:55:38.977 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 15:55:38.977 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 15:55:38.978 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 15:55:38.978 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@158e6fc2] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 15:55:38.978 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 15:55:38.979 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@acd3460] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 15:55:38.979 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:55:38.979 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3ea9a091] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 15:55:38.979 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 15:55:38.979 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@16f4a3c0] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 15:55:38.980 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 15:55:38.980 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:55:38.980 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 15:55:38.980 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 15:55:38.980 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@54496c2d] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 15:55:38.980 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 15:55:38.981 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4e1a3d5a] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 15:55:38.981 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 15:55:38.981 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 15:55:38.981 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 15:55:39.003 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 15:55:39.004 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 15:55:39.007 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 15:55:39.007 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 15:55:39.007 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@275902e1]
[DEBUG] 2024-11-27 15:55:39.008 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 15:55:39.008 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 15:55:39.009 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 15:55:39.009 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 15:55:39.010 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3516b881
[DEBUG] 2024-11-27 15:55:39.010 [main] SessionFactoryRegistry - Registering SessionFactory: a56642bc-21eb-4c9c-8525-41b1af822fe0 (<unnamed>)
[DEBUG] 2024-11-27 15:55:39.010 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 15:55:39.010 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 15:55:39.052 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 15:55:39.065 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 15:55:39.077 [main] results - Initializer list:
	  com.radams.entity.Team -> EntityResultInitializer(com.radams.entity.Team)@93011633 (SingleTableEntityPersister(com.radams.entity.Team))
	  com.radams.entity.Team.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.Team.sport.teams)@1836984213 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Team.sport -> EntityJoinedFetchInitializer(com.radams.entity.Team.sport)@903383636 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1813769162)

[DEBUG] 2024-11-27 15:55:39.081 [main] SQL - select t1_0.id,s1_0.id,s1_0.name,t1_0.team_name from teams t1_0 left join sports s1_0 on s1_0.id=t1_0.sport_id where t1_0.id=?
[DEBUG] 2024-11-27 15:55:39.096 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 15:55:39.096 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Team.sport): 1
[DEBUG] 2024-11-27 15:55:39.096 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team): 1
[DEBUG] 2024-11-27 15:55:39.097 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : com.radams.entity.Team.sport.teams#1
[DEBUG] 2024-11-27 15:55:39.098 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Team.sport#1] : 754485505
[DEBUG] 2024-11-27 15:55:39.099 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team#1] : 1630192523
[DEBUG] 2024-11-27 15:55:39.104 [main] results - Extracted JDBC value [2] - [NBA]
[DEBUG] 2024-11-27 15:55:39.107 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Team.sport#1
[DEBUG] 2024-11-27 15:55:39.107 [main] results - Extracted JDBC value [3] - [Hawks]
[DEBUG] 2024-11-27 15:55:39.107 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team#1
[DEBUG] 2024-11-27 15:55:39.107 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e7e7a7e
[DEBUG] 2024-11-27 15:55:39.110 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 15:55:39.114 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.sport -> EntitySelectFetchInitializer(com.radams.entity.Sport.teams.{element}.sport)@320043061 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1813769162)
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1333929103 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@570434649)
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@700253546 (PluralAttribute(com.radams.entity.Sport.teams))

[DEBUG] 2024-11-27 15:55:39.114 [main] SQL - select t1_0.sport_id,t1_0.id,t1_0.team_name from teams t1_0 where t1_0.sport_id=?
[DEBUG] 2024-11-27 15:55:39.115 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 15:55:39.115 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 15:55:39.115 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 15:55:39.115 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 15:55:39.116 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 15:55:39.117 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@949107966
[DEBUG] 2024-11-27 15:55:39.117 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@949107966
[DEBUG] 2024-11-27 15:55:39.117 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2ac9e53c
[DEBUG] 2024-11-27 15:55:39.117 [main] results - Extracted JDBC value [1] - [3]
[DEBUG] 2024-11-27 15:55:39.117 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 15:55:39.117 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 15:55:39.117 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 15:55:39.117 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 15:55:39.117 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#3] : 1254589807
[DEBUG] 2024-11-27 15:55:39.117 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 15:55:39.117 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#1] - using loading instance
[DEBUG] 2024-11-27 15:55:39.117 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@949107966
[DEBUG] 2024-11-27 15:55:39.117 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@949107966
[DEBUG] 2024-11-27 15:55:39.117 [main] results - Extracted JDBC value [2] - [Bulls]
[DEBUG] 2024-11-27 15:55:39.118 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#3
[DEBUG] 2024-11-27 15:55:39.118 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@949107966
[DEBUG] 2024-11-27 15:55:39.118 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2ac9e53c
[DEBUG] 2024-11-27 15:55:39.118 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 15:55:39.119 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 15:55:39.119 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 15:55:39.121 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-27 15:55:39.121 [main] TransactionImpl - begin
[DEBUG] 2024-11-27 15:55:39.128 [main] TransactionImpl - committing
[DEBUG] 2024-11-27 15:55:39.128 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-27 15:55:39.128 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-27 15:55:39.131 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-27 15:55:39.131 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2024-11-27 15:55:39.131 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-27 15:55:39.132 [main] EntityPrinter - com.radams.entity.Team{teamName=Hawks, id=1, sport=com.radams.entity.Sport#1}
[DEBUG] 2024-11-27 15:55:39.136 [main] SQL - delete from teams where id=?
[DEBUG] 2024-11-27 15:55:39.139 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 15:55:39.140 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 15:55:39.140 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 15:55:39.140 [main] results - Initializer list:
	  com.radams.entity.Team -> EntityResultInitializer(com.radams.entity.Team)@1015503057 (SingleTableEntityPersister(com.radams.entity.Team))
	  com.radams.entity.Team.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.Team.sport.teams)@376299447 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Team.sport -> EntityJoinedFetchInitializer(com.radams.entity.Team.sport)@1571025706 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1813769162)

[DEBUG] 2024-11-27 15:55:39.140 [main] SQL - select t1_0.id,s1_0.id,s1_0.name,t1_0.team_name from teams t1_0 left join sports s1_0 on s1_0.id=t1_0.sport_id where t1_0.id=?
[DEBUG] 2024-11-27 15:55:39.141 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:03:58.130 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-27 16:03:58.133 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-27 16:03:58.154 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-27 16:03:58.155 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-27 16:03:58.196 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-27 16:03:58.201 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-27 16:03:58.386 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-27 16:03:58.389 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-27 16:03:58.390 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-27 16:03:58.390 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:03:58.390 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:03:58.391 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-27 16:03:58.391 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-27 16:03:58.392 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-27 16:03:58.392 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:03:58.393 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-27 16:03:58.393 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-27 16:03:58.393 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:03:58.394 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-27 16:03:58.400 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-27 16:03:58.401 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-27 16:03:58.517 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:03:58.517 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:03:58.517 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:03:58.518 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:03:58.518 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:03:58.518 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:03:58.518 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:03:58.518 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:03:58.518 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:03:58.518 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:03:58.518 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:03:58.519 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:03:58.519 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:03:58.519 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:03:58.519 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:03:58.519 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:03:58.519 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:03:58.519 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-27 16:03:58.519 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:03:58.519 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:03:58.519 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:03:58.519 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:03:58.520 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:03:58.520 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:03:58.520 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:03:58.520 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:03:58.520 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:03:58.520 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:03:58.520 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:03:58.520 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:03:58.520 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:03:58.520 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:03:58.520 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:03:58.521 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:03:58.521 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:03:58.521 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:03:58.521 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:03:58.521 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:03:58.521 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:03:58.521 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:03:58.521 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:03:58.521 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:03:58.521 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:03:58.521 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:03:58.522 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:03:58.522 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:03:58.522 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:03:58.522 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-27 16:03:58.522 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:03:58.522 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:03:58.522 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:03:58.522 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:03:58.522 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:03:58.522 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-27 16:03:58.523 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:03:58.523 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:03:58.523 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:03:58.523 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:03:58.523 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-27 16:03:58.523 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-27 16:03:58.523 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-27 16:03:58.523 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:03:58.524 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:03:58.524 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:03:58.524 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:03:58.524 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:03:58.524 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:03:58.524 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:03:58.524 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:03:58.524 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:03:58.525 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:03:58.525 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:03:58.525 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:03:58.525 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:03:58.525 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-27 16:03:58.525 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-27 16:03:58.525 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:03:58.525 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:03:58.525 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:03:58.525 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-27 16:03:58.525 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-27 16:03:58.526 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:03:58.526 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:03:58.526 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:03:58.526 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:03:58.526 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:03:58.526 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:03:58.526 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:03:58.526 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:03:58.526 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:03:58.526 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:03:58.526 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:03:58.527 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:03:58.527 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:03:58.527 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:03:58.527 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:03:58.527 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-27 16:03:58.527 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:03:58.527 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:03:58.527 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:03:58.527 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:03:58.527 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:03:58.527 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:03:58.527 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:03:58.528 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:03:58.528 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:03:58.528 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:03:58.528 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:03:58.528 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:03:58.528 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:03:58.528 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:03:58.528 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:03:58.528 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:03:58.528 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:03:58.528 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:03:58.528 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:03:58.529 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:03:58.529 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 16:03:58.529 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 16:03:58.529 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2024-11-27 16:03:58.529 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2024-11-27 16:03:58.533 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 16:03:58.533 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 16:03:58.534 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1bc49bc5
[DEBUG] 2024-11-27 16:03:58.535 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-27 16:03:58.535 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-27 16:03:58.535 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-27 16:03:58.535 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-27 16:03:58.535 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@24e83d19
[DEBUG] 2024-11-27 16:03:58.535 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5c080ef3
[DEBUG] 2024-11-27 16:03:58.535 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@188cbcde
[DEBUG] 2024-11-27 16:03:58.535 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ee6291f
[INFO ] 2024-11-27 16:03:58.559 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-27 16:03:58.559 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-27 16:03:58.559 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-27 16:03:58.639 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-27 16:03:58.706 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-27 16:03:58.707 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-27 16:03:58.707 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-27 16:03:58.740 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-27 16:03:58.740 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-27 16:03:58.745 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-27 16:03:58.762 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-27 16:03:58.774 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e)
[DEBUG] 2024-11-27 16:03:58.774 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@513b52af)
[DEBUG] 2024-11-27 16:03:58.774 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a8c93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bed3315)
[DEBUG] 2024-11-27 16:03:58.774 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24)
[DEBUG] 2024-11-27 16:03:58.774 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c7350b0)
[DEBUG] 2024-11-27 16:03:58.774 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bc4ef12)
[DEBUG] 2024-11-27 16:03:58.775 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50448409) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5634a861)
[DEBUG] 2024-11-27 16:03:58.775 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b0dc227) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37ad042b)
[DEBUG] 2024-11-27 16:03:58.775 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@43bdaa1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30b975ad)
[DEBUG] 2024-11-27 16:03:58.776 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-27 16:03:58.776 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:03:58.776 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:03:58.778 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:03:58.778 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:03:58.780 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@52bf7bf6
[DEBUG] 2024-11-27 16:03:58.780 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1bc49bc5`
[DEBUG] 2024-11-27 16:03:58.784 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:03:58.784 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:03:58.784 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:03:58.786 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:03:58.786 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:03:58.786 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:03:58.787 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:03:58.787 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:03:58.787 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:03:58.787 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:03:58.787 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:03:58.787 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:03:58.788 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@411a5965]
[DEBUG] 2024-11-27 16:03:58.818 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-27 16:03:58.836 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-27 16:03:58.842 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-27 16:03:58.846 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-27 16:03:58.853 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:03:58.867 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:03:58.868 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:03:58.868 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:03:58.869 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:03:58.872 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-27 16:03:58.875 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:03:58.878 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-27 16:03:58.878 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:03:58.880 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:03:58.887 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:03:58.888 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:03:58.896 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-27 16:03:58.897 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:03:58.897 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:03:58.898 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:03:58.899 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:03:58.899 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:03:58.901 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:03:58.903 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-27 16:03:58.904 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-27 16:03:58.904 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-27 16:03:58.904 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-27 16:03:58.904 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-27 16:03:58.904 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-27 16:03:58.904 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-27 16:03:58.904 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:03:58.907 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:03:58.908 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-27 16:03:58.908 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-27 16:03:58.908 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:03:58.909 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:03:58.909 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:03:58.909 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:03:58.909 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:03:58.909 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-27 16:03:58.909 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:03:58.909 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-27 16:03:58.909 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:03:58.910 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:03:58.910 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-27 16:03:58.910 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-27 16:03:58.910 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-27 16:03:58.910 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-27 16:03:58.910 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-27 16:03:58.910 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-27 16:03:58.910 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:03:58.911 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:03:58.911 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-27 16:03:58.911 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:03:58.911 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:03:58.911 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:03:58.911 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:03:58.911 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:03:58.912 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:03:58.912 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-27 16:03:58.912 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:03:58.912 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:03:58.913 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-27 16:03:58.913 [main] EntityBinder - Bind entity com.radams.entity.Team on table teams
[DEBUG] 2024-11-27 16:03:58.913 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:03:58.916 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:03:58.916 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:03:58.916 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:03:58.916 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:03:58.916 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-27 16:03:58.916 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:03:58.917 [main] BasicValue - Skipping column re-registration: teams.id
[DEBUG] 2024-11-27 16:03:58.917 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:03:58.917 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:03:58.917 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-27 16:03:58.917 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:03:58.919 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-27 16:03:58.920 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-27 16:03:58.920 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-27 16:03:58.920 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-27 16:03:58.920 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-27 16:03:58.920 [main] BasicValue - Skipping column re-registration: teams.team_name
[DEBUG] 2024-11-27 16:03:58.920 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-27 16:03:58.920 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:03:58.921 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:03:58.921 [main] EntityBinder - Import with entity name FavoriteTeam
[DEBUG] 2024-11-27 16:03:58.921 [main] EntityBinder - Bind entity com.radams.entity.FavoriteTeam on table favorite_teams
[DEBUG] 2024-11-27 16:03:58.921 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:03:58.922 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:03:58.922 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:03:58.922 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:03:58.922 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:03:58.922 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.FavoriteTeam:id]
[DEBUG] 2024-11-27 16:03:58.922 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:03:58.922 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-27 16:03:58.922 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:03:58.922 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:03:58.922 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='team_id')
[DEBUG] 2024-11-27 16:03:58.923 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:03:58.923 [main] PropertyBinder - Building property team
[DEBUG] 2024-11-27 16:03:58.923 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-27 16:03:58.923 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:03:58.923 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-27 16:03:58.923 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:03:58.924 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:03:58.924 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-27 16:03:58.925 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:03:58.925 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-27 16:03:58.925 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:03:58.925 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-27 16:03:58.926 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:03:58.929 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-27 16:03:58.929 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-27 16:03:58.929 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2024-11-27 16:03:58.929 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-27 16:03:58.929 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:03:58.930 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-27 16:03:58.931 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-27 16:03:58.932 [main] TableBinder - Retrieving property com.radams.entity.FavoriteTeam.user
[DEBUG] 2024-11-27 16:03:58.932 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:03:58.932 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:03:58.933 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-27 16:03:58.933 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> teams
[DEBUG] 2024-11-27 16:03:58.933 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-27 16:03:58.933 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 16:03:58.933 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:03:58.934 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:03:58.934 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:03:58.941 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:03:58.942 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:03:58.942 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:03:59.188 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-27 16:03:59.221 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:03:59.222 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.TeamDaoTest,insertTeamSuccess, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4409cae6, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-27 16:03:59.226 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-27 16:03:59.232 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:03:59.266 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-27 16:03:59.266 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-27 16:03:59.267 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-27 16:03:59.267 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-27 16:03:59.268 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1cde374] under count; prior registration was null
[DEBUG] 2024-11-27 16:03:59.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7b5021d1] under every; prior registration was null
[DEBUG] 2024-11-27 16:03:59.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6befbb12] under any; prior registration was null
[DEBUG] 2024-11-27 16:03:59.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-27 16:03:59.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-27 16:03:59.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-27 16:03:59.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-27 16:03:59.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-27 16:03:59.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-27 16:03:59.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-27 16:03:59.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-27 16:03:59.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-27 16:03:59.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-27 16:03:59.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-27 16:03:59.271 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-27 16:03:59.271 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-27 16:03:59.271 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-27 16:03:59.271 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-27 16:03:59.271 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-27 16:03:59.271 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-27 16:03:59.272 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398] under sinh; prior registration was null
[DEBUG] 2024-11-27 16:03:59.272 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6] under cosh; prior registration was null
[DEBUG] 2024-11-27 16:03:59.273 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37b01ce2] under tanh; prior registration was null
[DEBUG] 2024-11-27 16:03:59.273 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a88c4f5] under pi; prior registration was null
[DEBUG] 2024-11-27 16:03:59.273 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1894fa9f] under log; prior registration was null
[DEBUG] 2024-11-27 16:03:59.273 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-27 16:03:59.273 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-27 16:03:59.273 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-27 16:03:59.273 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-27 16:03:59.273 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-27 16:03:59.274 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-27 16:03:59.274 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-27 16:03:59.274 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-27 16:03:59.274 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-27 16:03:59.274 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-27 16:03:59.274 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-27 16:03:59.274 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-27 16:03:59.275 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@63f9ddf9] under position; prior registration was null
[DEBUG] 2024-11-27 16:03:59.276 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@38087342] under overlay; prior registration was null
[DEBUG] 2024-11-27 16:03:59.277 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5d9d2119] under trim; prior registration was null
[DEBUG] 2024-11-27 16:03:59.277 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2a04ab05] under cast; prior registration was null
[DEBUG] 2024-11-27 16:03:59.277 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ebbde60] under collate; prior registration was null
[DEBUG] 2024-11-27 16:03:59.278 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@25c1f5ee] under extract; prior registration was null
[DEBUG] 2024-11-27 16:03:59.278 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-27 16:03:59.278 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-27 16:03:59.278 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3f6c2763] under ifnull; prior registration was null
[DEBUG] 2024-11-27 16:03:59.278 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-27 16:03:59.279 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-27 16:03:59.279 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2a484710] under pad; prior registration was null
[DEBUG] 2024-11-27 16:03:59.279 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2ad7bd26] under str; prior registration was null
[DEBUG] 2024-11-27 16:03:59.280 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1216eb3f] under format; prior registration was null
[DEBUG] 2024-11-27 16:03:59.281 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1510b9a2] under timestampadd; prior registration was null
[DEBUG] 2024-11-27 16:03:59.281 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3af236d0] under timestampdiff; prior registration was null
[DEBUG] 2024-11-27 16:03:59.281 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-27 16:03:59.281 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-27 16:03:59.281 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bf570c] under current_date; prior registration was null
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1796b2d4] under current_time; prior registration was null
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@935d3f9] under current_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@214b342f] under local_date; prior registration was null
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5db0003d] under local_time; prior registration was null
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f12094d] under local_datetime; prior registration was null
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@589fb74d] under offset_datetime; prior registration was null
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@200d1a3d] under instant; prior registration was null
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-27 16:03:59.282 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7f42b194] under sql; prior registration was null
[DEBUG] 2024-11-27 16:03:59.283 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-27 16:03:59.283 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-27 16:03:59.283 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-27 16:03:59.283 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-27 16:03:59.283 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1894fa9f
[DEBUG] 2024-11-27 16:03:59.283 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-27 16:03:59.283 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-27 16:03:59.283 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-27 16:03:59.283 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-27 16:03:59.283 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-27 16:03:59.283 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-27 16:03:59.283 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-27 16:03:59.283 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-27 16:03:59.284 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@402b4f81] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-27 16:03:59.284 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@13ef7fa1] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-27 16:03:59.284 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-27 16:03:59.284 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-27 16:03:59.284 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-27 16:03:59.284 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-27 16:03:59.284 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-27 16:03:59.284 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-27 16:03:59.284 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-27 16:03:59.284 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-27 16:03:59.284 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-27 16:03:59.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-27 16:03:59.285 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-27 16:03:59.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-27 16:03:59.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-27 16:03:59.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-27 16:03:59.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-27 16:03:59.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-27 16:03:59.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-27 16:03:59.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-27 16:03:59.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-27 16:03:59.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-27 16:03:59.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-27 16:03:59.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-27 16:03:59.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:03:59.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-27 16:03:59.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-27 16:03:59.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-27 16:03:59.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-27 16:03:59.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-27 16:03:59.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-27 16:03:59.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-27 16:03:59.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-27 16:03:59.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-27 16:03:59.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-27 16:03:59.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23b1aa9] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@63f9ddf9
[DEBUG] 2024-11-27 16:03:59.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-27 16:03:59.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-27 16:03:59.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-27 16:03:59.290 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7345f97d] under trunc; prior registration was null
[DEBUG] 2024-11-27 16:03:59.290 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-27 16:03:59.290 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-27 16:03:59.290 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@554566a8] under bitand; prior registration was null
[DEBUG] 2024-11-27 16:03:59.290 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66020d69] under bitor; prior registration was null
[DEBUG] 2024-11-27 16:03:59.290 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3751acd7] under bitxor; prior registration was null
[DEBUG] 2024-11-27 16:03:59.290 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b832551] under bitnot; prior registration was null
[DEBUG] 2024-11-27 16:03:59.290 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-27 16:03:59.290 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-27 16:03:59.290 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-27 16:03:59.290 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-27 16:03:59.290 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@150d6eaf] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1216eb3f
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5db0003d
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@7f12094d
[DEBUG] 2024-11-27 16:03:59.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-27 16:03:59.292 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63124022] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a88c4f5
[DEBUG] 2024-11-27 16:03:59.292 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@591f6f83] under chr; prior registration was null
[DEBUG] 2024-11-27 16:03:59.292 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-27 16:03:59.292 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b44605c] under sysdate; prior registration was null
[DEBUG] 2024-11-27 16:03:59.292 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-27 16:03:59.292 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-27 16:03:59.292 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-27 16:03:59.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-27 16:03:59.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-27 16:03:59.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 16:03:59.294 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@177ede17] under rank; prior registration was null
[DEBUG] 2024-11-27 16:03:59.294 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@17176b18] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 16:03:59.294 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4e4395c] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 16:03:59.294 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1ab53860] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 16:03:59.295 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@41f785e3] under listagg; prior registration was null
[DEBUG] 2024-11-27 16:03:59.298 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.298 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.298 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:03:59.298 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 16:03:59.299 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:03:59.300 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 16:03:59.301 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 16:03:59.302 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 16:03:59.303 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 16:03:59.306 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 16:03:59.412 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:03:59.412 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 16:03:59.487 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:03:59.490 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:03:59.493 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:03:59.493 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:03:59.644 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 16:03:59.647 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:03:59.672 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:03:59.672 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:03:59.672 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:03:59.672 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:03:59.672 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:03:59.672 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:03:59.683 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.FavoriteTeam]: private accessor [team]
[DEBUG] 2024-11-27 16:03:59.683 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:03:59.683 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:03:59.684 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:03:59.684 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:03:59.695 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 16:03:59.696 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:03:59.696 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:03:59.703 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 16:03:59.717 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:03:59.717 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:03:59.718 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:03:59.718 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:03:59.718 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:03:59.718 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:03:59.742 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 16:03:59.743 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 16:03:59.746 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:03:59.747 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.team]
[DEBUG] 2024-11-27 16:03:59.747 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.user]
[DEBUG] 2024-11-27 16:03:59.747 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.FavoriteTeam) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:03:59.747 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:03:59.747 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 16:03:59.747 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 16:03:59.747 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:03:59.747 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:03:59.747 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 16:03:59.747 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 16:03:59.747 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:03:59.747 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:03:59.747 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:03:59.808 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:03:59.809 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:03:59.817 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@578b2dec] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:03:59.818 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:03:59.826 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  \-BasicFetch [com.radams.entity.Team.teamName]

[DEBUG] 2024-11-27 16:03:59.836 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:03:59.846 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 16:03:59.846 [main] AbstractEntityPersister -  Version select: select id from teams where id=?
[DEBUG] 2024-11-27 16:03:59.846 [main] AbstractEntityPersister -  Insert (0): insert into teams (sport_id,team_name) values (?,?)
[DEBUG] 2024-11-27 16:03:59.846 [main] AbstractEntityPersister -  Update (0): update teams set sport_id=?,team_name=? where id=?
[DEBUG] 2024-11-27 16:03:59.846 [main] AbstractEntityPersister -  Delete (0): delete from teams where id=?
[DEBUG] 2024-11-27 16:03:59.847 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:03:59.847 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.FavoriteTeam)] with identifierForTableGroup [com.radams.entity.FavoriteTeam] for NavigablePath [com.radams.entity.FavoriteTeam] 
[DEBUG] 2024-11-27 16:03:59.847 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1607d391] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team] for NavigablePath [com.radams.entity.FavoriteTeam.team] 
[DEBUG] 2024-11-27 16:03:59.847 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:03:59.847 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38826984] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team.sport] for NavigablePath [com.radams.entity.FavoriteTeam.team.sport] 
[DEBUG] 2024-11-27 16:03:59.847 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:03:59.847 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a78d380] with identifierForTableGroup [com.radams.entity.FavoriteTeam.user] for NavigablePath [com.radams.entity.FavoriteTeam.user] 
[DEBUG] 2024-11-27 16:03:59.847 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:03:59.848 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.FavoriteTeam]
 |  +-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.team]
 |  \-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.user]

[DEBUG] 2024-11-27 16:03:59.848 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ft1 : com.radams.entity.FavoriteTeam) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.FavoriteTeam.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.FavoriteTeam.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.FavoriteTeam.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:03:59.848 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:03:59.848 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 16:03:59.848 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (team_id,user_id) values (?,?)
[DEBUG] 2024-11-27 16:03:59.848 [main] AbstractEntityPersister -  Update (0): update favorite_teams set team_id=?,user_id=? where id=?
[DEBUG] 2024-11-27 16:03:59.848 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 16:03:59.848 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:03:59.848 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 16:03:59.849 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:03:59.850 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@71734463] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:03:59.851 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:03:59.858 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 16:03:59.858 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : teams as t1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:03:59.858 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:03:59.858 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 16:03:59.858 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 16:03:59.858 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 16:03:59.858 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 16:03:59.858 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:03:59.858 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 16:03:59.858 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:03:59.858 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@59b98ad1] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:03:59.859 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:03:59.859 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@591e5fd4] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:03:59.859 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:03:59.859 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37b238da] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:03:59.860 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 16:03:59.860 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
                  primaryTableReference : teams as t1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:03:59.860 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 16:03:59.860 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 16:03:59.860 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 16:03:59.860 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 16:03:59.860 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 16:03:59.861 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:03:59.861 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@158e6fc2] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:03:59.861 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:03:59.862 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@acd3460] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:03:59.862 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:03:59.862 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3ea9a091] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:03:59.862 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:03:59.862 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@16f4a3c0] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 16:03:59.863 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 16:03:59.863 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:03:59.864 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:03:59.864 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:03:59.864 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@54496c2d] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:03:59.864 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:03:59.864 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4e1a3d5a] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 16:03:59.864 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 16:03:59.864 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:03:59.864 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:03:59.888 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 16:03:59.888 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 16:03:59.891 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 16:03:59.891 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 16:03:59.892 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@275902e1]
[DEBUG] 2024-11-27 16:03:59.893 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 16:03:59.893 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 16:03:59.893 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:03:59.893 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 16:03:59.896 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3516b881
[DEBUG] 2024-11-27 16:03:59.896 [main] SessionFactoryRegistry - Registering SessionFactory: 6ac9e908-ce14-4c7b-b01a-e33a2b9a053e (<unnamed>)
[DEBUG] 2024-11-27 16:03:59.896 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 16:03:59.896 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 16:03:59.938 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 16:03:59.952 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:03:59.964 [main] results - Initializer list:
	  com.radams.entity.Team -> EntityResultInitializer(com.radams.entity.Team)@93011633 (SingleTableEntityPersister(com.radams.entity.Team))
	  com.radams.entity.Team.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.Team.sport.teams)@1836984213 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Team.sport -> EntityJoinedFetchInitializer(com.radams.entity.Team.sport)@903383636 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1813769162)

[DEBUG] 2024-11-27 16:03:59.969 [main] SQL - select t1_0.id,s1_0.id,s1_0.name,t1_0.team_name from teams t1_0 left join sports s1_0 on s1_0.id=t1_0.sport_id where t1_0.id=?
[DEBUG] 2024-11-27 16:03:59.983 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 16:03:59.983 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Team.sport): 1
[DEBUG] 2024-11-27 16:03:59.984 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team): 1
[DEBUG] 2024-11-27 16:03:59.984 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : com.radams.entity.Team.sport.teams#1
[DEBUG] 2024-11-27 16:03:59.986 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Team.sport#1] : 754485505
[DEBUG] 2024-11-27 16:03:59.986 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team#1] : 1630192523
[DEBUG] 2024-11-27 16:03:59.991 [main] results - Extracted JDBC value [2] - [NBA]
[DEBUG] 2024-11-27 16:03:59.994 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Team.sport#1
[DEBUG] 2024-11-27 16:03:59.994 [main] results - Extracted JDBC value [3] - [Hawks]
[DEBUG] 2024-11-27 16:03:59.994 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team#1
[DEBUG] 2024-11-27 16:03:59.994 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e7e7a7e
[DEBUG] 2024-11-27 16:03:59.997 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:04:00.002 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.sport -> EntitySelectFetchInitializer(com.radams.entity.Sport.teams.{element}.sport)@320043061 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1813769162)
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1333929103 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@570434649)
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@700253546 (PluralAttribute(com.radams.entity.Sport.teams))

[DEBUG] 2024-11-27 16:04:00.002 [main] SQL - select t1_0.sport_id,t1_0.id,t1_0.team_name from teams t1_0 where t1_0.sport_id=?
[DEBUG] 2024-11-27 16:04:00.003 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 16:04:00.003 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 16:04:00.003 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:04:00.003 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:04:00.003 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:04:00.004 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@949107966
[DEBUG] 2024-11-27 16:04:00.004 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@949107966
[DEBUG] 2024-11-27 16:04:00.005 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2ac9e53c
[DEBUG] 2024-11-27 16:04:00.005 [main] results - Extracted JDBC value [1] - [3]
[DEBUG] 2024-11-27 16:04:00.005 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 16:04:00.005 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:04:00.005 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:04:00.005 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:04:00.005 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#3] : 1254589807
[DEBUG] 2024-11-27 16:04:00.005 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:04:00.005 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#1] - using loading instance
[DEBUG] 2024-11-27 16:04:00.005 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@949107966
[DEBUG] 2024-11-27 16:04:00.005 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@949107966
[DEBUG] 2024-11-27 16:04:00.005 [main] results - Extracted JDBC value [2] - [Bulls]
[DEBUG] 2024-11-27 16:04:00.005 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#3
[DEBUG] 2024-11-27 16:04:00.005 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@949107966
[DEBUG] 2024-11-27 16:04:00.005 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2ac9e53c
[DEBUG] 2024-11-27 16:04:00.006 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 16:04:00.007 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:04:00.008 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:06:45.846 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-27 16:06:45.849 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-27 16:06:45.866 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-27 16:06:45.867 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-27 16:06:45.904 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-27 16:06:45.908 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-27 16:06:46.058 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-27 16:06:46.060 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-27 16:06:46.061 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-27 16:06:46.061 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:06:46.061 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:06:46.062 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-27 16:06:46.062 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-27 16:06:46.063 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-27 16:06:46.063 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:06:46.064 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-27 16:06:46.064 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-27 16:06:46.064 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:06:46.065 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-27 16:06:46.078 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-27 16:06:46.079 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-27 16:06:46.151 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:06:46.152 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:06:46.152 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:06:46.152 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:06:46.152 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:06:46.152 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:06:46.152 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:06:46.152 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:06:46.152 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:06:46.152 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:06:46.152 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:06:46.152 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:06:46.152 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:06:46.153 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:06:46.153 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:06:46.153 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:06:46.153 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:06:46.153 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-27 16:06:46.153 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:06:46.153 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:06:46.153 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:06:46.153 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:06:46.153 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:06:46.153 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:06:46.153 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:06:46.154 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:06:46.154 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:06:46.154 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:06:46.154 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:06:46.154 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:06:46.154 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:06:46.154 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:06:46.154 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:06:46.154 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:06:46.154 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:06:46.154 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:06:46.155 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:06:46.155 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:06:46.155 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:06:46.155 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:06:46.155 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:06:46.155 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:06:46.155 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:06:46.155 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:06:46.155 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:06:46.155 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:06:46.155 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:06:46.155 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-27 16:06:46.155 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:06:46.156 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:06:46.156 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:06:46.156 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:06:46.156 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:06:46.156 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-27 16:06:46.156 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:06:46.156 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:06:46.156 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:06:46.156 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:06:46.156 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-27 16:06:46.156 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-27 16:06:46.156 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-27 16:06:46.157 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:06:46.157 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:06:46.157 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:06:46.157 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:06:46.157 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:06:46.157 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:06:46.157 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:06:46.157 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:06:46.157 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:06:46.157 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:06:46.157 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:06:46.158 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:06:46.158 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:06:46.158 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-27 16:06:46.158 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-27 16:06:46.158 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:06:46.158 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:06:46.158 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:06:46.158 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-27 16:06:46.158 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-27 16:06:46.158 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:06:46.158 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:06:46.158 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:06:46.158 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:06:46.159 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:06:46.159 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:06:46.159 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:06:46.159 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:06:46.159 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:06:46.159 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:06:46.159 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:06:46.159 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:06:46.159 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:06:46.159 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:06:46.160 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:06:46.160 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-27 16:06:46.160 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:06:46.160 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:06:46.160 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:06:46.160 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:06:46.160 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:06:46.160 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:06:46.160 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:06:46.160 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:06:46.160 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:06:46.160 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:06:46.161 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:06:46.161 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:06:46.161 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:06:46.161 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:06:46.161 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:06:46.161 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:06:46.161 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:06:46.161 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:06:46.161 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:06:46.161 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:06:46.161 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 16:06:46.161 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 16:06:46.162 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2024-11-27 16:06:46.162 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2024-11-27 16:06:46.165 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 16:06:46.165 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 16:06:46.166 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1bc49bc5
[DEBUG] 2024-11-27 16:06:46.167 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-27 16:06:46.167 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-27 16:06:46.167 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-27 16:06:46.167 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-27 16:06:46.167 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@24e83d19
[DEBUG] 2024-11-27 16:06:46.167 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5c080ef3
[DEBUG] 2024-11-27 16:06:46.167 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@188cbcde
[DEBUG] 2024-11-27 16:06:46.167 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ee6291f
[INFO ] 2024-11-27 16:06:46.186 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-27 16:06:46.186 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-27 16:06:46.186 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-27 16:06:46.247 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-27 16:06:46.319 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-27 16:06:46.319 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-27 16:06:46.319 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-27 16:06:46.349 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-27 16:06:46.350 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-27 16:06:46.353 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-27 16:06:46.353 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-27 16:06:46.363 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e)
[DEBUG] 2024-11-27 16:06:46.363 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@513b52af)
[DEBUG] 2024-11-27 16:06:46.363 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a8c93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bed3315)
[DEBUG] 2024-11-27 16:06:46.364 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24)
[DEBUG] 2024-11-27 16:06:46.364 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c7350b0)
[DEBUG] 2024-11-27 16:06:46.364 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bc4ef12)
[DEBUG] 2024-11-27 16:06:46.364 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50448409) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5634a861)
[DEBUG] 2024-11-27 16:06:46.364 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b0dc227) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37ad042b)
[DEBUG] 2024-11-27 16:06:46.364 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@43bdaa1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30b975ad)
[DEBUG] 2024-11-27 16:06:46.365 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-27 16:06:46.365 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:06:46.365 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:06:46.367 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:06:46.367 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:06:46.369 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@52bf7bf6
[DEBUG] 2024-11-27 16:06:46.369 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1bc49bc5`
[DEBUG] 2024-11-27 16:06:46.373 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:06:46.373 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:06:46.373 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:06:46.375 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:06:46.375 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:06:46.375 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:06:46.375 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:06:46.375 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:06:46.375 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:06:46.376 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:06:46.376 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:06:46.376 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:06:46.377 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@411a5965]
[DEBUG] 2024-11-27 16:06:46.405 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-27 16:06:46.422 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-27 16:06:46.427 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-27 16:06:46.431 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-27 16:06:46.437 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:06:46.450 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:06:46.451 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:06:46.451 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:06:46.452 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:06:46.455 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-27 16:06:46.458 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:06:46.460 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-27 16:06:46.460 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:06:46.463 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:06:46.467 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:06:46.468 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:06:46.474 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-27 16:06:46.476 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:06:46.476 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:06:46.477 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:06:46.477 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:06:46.478 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:06:46.479 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:06:46.481 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-27 16:06:46.481 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-27 16:06:46.481 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-27 16:06:46.481 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-27 16:06:46.481 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-27 16:06:46.481 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-27 16:06:46.482 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-27 16:06:46.482 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:06:46.485 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:06:46.486 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-27 16:06:46.486 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-27 16:06:46.486 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:06:46.487 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:06:46.487 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:06:46.487 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:06:46.487 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:06:46.487 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-27 16:06:46.487 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:06:46.487 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-27 16:06:46.487 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:06:46.487 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:06:46.488 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-27 16:06:46.488 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-27 16:06:46.488 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-27 16:06:46.488 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-27 16:06:46.488 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-27 16:06:46.488 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-27 16:06:46.488 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:06:46.488 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:06:46.489 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-27 16:06:46.489 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:06:46.489 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:06:46.489 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:06:46.489 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:06:46.489 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:06:46.489 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:06:46.490 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-27 16:06:46.490 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:06:46.491 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:06:46.491 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-27 16:06:46.491 [main] EntityBinder - Bind entity com.radams.entity.Team on table teams
[DEBUG] 2024-11-27 16:06:46.491 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:06:46.494 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:06:46.494 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:06:46.495 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:06:46.495 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:06:46.495 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-27 16:06:46.495 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:06:46.495 [main] BasicValue - Skipping column re-registration: teams.id
[DEBUG] 2024-11-27 16:06:46.495 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:06:46.495 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:06:46.495 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-27 16:06:46.495 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:06:46.497 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-27 16:06:46.497 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-27 16:06:46.498 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-27 16:06:46.498 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-27 16:06:46.498 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-27 16:06:46.498 [main] BasicValue - Skipping column re-registration: teams.team_name
[DEBUG] 2024-11-27 16:06:46.498 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-27 16:06:46.498 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:06:46.498 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:06:46.499 [main] EntityBinder - Import with entity name FavoriteTeam
[DEBUG] 2024-11-27 16:06:46.499 [main] EntityBinder - Bind entity com.radams.entity.FavoriteTeam on table favorite_teams
[DEBUG] 2024-11-27 16:06:46.499 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:06:46.500 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:06:46.500 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:06:46.500 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:06:46.500 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:06:46.500 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.FavoriteTeam:id]
[DEBUG] 2024-11-27 16:06:46.500 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:06:46.500 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-27 16:06:46.500 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:06:46.500 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:06:46.500 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='team_id')
[DEBUG] 2024-11-27 16:06:46.500 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:06:46.500 [main] PropertyBinder - Building property team
[DEBUG] 2024-11-27 16:06:46.501 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-27 16:06:46.501 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:06:46.501 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-27 16:06:46.501 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:06:46.502 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:06:46.502 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-27 16:06:46.503 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:06:46.503 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-27 16:06:46.503 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:06:46.503 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-27 16:06:46.503 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:06:46.506 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-27 16:06:46.506 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-27 16:06:46.506 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2024-11-27 16:06:46.507 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-27 16:06:46.507 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:06:46.508 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-27 16:06:46.509 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-27 16:06:46.509 [main] TableBinder - Retrieving property com.radams.entity.FavoriteTeam.user
[DEBUG] 2024-11-27 16:06:46.510 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:06:46.510 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:06:46.510 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-27 16:06:46.510 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> teams
[DEBUG] 2024-11-27 16:06:46.510 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-27 16:06:46.510 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 16:06:46.511 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:06:46.512 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:06:46.513 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:06:46.519 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:06:46.520 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:06:46.520 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:06:46.732 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-27 16:06:46.759 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:06:46.760 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.TeamDaoTest,insertTeamSuccess, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4409cae6, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-27 16:06:46.762 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-27 16:06:46.768 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:06:46.797 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-27 16:06:46.797 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-27 16:06:46.797 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-27 16:06:46.798 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-27 16:06:46.799 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5a47730c] under count; prior registration was null
[DEBUG] 2024-11-27 16:06:46.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@514377fc] under every; prior registration was null
[DEBUG] 2024-11-27 16:06:46.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2e4eda17] under any; prior registration was null
[DEBUG] 2024-11-27 16:06:46.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-27 16:06:46.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-27 16:06:46.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-27 16:06:46.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-27 16:06:46.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-27 16:06:46.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-27 16:06:46.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-27 16:06:46.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-27 16:06:46.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-27 16:06:46.801 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-27 16:06:46.801 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-27 16:06:46.801 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-27 16:06:46.801 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-27 16:06:46.801 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-27 16:06:46.801 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-27 16:06:46.801 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-27 16:06:46.801 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-27 16:06:46.802 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55c1ced9] under sinh; prior registration was null
[DEBUG] 2024-11-27 16:06:46.802 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49cc9b2a] under cosh; prior registration was null
[DEBUG] 2024-11-27 16:06:46.802 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398] under tanh; prior registration was null
[DEBUG] 2024-11-27 16:06:46.802 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6] under pi; prior registration was null
[DEBUG] 2024-11-27 16:06:46.803 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37b01ce2] under log; prior registration was null
[DEBUG] 2024-11-27 16:06:46.803 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-27 16:06:46.803 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-27 16:06:46.803 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-27 16:06:46.803 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-27 16:06:46.803 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-27 16:06:46.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-27 16:06:46.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-27 16:06:46.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-27 16:06:46.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-27 16:06:46.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-27 16:06:46.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-27 16:06:46.804 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-27 16:06:46.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@35e74e08] under position; prior registration was null
[DEBUG] 2024-11-27 16:06:46.806 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5c234920] under overlay; prior registration was null
[DEBUG] 2024-11-27 16:06:46.806 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2eb1c615] under trim; prior registration was null
[DEBUG] 2024-11-27 16:06:46.807 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@370c7cc5] under cast; prior registration was null
[DEBUG] 2024-11-27 16:06:46.807 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61b838f2] under collate; prior registration was null
[DEBUG] 2024-11-27 16:06:46.807 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2a5abd3c] under extract; prior registration was null
[DEBUG] 2024-11-27 16:06:46.807 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-27 16:06:46.808 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-27 16:06:46.808 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7bf018dd] under ifnull; prior registration was null
[DEBUG] 2024-11-27 16:06:46.808 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-27 16:06:46.808 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-27 16:06:46.808 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@274fdea6] under pad; prior registration was null
[DEBUG] 2024-11-27 16:06:46.808 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3ffd4b12] under str; prior registration was null
[DEBUG] 2024-11-27 16:06:46.809 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@44faa4f2] under format; prior registration was null
[DEBUG] 2024-11-27 16:06:46.810 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@482ba4b1] under timestampadd; prior registration was null
[DEBUG] 2024-11-27 16:06:46.810 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5514579e] under timestampdiff; prior registration was null
[DEBUG] 2024-11-27 16:06:46.810 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-27 16:06:46.810 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54895681] under current_date; prior registration was null
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2dd0a0d0] under current_time; prior registration was null
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bf570c] under current_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1796b2d4] under local_date; prior registration was null
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@935d3f9] under local_time; prior registration was null
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@214b342f] under local_datetime; prior registration was null
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5db0003d] under offset_datetime; prior registration was null
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f12094d] under instant; prior registration was null
[DEBUG] 2024-11-27 16:06:46.811 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-27 16:06:46.812 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@12567179] under sql; prior registration was null
[DEBUG] 2024-11-27 16:06:46.812 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-27 16:06:46.812 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-27 16:06:46.812 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-27 16:06:46.812 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-27 16:06:46.812 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37b01ce2
[DEBUG] 2024-11-27 16:06:46.812 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-27 16:06:46.812 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-27 16:06:46.812 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-27 16:06:46.812 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-27 16:06:46.812 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-27 16:06:46.812 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-27 16:06:46.812 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-27 16:06:46.812 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@29170a47] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2a8f8555] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-27 16:06:46.813 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@402b4f81] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@35e74e08
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-27 16:06:46.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-27 16:06:46.817 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@6cdbe5ec] under trunc; prior registration was null
[DEBUG] 2024-11-27 16:06:46.817 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-27 16:06:46.817 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-27 16:06:46.817 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14b8a751] under bitand; prior registration was null
[DEBUG] 2024-11-27 16:06:46.817 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7345f97d] under bitor; prior registration was null
[DEBUG] 2024-11-27 16:06:46.817 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@554566a8] under bitxor; prior registration was null
[DEBUG] 2024-11-27 16:06:46.817 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66020d69] under bitnot; prior registration was null
[DEBUG] 2024-11-27 16:06:46.817 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-27 16:06:46.817 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-27 16:06:46.817 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3751acd7] under format; prior registration was org.hibernate.dialect.function.FormatFunction@44faa4f2
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@935d3f9
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@214b342f
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b832551] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@150d6eaf] under chr; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63124022] under sysdate; prior registration was null
[DEBUG] 2024-11-27 16:06:46.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-27 16:06:46.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-27 16:06:46.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-27 16:06:46.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-27 16:06:46.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-27 16:06:46.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 16:06:46.820 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@13e00016] under rank; prior registration was null
[DEBUG] 2024-11-27 16:06:46.820 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7b3cbe6e] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 16:06:46.820 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@177ede17] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 16:06:46.820 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@17176b18] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 16:06:46.820 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@57b9389f] under listagg; prior registration was null
[DEBUG] 2024-11-27 16:06:46.824 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.824 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.824 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:06:46.824 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:06:46.824 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 16:06:46.824 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 16:06:46.824 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.824 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.824 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:06:46.824 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 16:06:46.824 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 16:06:46.824 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:06:46.824 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 16:06:46.824 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 16:06:46.825 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 16:06:46.826 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 16:06:46.827 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:06:46.828 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 16:06:46.828 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 16:06:46.828 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 16:06:46.828 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 16:06:46.828 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 16:06:46.828 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 16:06:46.828 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 16:06:46.828 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 16:06:46.828 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.828 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.828 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 16:06:46.828 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 16:06:46.828 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 16:06:46.831 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 16:06:46.925 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:06:46.926 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 16:06:47.002 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:06:47.005 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:06:47.007 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:06:47.007 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:06:47.154 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 16:06:47.157 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:06:47.186 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:06:47.186 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:06:47.186 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:06:47.186 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:06:47.186 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:06:47.186 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:06:47.199 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.FavoriteTeam]: private accessor [team]
[DEBUG] 2024-11-27 16:06:47.199 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:06:47.200 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:06:47.201 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:06:47.201 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:06:47.213 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 16:06:47.214 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:06:47.214 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:06:47.223 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 16:06:47.235 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:06:47.235 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:06:47.235 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:06:47.236 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:06:47.236 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:06:47.236 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:06:47.257 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 16:06:47.257 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 16:06:47.260 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:06:47.260 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.team]
[DEBUG] 2024-11-27 16:06:47.260 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.user]
[DEBUG] 2024-11-27 16:06:47.261 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.FavoriteTeam) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:06:47.261 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:06:47.261 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 16:06:47.261 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 16:06:47.261 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:06:47.261 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:06:47.261 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 16:06:47.261 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 16:06:47.261 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:06:47.261 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:06:47.261 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:06:47.317 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:06:47.318 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:06:47.325 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6cd66f6a] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:06:47.326 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:06:47.335 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  \-BasicFetch [com.radams.entity.Team.teamName]

[DEBUG] 2024-11-27 16:06:47.344 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:06:47.353 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 16:06:47.353 [main] AbstractEntityPersister -  Version select: select id from teams where id=?
[DEBUG] 2024-11-27 16:06:47.353 [main] AbstractEntityPersister -  Insert (0): insert into teams (sport_id,team_name) values (?,?)
[DEBUG] 2024-11-27 16:06:47.353 [main] AbstractEntityPersister -  Update (0): update teams set sport_id=?,team_name=? where id=?
[DEBUG] 2024-11-27 16:06:47.353 [main] AbstractEntityPersister -  Delete (0): delete from teams where id=?
[DEBUG] 2024-11-27 16:06:47.353 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:06:47.353 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.FavoriteTeam)] with identifierForTableGroup [com.radams.entity.FavoriteTeam] for NavigablePath [com.radams.entity.FavoriteTeam] 
[DEBUG] 2024-11-27 16:06:47.353 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3a5ce4b8] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team] for NavigablePath [com.radams.entity.FavoriteTeam.team] 
[DEBUG] 2024-11-27 16:06:47.353 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:06:47.353 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38848217] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team.sport] for NavigablePath [com.radams.entity.FavoriteTeam.team.sport] 
[DEBUG] 2024-11-27 16:06:47.354 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:06:47.354 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@792e8181] with identifierForTableGroup [com.radams.entity.FavoriteTeam.user] for NavigablePath [com.radams.entity.FavoriteTeam.user] 
[DEBUG] 2024-11-27 16:06:47.354 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:06:47.354 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.FavoriteTeam]
 |  +-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.team]
 |  \-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.user]

[DEBUG] 2024-11-27 16:06:47.354 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ft1 : com.radams.entity.FavoriteTeam) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.FavoriteTeam.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.FavoriteTeam.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.FavoriteTeam.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:06:47.354 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:06:47.354 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 16:06:47.354 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (team_id,user_id) values (?,?)
[DEBUG] 2024-11-27 16:06:47.354 [main] AbstractEntityPersister -  Update (0): update favorite_teams set team_id=?,user_id=? where id=?
[DEBUG] 2024-11-27 16:06:47.355 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 16:06:47.355 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:06:47.355 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 16:06:47.356 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:06:47.357 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2382b2f] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:06:47.358 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:06:47.366 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 16:06:47.366 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : teams as t1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:06:47.366 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:06:47.366 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 16:06:47.366 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 16:06:47.366 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 16:06:47.366 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 16:06:47.366 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:06:47.366 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 16:06:47.366 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:06:47.366 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@749ad37c] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:06:47.366 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:06:47.366 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b485c8b] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:06:47.366 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:06:47.367 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7bbd76b8] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:06:47.367 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 16:06:47.368 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
                  primaryTableReference : teams as t1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:06:47.368 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 16:06:47.368 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 16:06:47.368 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 16:06:47.368 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 16:06:47.368 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 16:06:47.369 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:06:47.369 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@4a7db5a] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:06:47.369 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:06:47.369 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a3a49e5] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:06:47.369 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:06:47.370 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c1b82cd] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:06:47.370 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:06:47.370 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@acd3460] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 16:06:47.371 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 16:06:47.371 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:06:47.371 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:06:47.371 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:06:47.371 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@21c99abf] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:06:47.371 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:06:47.371 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d6f6ca9] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 16:06:47.372 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 16:06:47.372 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:06:47.372 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:06:47.396 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 16:06:47.397 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 16:06:47.400 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 16:06:47.400 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 16:06:47.401 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@22429a11]
[DEBUG] 2024-11-27 16:06:47.402 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 16:06:47.402 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 16:06:47.403 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:06:47.403 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 16:06:47.405 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5627b8eb
[DEBUG] 2024-11-27 16:06:47.405 [main] SessionFactoryRegistry - Registering SessionFactory: 60405d51-eeb9-4fe6-a392-72834153dbba (<unnamed>)
[DEBUG] 2024-11-27 16:06:47.405 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 16:06:47.405 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 16:06:47.451 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 16:06:47.465 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:06:47.478 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1813769162 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1028135144 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@423207828 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@237789822)

[DEBUG] 2024-11-27 16:06:47.483 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-11-27 16:06:47.497 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-27 16:06:47.498 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 16:06:47.498 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:06:47.498 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:06:47.498 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:06:47.498 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:06:47.500 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 2032613967
[DEBUG] 2024-11-27 16:06:47.500 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 959718932
[DEBUG] 2024-11-27 16:06:47.504 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1753110043
[DEBUG] 2024-11-27 16:06:47.505 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1753110043
[DEBUG] 2024-11-27 16:06:47.506 [main] results - Extracted JDBC value [4] - [Hawks]
[DEBUG] 2024-11-27 16:06:47.509 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-27 16:06:47.509 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1753110043
[DEBUG] 2024-11-27 16:06:47.509 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 16:06:47.509 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 16:06:47.509 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1191029d
[DEBUG] 2024-11-27 16:06:47.510 [main] results - Extracted JDBC value [3] - [3]
[DEBUG] 2024-11-27 16:06:47.510 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 16:06:47.510 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:06:47.510 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:06:47.510 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:06:47.510 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:06:47.510 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#3] : 546685745
[DEBUG] 2024-11-27 16:06:47.510 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@1753110043
[DEBUG] 2024-11-27 16:06:47.510 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1753110043
[DEBUG] 2024-11-27 16:06:47.510 [main] results - Extracted JDBC value [4] - [Bulls]
[DEBUG] 2024-11-27 16:06:47.510 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#3
[DEBUG] 2024-11-27 16:06:47.510 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1753110043
[DEBUG] 2024-11-27 16:06:47.510 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1191029d
[DEBUG] 2024-11-27 16:06:47.512 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 16:06:47.513 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:06:47.515 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-27 16:06:47.515 [main] TransactionImpl - begin
[DEBUG] 2024-11-27 16:06:47.519 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-27 16:06:47.523 [main] SQL - insert into teams (sport_id,team_name) values (?,?)
[DEBUG] 2024-11-27 16:06:47.528 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 5
[DEBUG] 2024-11-27 16:06:47.528 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-27 16:06:47.530 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-27 16:06:47.531 [main] TransactionImpl - committing
[DEBUG] 2024-11-27 16:06:47.532 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-27 16:06:47.532 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-27 16:06:47.535 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-27 16:06:47.535 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2024-11-27 16:06:47.535 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-27 16:06:47.536 [main] EntityPrinter - com.radams.entity.Team{teamName=New team, id=5, sport=com.radams.entity.Sport#1}
[DEBUG] 2024-11-27 16:06:47.537 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:06:47.537 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:06:47.539 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:06:47.540 [main] results - Initializer list:
	  com.radams.entity.Team -> EntityResultInitializer(com.radams.entity.Team)@1279399383 (SingleTableEntityPersister(com.radams.entity.Team))
	  com.radams.entity.Team.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.Team.sport.teams)@190240935 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Team.sport -> EntityJoinedFetchInitializer(com.radams.entity.Team.sport)@334720373 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1843768662)

[DEBUG] 2024-11-27 16:06:47.540 [main] SQL - select t1_0.id,s1_0.id,s1_0.name,t1_0.team_name from teams t1_0 left join sports s1_0 on s1_0.id=t1_0.sport_id where t1_0.id=?
[DEBUG] 2024-11-27 16:06:47.541 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 16:06:47.541 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Team.sport): 1
[DEBUG] 2024-11-27 16:06:47.541 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team): 5
[DEBUG] 2024-11-27 16:06:47.541 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : com.radams.entity.Team.sport.teams#1
[DEBUG] 2024-11-27 16:06:47.541 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Team.sport#1] : 1937765828
[DEBUG] 2024-11-27 16:06:47.542 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team#5] : 132753462
[DEBUG] 2024-11-27 16:06:47.542 [main] results - Extracted JDBC value [2] - [NBA]
[DEBUG] 2024-11-27 16:06:47.542 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Team.sport#1
[DEBUG] 2024-11-27 16:06:47.542 [main] results - Extracted JDBC value [3] - [New team]
[DEBUG] 2024-11-27 16:06:47.542 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team#5
[DEBUG] 2024-11-27 16:06:47.542 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@79777da7
[DEBUG] 2024-11-27 16:06:47.544 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:06:47.547 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.sport -> EntitySelectFetchInitializer(com.radams.entity.Sport.teams.{element}.sport)@2123685471 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1843768662)
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1234980193 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@237789822)
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1958403865 (PluralAttribute(com.radams.entity.Sport.teams))

[DEBUG] 2024-11-27 16:06:47.547 [main] SQL - select t1_0.sport_id,t1_0.id,t1_0.team_name from teams t1_0 where t1_0.sport_id=?
[DEBUG] 2024-11-27 16:06:47.547 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 16:06:47.547 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 16:06:47.547 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:06:47.548 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:06:47.548 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:06:47.548 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 37590923
[DEBUG] 2024-11-27 16:06:47.548 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:06:47.548 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#1] - using loading instance
[DEBUG] 2024-11-27 16:06:47.548 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1974105859
[DEBUG] 2024-11-27 16:06:47.548 [main] results - Extracted JDBC value [2] - [Hawks]
[DEBUG] 2024-11-27 16:06:47.548 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-27 16:06:47.548 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1974105859
[DEBUG] 2024-11-27 16:06:47.548 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3cf70afa
[DEBUG] 2024-11-27 16:06:47.548 [main] results - Extracted JDBC value [1] - [3]
[DEBUG] 2024-11-27 16:06:47.548 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 16:06:47.548 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:06:47.548 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:06:47.548 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:06:47.548 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#3] : 1725760738
[DEBUG] 2024-11-27 16:06:47.548 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:06:47.548 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#1] - using loading instance
[DEBUG] 2024-11-27 16:06:47.548 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@1974105859
[DEBUG] 2024-11-27 16:06:47.548 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1974105859
[DEBUG] 2024-11-27 16:06:47.548 [main] results - Extracted JDBC value [2] - [Bulls]
[DEBUG] 2024-11-27 16:06:47.549 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#3
[DEBUG] 2024-11-27 16:06:47.549 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1974105859
[DEBUG] 2024-11-27 16:06:47.549 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3cf70afa
[DEBUG] 2024-11-27 16:06:47.549 [main] results - Extracted JDBC value [1] - [5]
[DEBUG] 2024-11-27 16:06:47.549 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 5
[DEBUG] 2024-11-27 16:06:47.549 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:06:47.549 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:06:47.549 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:06:47.549 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@1974105859
[DEBUG] 2024-11-27 16:06:47.549 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1974105859
[DEBUG] 2024-11-27 16:06:47.549 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1974105859
[DEBUG] 2024-11-27 16:06:47.549 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@3cf70afa
[DEBUG] 2024-11-27 16:06:47.549 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 16:06:47.549 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:06:47.550 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:34:52.241 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-27 16:34:52.248 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-27 16:34:52.274 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-27 16:34:52.275 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-27 16:34:52.327 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-27 16:34:52.332 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-27 16:34:52.515 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-27 16:34:52.519 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-27 16:34:52.519 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-27 16:34:52.520 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:34:52.520 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:34:52.520 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-27 16:34:52.521 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-27 16:34:52.521 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-27 16:34:52.522 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:34:52.523 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-27 16:34:52.523 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-27 16:34:52.523 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:34:52.524 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-27 16:34:52.532 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-27 16:34:52.532 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-27 16:34:52.630 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:34:52.631 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:34:52.631 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:34:52.631 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:34:52.631 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:34:52.631 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:34:52.631 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:34:52.634 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:34:52.634 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:34:52.634 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:34:52.635 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:34:52.635 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:34:52.635 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:34:52.635 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:34:52.635 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:34:52.635 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:34:52.635 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:34:52.635 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-27 16:34:52.635 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:34:52.635 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:34:52.635 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:34:52.635 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:34:52.636 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:34:52.636 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:34:52.636 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:34:52.636 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:34:52.636 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:34:52.636 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:34:52.637 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:34:52.637 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:34:52.637 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:34:52.637 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:34:52.637 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:34:52.637 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:34:52.638 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:34:52.638 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:34:52.638 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:34:52.638 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:34:52.638 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:34:52.638 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:34:52.638 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:34:52.639 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:34:52.639 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:34:52.639 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:34:52.639 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:34:52.639 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:34:52.639 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:34:52.639 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-27 16:34:52.639 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:34:52.639 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:34:52.639 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:34:52.640 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:34:52.640 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:34:52.640 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-27 16:34:52.640 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:34:52.640 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:34:52.640 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:34:52.640 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:34:52.640 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-27 16:34:52.640 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-27 16:34:52.640 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-27 16:34:52.640 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:34:52.640 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:34:52.640 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:34:52.640 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:34:52.641 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:34:52.641 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:34:52.641 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:34:52.641 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:34:52.641 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:34:52.641 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:34:52.641 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:34:52.641 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:34:52.641 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:34:52.641 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-27 16:34:52.641 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-27 16:34:52.641 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:34:52.641 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:34:52.641 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:34:52.642 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-27 16:34:52.642 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-27 16:34:52.642 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:34:52.642 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:34:52.642 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:34:52.642 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:34:52.642 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:34:52.642 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:34:52.642 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:34:52.642 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:34:52.642 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:34:52.642 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:34:52.642 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:34:52.642 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:34:52.643 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:34:52.643 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:34:52.643 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:34:52.643 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-27 16:34:52.643 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:34:52.643 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:34:52.643 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:34:52.643 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:34:52.643 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:34:52.643 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:34:52.643 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:34:52.643 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:34:52.643 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:34:52.643 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:34:52.644 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:34:52.644 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:34:52.644 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:34:52.644 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:34:52.644 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:34:52.644 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:34:52.644 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:34:52.644 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:34:52.644 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:34:52.644 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:34:52.644 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 16:34:52.644 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 16:34:52.644 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2024-11-27 16:34:52.644 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2024-11-27 16:34:52.648 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 16:34:52.649 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 16:34:52.649 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1bc49bc5
[DEBUG] 2024-11-27 16:34:52.650 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-27 16:34:52.650 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-27 16:34:52.650 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-27 16:34:52.650 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-27 16:34:52.650 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@24e83d19
[DEBUG] 2024-11-27 16:34:52.650 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5c080ef3
[DEBUG] 2024-11-27 16:34:52.650 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@188cbcde
[DEBUG] 2024-11-27 16:34:52.650 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ee6291f
[INFO ] 2024-11-27 16:34:52.677 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-27 16:34:52.677 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-27 16:34:52.677 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-27 16:34:52.753 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-27 16:34:52.836 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-27 16:34:52.836 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-27 16:34:52.836 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-27 16:34:52.876 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-27 16:34:52.876 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-27 16:34:52.882 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-27 16:34:52.882 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-27 16:34:52.895 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e)
[DEBUG] 2024-11-27 16:34:52.895 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@513b52af)
[DEBUG] 2024-11-27 16:34:52.896 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a8c93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bed3315)
[DEBUG] 2024-11-27 16:34:52.896 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24)
[DEBUG] 2024-11-27 16:34:52.896 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c7350b0)
[DEBUG] 2024-11-27 16:34:52.896 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bc4ef12)
[DEBUG] 2024-11-27 16:34:52.896 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50448409) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5634a861)
[DEBUG] 2024-11-27 16:34:52.896 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b0dc227) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37ad042b)
[DEBUG] 2024-11-27 16:34:52.896 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@43bdaa1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30b975ad)
[DEBUG] 2024-11-27 16:34:52.897 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-27 16:34:52.897 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:34:52.898 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:34:52.900 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:34:52.900 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:34:52.902 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@52bf7bf6
[DEBUG] 2024-11-27 16:34:52.902 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1bc49bc5`
[DEBUG] 2024-11-27 16:34:52.907 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:34:52.907 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:34:52.907 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:34:52.910 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:34:52.910 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:34:52.910 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:34:52.910 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:34:52.910 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:34:52.910 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:34:52.911 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:34:52.911 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:34:52.911 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:34:52.912 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@411a5965]
[DEBUG] 2024-11-27 16:34:52.953 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-27 16:34:52.979 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-27 16:34:52.987 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-27 16:34:52.992 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-27 16:34:52.999 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:34:53.014 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:34:53.015 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:34:53.015 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:34:53.016 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:34:53.020 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-27 16:34:53.023 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:34:53.025 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-27 16:34:53.026 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:34:53.029 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:34:53.034 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:34:53.034 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:34:53.042 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-27 16:34:53.043 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:34:53.043 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:34:53.044 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:34:53.045 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:34:53.045 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:34:53.047 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:34:53.048 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-27 16:34:53.049 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-27 16:34:53.049 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-27 16:34:53.049 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-27 16:34:53.049 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-27 16:34:53.049 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-27 16:34:53.049 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-27 16:34:53.050 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:34:53.053 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:34:53.054 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-27 16:34:53.054 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-27 16:34:53.054 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:34:53.055 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:34:53.055 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:34:53.055 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:34:53.055 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:34:53.055 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-27 16:34:53.055 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:34:53.055 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-27 16:34:53.055 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:34:53.055 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:34:53.055 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-27 16:34:53.055 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-27 16:34:53.056 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-27 16:34:53.056 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-27 16:34:53.056 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-27 16:34:53.056 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-27 16:34:53.056 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:34:53.056 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:34:53.056 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-27 16:34:53.057 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:34:53.057 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:34:53.057 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:34:53.057 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:34:53.057 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:34:53.057 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:34:53.057 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-27 16:34:53.057 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:34:53.058 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:34:53.058 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-27 16:34:53.058 [main] EntityBinder - Bind entity com.radams.entity.Team on table teams
[DEBUG] 2024-11-27 16:34:53.058 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:34:53.061 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:34:53.061 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:34:53.061 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:34:53.061 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:34:53.061 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-27 16:34:53.061 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:34:53.061 [main] BasicValue - Skipping column re-registration: teams.id
[DEBUG] 2024-11-27 16:34:53.062 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:34:53.062 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:34:53.062 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-27 16:34:53.062 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:34:53.064 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-27 16:34:53.065 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-27 16:34:53.065 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-27 16:34:53.065 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-27 16:34:53.065 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-27 16:34:53.065 [main] BasicValue - Skipping column re-registration: teams.team_name
[DEBUG] 2024-11-27 16:34:53.065 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-27 16:34:53.065 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:34:53.065 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:34:53.066 [main] EntityBinder - Import with entity name FavoriteTeam
[DEBUG] 2024-11-27 16:34:53.066 [main] EntityBinder - Bind entity com.radams.entity.FavoriteTeam on table favorite_teams
[DEBUG] 2024-11-27 16:34:53.066 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:34:53.066 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:34:53.067 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:34:53.067 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:34:53.067 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:34:53.067 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.FavoriteTeam:id]
[DEBUG] 2024-11-27 16:34:53.067 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:34:53.067 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-27 16:34:53.067 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:34:53.067 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:34:53.067 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='team_id')
[DEBUG] 2024-11-27 16:34:53.068 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:34:53.068 [main] PropertyBinder - Building property team
[DEBUG] 2024-11-27 16:34:53.068 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-27 16:34:53.068 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:34:53.068 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-27 16:34:53.068 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:34:53.069 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:34:53.069 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-27 16:34:53.070 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:34:53.070 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-27 16:34:53.070 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:34:53.071 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-27 16:34:53.071 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:34:53.074 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-27 16:34:53.074 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-27 16:34:53.074 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2024-11-27 16:34:53.074 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-27 16:34:53.075 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:34:53.076 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-27 16:34:53.077 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-27 16:34:53.078 [main] TableBinder - Retrieving property com.radams.entity.FavoriteTeam.user
[DEBUG] 2024-11-27 16:34:53.079 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:34:53.079 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:34:53.079 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-27 16:34:53.079 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> teams
[DEBUG] 2024-11-27 16:34:53.079 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-27 16:34:53.079 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 16:34:53.079 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:34:53.080 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:34:53.081 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:34:53.088 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:34:53.088 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:34:53.088 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:34:53.389 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-27 16:34:53.428 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:34:53.428 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.TeamDaoTest,getAllTeamsFromSportSuccess, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4409cae6, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-27 16:34:53.432 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-27 16:34:53.438 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:34:53.484 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-27 16:34:53.484 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-27 16:34:53.485 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-27 16:34:53.486 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-27 16:34:53.487 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5a47730c] under count; prior registration was null
[DEBUG] 2024-11-27 16:34:53.487 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@514377fc] under every; prior registration was null
[DEBUG] 2024-11-27 16:34:53.487 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2e4eda17] under any; prior registration was null
[DEBUG] 2024-11-27 16:34:53.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-27 16:34:53.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-27 16:34:53.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-27 16:34:53.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-27 16:34:53.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-27 16:34:53.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-27 16:34:53.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-27 16:34:53.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-27 16:34:53.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-27 16:34:53.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-27 16:34:53.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-27 16:34:53.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-27 16:34:53.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-27 16:34:53.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-27 16:34:53.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-27 16:34:53.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-27 16:34:53.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-27 16:34:53.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55c1ced9] under sinh; prior registration was null
[DEBUG] 2024-11-27 16:34:53.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49cc9b2a] under cosh; prior registration was null
[DEBUG] 2024-11-27 16:34:53.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398] under tanh; prior registration was null
[DEBUG] 2024-11-27 16:34:53.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6] under pi; prior registration was null
[DEBUG] 2024-11-27 16:34:53.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37b01ce2] under log; prior registration was null
[DEBUG] 2024-11-27 16:34:53.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-27 16:34:53.492 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-27 16:34:53.492 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-27 16:34:53.492 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-27 16:34:53.492 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-27 16:34:53.492 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-27 16:34:53.492 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-27 16:34:53.492 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-27 16:34:53.492 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-27 16:34:53.493 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-27 16:34:53.493 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-27 16:34:53.493 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-27 16:34:53.494 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@35e74e08] under position; prior registration was null
[DEBUG] 2024-11-27 16:34:53.496 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5c234920] under overlay; prior registration was null
[DEBUG] 2024-11-27 16:34:53.496 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2eb1c615] under trim; prior registration was null
[DEBUG] 2024-11-27 16:34:53.497 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@370c7cc5] under cast; prior registration was null
[DEBUG] 2024-11-27 16:34:53.497 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61b838f2] under collate; prior registration was null
[DEBUG] 2024-11-27 16:34:53.498 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2a5abd3c] under extract; prior registration was null
[DEBUG] 2024-11-27 16:34:53.498 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-27 16:34:53.498 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-27 16:34:53.498 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7bf018dd] under ifnull; prior registration was null
[DEBUG] 2024-11-27 16:34:53.498 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-27 16:34:53.499 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-27 16:34:53.499 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@274fdea6] under pad; prior registration was null
[DEBUG] 2024-11-27 16:34:53.499 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3ffd4b12] under str; prior registration was null
[DEBUG] 2024-11-27 16:34:53.501 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@44faa4f2] under format; prior registration was null
[DEBUG] 2024-11-27 16:34:53.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@482ba4b1] under timestampadd; prior registration was null
[DEBUG] 2024-11-27 16:34:53.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5514579e] under timestampdiff; prior registration was null
[DEBUG] 2024-11-27 16:34:53.502 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-27 16:34:53.502 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-27 16:34:53.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54895681] under current_date; prior registration was null
[DEBUG] 2024-11-27 16:34:53.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2dd0a0d0] under current_time; prior registration was null
[DEBUG] 2024-11-27 16:34:53.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bf570c] under current_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:34:53.503 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-27 16:34:53.503 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-27 16:34:53.503 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-27 16:34:53.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1796b2d4] under local_date; prior registration was null
[DEBUG] 2024-11-27 16:34:53.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@935d3f9] under local_time; prior registration was null
[DEBUG] 2024-11-27 16:34:53.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@214b342f] under local_datetime; prior registration was null
[DEBUG] 2024-11-27 16:34:53.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5db0003d] under offset_datetime; prior registration was null
[DEBUG] 2024-11-27 16:34:53.503 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-27 16:34:53.503 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-27 16:34:53.503 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-27 16:34:53.503 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-27 16:34:53.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f12094d] under instant; prior registration was null
[DEBUG] 2024-11-27 16:34:53.503 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-27 16:34:53.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@12567179] under sql; prior registration was null
[DEBUG] 2024-11-27 16:34:53.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-27 16:34:53.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-27 16:34:53.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-27 16:34:53.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-27 16:34:53.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37b01ce2
[DEBUG] 2024-11-27 16:34:53.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-27 16:34:53.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-27 16:34:53.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-27 16:34:53.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-27 16:34:53.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-27 16:34:53.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-27 16:34:53.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-27 16:34:53.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-27 16:34:53.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@29170a47] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-27 16:34:53.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2a8f8555] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-27 16:34:53.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-27 16:34:53.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-27 16:34:53.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-27 16:34:53.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-27 16:34:53.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-27 16:34:53.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@402b4f81] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@35e74e08
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-27 16:34:53.507 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-27 16:34:53.511 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@6cdbe5ec] under trunc; prior registration was null
[DEBUG] 2024-11-27 16:34:53.511 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-27 16:34:53.511 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-27 16:34:53.511 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14b8a751] under bitand; prior registration was null
[DEBUG] 2024-11-27 16:34:53.511 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7345f97d] under bitor; prior registration was null
[DEBUG] 2024-11-27 16:34:53.511 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@554566a8] under bitxor; prior registration was null
[DEBUG] 2024-11-27 16:34:53.511 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66020d69] under bitnot; prior registration was null
[DEBUG] 2024-11-27 16:34:53.511 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-27 16:34:53.511 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-27 16:34:53.511 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-27 16:34:53.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-27 16:34:53.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-27 16:34:53.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-27 16:34:53.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-27 16:34:53.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-27 16:34:53.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-27 16:34:53.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-27 16:34:53.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-27 16:34:53.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-27 16:34:53.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-27 16:34:53.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3751acd7] under format; prior registration was org.hibernate.dialect.function.FormatFunction@44faa4f2
[DEBUG] 2024-11-27 16:34:53.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-27 16:34:53.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-27 16:34:53.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-27 16:34:53.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-27 16:34:53.513 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@935d3f9
[DEBUG] 2024-11-27 16:34:53.513 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@214b342f
[DEBUG] 2024-11-27 16:34:53.513 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-27 16:34:53.513 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b832551] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6
[DEBUG] 2024-11-27 16:34:53.513 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@150d6eaf] under chr; prior registration was null
[DEBUG] 2024-11-27 16:34:53.513 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-27 16:34:53.513 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63124022] under sysdate; prior registration was null
[DEBUG] 2024-11-27 16:34:53.514 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-27 16:34:53.514 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-27 16:34:53.514 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-27 16:34:53.514 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-27 16:34:53.514 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-27 16:34:53.514 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 16:34:53.515 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@13e00016] under rank; prior registration was null
[DEBUG] 2024-11-27 16:34:53.515 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7b3cbe6e] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 16:34:53.515 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@177ede17] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 16:34:53.515 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@17176b18] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 16:34:53.516 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@57b9389f] under listagg; prior registration was null
[DEBUG] 2024-11-27 16:34:53.520 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.520 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.520 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:34:53.520 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:34:53.520 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 16:34:53.520 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 16:34:53.520 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.520 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.520 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:34:53.520 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 16:34:53.521 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:34:53.522 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 16:34:53.523 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.524 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 16:34:53.525 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 16:34:53.525 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:34:53.525 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 16:34:53.525 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 16:34:53.525 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 16:34:53.525 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 16:34:53.525 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 16:34:53.525 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 16:34:53.525 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 16:34:53.525 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 16:34:53.525 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.525 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.525 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 16:34:53.525 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 16:34:53.525 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 16:34:53.529 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 16:34:53.633 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:34:53.634 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 16:34:53.717 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:34:53.720 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:34:53.723 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:34:53.723 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:34:53.890 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 16:34:53.894 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:34:53.925 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:34:53.925 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:34:53.925 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:34:53.925 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:34:53.925 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:34:53.925 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:34:53.938 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.FavoriteTeam]: private accessor [team]
[DEBUG] 2024-11-27 16:34:53.939 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:34:53.939 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:34:53.940 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:34:53.940 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:34:53.953 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 16:34:53.954 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:34:53.954 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:34:53.962 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 16:34:53.978 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:34:53.979 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:34:53.979 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:34:53.980 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:34:53.980 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:34:53.980 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:34:54.007 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 16:34:54.007 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 16:34:54.011 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:34:54.011 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.team]
[DEBUG] 2024-11-27 16:34:54.011 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.user]
[DEBUG] 2024-11-27 16:34:54.011 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.FavoriteTeam) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:34:54.011 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:34:54.011 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 16:34:54.011 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 16:34:54.012 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:34:54.012 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:34:54.012 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 16:34:54.012 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 16:34:54.012 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:34:54.012 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:34:54.012 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:34:54.084 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:34:54.086 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:34:54.096 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6cd66f6a] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:34:54.097 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:34:54.106 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  \-BasicFetch [com.radams.entity.Team.teamName]

[DEBUG] 2024-11-27 16:34:54.115 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:34:54.123 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 16:34:54.123 [main] AbstractEntityPersister -  Version select: select id from teams where id=?
[DEBUG] 2024-11-27 16:34:54.123 [main] AbstractEntityPersister -  Insert (0): insert into teams (sport_id,team_name) values (?,?)
[DEBUG] 2024-11-27 16:34:54.123 [main] AbstractEntityPersister -  Update (0): update teams set sport_id=?,team_name=? where id=?
[DEBUG] 2024-11-27 16:34:54.123 [main] AbstractEntityPersister -  Delete (0): delete from teams where id=?
[DEBUG] 2024-11-27 16:34:54.123 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:34:54.124 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.FavoriteTeam)] with identifierForTableGroup [com.radams.entity.FavoriteTeam] for NavigablePath [com.radams.entity.FavoriteTeam] 
[DEBUG] 2024-11-27 16:34:54.124 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3a5ce4b8] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team] for NavigablePath [com.radams.entity.FavoriteTeam.team] 
[DEBUG] 2024-11-27 16:34:54.124 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:34:54.124 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38848217] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team.sport] for NavigablePath [com.radams.entity.FavoriteTeam.team.sport] 
[DEBUG] 2024-11-27 16:34:54.124 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:34:54.124 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@792e8181] with identifierForTableGroup [com.radams.entity.FavoriteTeam.user] for NavigablePath [com.radams.entity.FavoriteTeam.user] 
[DEBUG] 2024-11-27 16:34:54.124 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:34:54.124 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.FavoriteTeam]
 |  +-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.team]
 |  \-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.user]

[DEBUG] 2024-11-27 16:34:54.125 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ft1 : com.radams.entity.FavoriteTeam) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.FavoriteTeam.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.FavoriteTeam.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.FavoriteTeam.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:34:54.125 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:34:54.125 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 16:34:54.125 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (team_id,user_id) values (?,?)
[DEBUG] 2024-11-27 16:34:54.125 [main] AbstractEntityPersister -  Update (0): update favorite_teams set team_id=?,user_id=? where id=?
[DEBUG] 2024-11-27 16:34:54.125 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 16:34:54.125 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:34:54.125 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 16:34:54.126 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:34:54.127 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2382b2f] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:34:54.128 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:34:54.136 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 16:34:54.136 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : teams as t1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:34:54.136 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:34:54.136 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 16:34:54.136 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 16:34:54.136 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 16:34:54.136 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 16:34:54.136 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:34:54.136 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 16:34:54.136 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:34:54.136 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@749ad37c] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:34:54.137 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:34:54.137 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b485c8b] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:34:54.137 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:34:54.137 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7bbd76b8] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:34:54.138 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 16:34:54.138 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
                  primaryTableReference : teams as t1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:34:54.138 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 16:34:54.138 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 16:34:54.138 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 16:34:54.138 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 16:34:54.138 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 16:34:54.139 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:34:54.139 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@4a7db5a] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:34:54.139 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:34:54.140 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a3a49e5] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:34:54.140 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:34:54.140 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c1b82cd] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:34:54.140 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:34:54.140 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@acd3460] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 16:34:54.141 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 16:34:54.142 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:34:54.142 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:34:54.142 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:34:54.142 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@21c99abf] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:34:54.142 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:34:54.142 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d6f6ca9] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 16:34:54.142 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 16:34:54.142 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:34:54.142 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:34:54.170 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 16:34:54.171 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 16:34:54.174 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 16:34:54.174 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 16:34:54.175 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@22429a11]
[DEBUG] 2024-11-27 16:34:54.175 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 16:34:54.175 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 16:34:54.176 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:34:54.176 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 16:34:54.178 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5627b8eb
[DEBUG] 2024-11-27 16:34:54.178 [main] SessionFactoryRegistry - Registering SessionFactory: d91c9905-7ec3-46f3-a1ab-ade2d6ecc4cf (<unnamed>)
[DEBUG] 2024-11-27 16:34:54.178 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 16:34:54.178 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 16:34:54.223 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 16:34:54.238 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:34:54.253 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1813769162 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1028135144 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@423207828 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@237789822)

[DEBUG] 2024-11-27 16:34:54.258 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-11-27 16:34:54.275 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-27 16:34:54.275 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 16:34:54.275 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:34:54.275 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:34:54.276 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:34:54.276 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:34:54.278 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 2032613967
[DEBUG] 2024-11-27 16:34:54.278 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 959718932
[DEBUG] 2024-11-27 16:34:54.282 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1753110043
[DEBUG] 2024-11-27 16:34:54.284 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1753110043
[DEBUG] 2024-11-27 16:34:54.284 [main] results - Extracted JDBC value [4] - [Hawks]
[DEBUG] 2024-11-27 16:34:54.288 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-27 16:34:54.288 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1753110043
[DEBUG] 2024-11-27 16:34:54.288 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 16:34:54.289 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 16:34:54.289 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1191029d
[DEBUG] 2024-11-27 16:34:54.289 [main] results - Extracted JDBC value [3] - [3]
[DEBUG] 2024-11-27 16:34:54.289 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 16:34:54.289 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:34:54.289 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:34:54.289 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:34:54.289 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:34:54.289 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#3] : 546685745
[DEBUG] 2024-11-27 16:34:54.289 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@1753110043
[DEBUG] 2024-11-27 16:34:54.289 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1753110043
[DEBUG] 2024-11-27 16:34:54.289 [main] results - Extracted JDBC value [4] - [Bulls]
[DEBUG] 2024-11-27 16:34:54.290 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#3
[DEBUG] 2024-11-27 16:34:54.290 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1753110043
[DEBUG] 2024-11-27 16:34:54.290 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1191029d
[DEBUG] 2024-11-27 16:34:54.291 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 16:34:54.293 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:34:54.378 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:34:54.378 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team(84212888741459))] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:34:54.385 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4aba7617] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:34:54.385 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.ValueBindJpaCriteriaParameter@3278d065
[DEBUG] 2024-11-27 16:34:54.386 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c9ef37b
[DEBUG] 2024-11-27 16:34:54.386 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.radams.entity.Team(84212888741459).sport) 
[DEBUG] 2024-11-27 16:34:54.392 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team(84212888741459)]
 |  +-CircularFetchImpl [com.radams.entity.Team(84212888741459).sport]
 |  \-BasicFetch [com.radams.entity.Team(84212888741459).teamName]

[DEBUG] 2024-11-27 16:34:54.392 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team(84212888741459)) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team(84212888741459).sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:34:54.394 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2024-11-27 16:34:54.398 [main] results - Initializer list:
	  com.radams.entity.Team(84212888741459) -> EntityResultInitializer(com.radams.entity.Team(84212888741459))@434699861 (SingleTableEntityPersister(com.radams.entity.Team))
	  com.radams.entity.Team(84212888741459).sport -> EntitySelectFetchInitializer(com.radams.entity.Team(84212888741459).sport)@1836824012 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1969357009)

[DEBUG] 2024-11-27 16:34:54.398 [main] SQL - select t1_0.id,t1_0.sport_id,t1_0.team_name from teams t1_0 where t1_0.sport_id=?
[DEBUG] 2024-11-27 16:34:54.399 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:34:54.399 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(84212888741459)): 1
[DEBUG] 2024-11-27 16:34:54.399 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team(84212888741459)#1] : 1528782796
[DEBUG] 2024-11-27 16:34:54.399 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 16:34:54.399 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.radams.entity.Team(84212888741459).sport#1) : 1
[DEBUG] 2024-11-27 16:34:54.399 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:34:54.400 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1244266030 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@2031311416 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@2013063878 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@237789822)

[DEBUG] 2024-11-27 16:34:54.400 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-11-27 16:34:54.400 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-27 16:34:54.400 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 16:34:54.400 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:34:54.400 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:34:54.401 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:34:54.401 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:34:54.401 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1328225951
[DEBUG] 2024-11-27 16:34:54.401 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2130299045
[DEBUG] 2024-11-27 16:34:54.401 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2130299045
[DEBUG] 2024-11-27 16:34:54.401 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@2130299045
[DEBUG] 2024-11-27 16:34:54.401 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 16:34:54.401 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 16:34:54.401 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c6244e7
[DEBUG] 2024-11-27 16:34:54.401 [main] results - Extracted JDBC value [3] - [3]
[DEBUG] 2024-11-27 16:34:54.401 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 16:34:54.401 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:34:54.401 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:34:54.401 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:34:54.401 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:34:54.401 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#3] : 635097653
[DEBUG] 2024-11-27 16:34:54.401 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@2130299045
[DEBUG] 2024-11-27 16:34:54.401 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2130299045
[DEBUG] 2024-11-27 16:34:54.401 [main] results - Extracted JDBC value [4] - [Bulls]
[DEBUG] 2024-11-27 16:34:54.402 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#3
[DEBUG] 2024-11-27 16:34:54.402 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@2130299045
[DEBUG] 2024-11-27 16:34:54.402 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c6244e7
[DEBUG] 2024-11-27 16:34:54.402 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 16:34:54.402 [main] entity - (EntitySelectFetchInitializer) Entity [com.radams.entity.Team(84212888741459).sport#1] : 1 has being loaded by session.internalLoad.
[DEBUG] 2024-11-27 16:34:54.402 [main] results - Extracted JDBC value [2] - [Hawks]
[DEBUG] 2024-11-27 16:34:54.402 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team(84212888741459)#1
[DEBUG] 2024-11-27 16:34:54.402 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3292eff7
[DEBUG] 2024-11-27 16:34:54.402 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2024-11-27 16:34:54.402 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(84212888741459)): 3
[DEBUG] 2024-11-27 16:34:54.402 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3292eff7
[DEBUG] 2024-11-27 16:34:54.402 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:34:54.403 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:37:20.962 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-27 16:37:20.965 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-27 16:37:20.984 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-27 16:37:20.985 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-27 16:37:21.023 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-27 16:37:21.027 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-27 16:37:21.190 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-27 16:37:21.193 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-27 16:37:21.193 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-27 16:37:21.193 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:37:21.194 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:37:21.194 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-27 16:37:21.194 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-27 16:37:21.195 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-27 16:37:21.196 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:37:21.196 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-27 16:37:21.196 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-27 16:37:21.196 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:37:21.197 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-27 16:37:21.203 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-27 16:37:21.203 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-27 16:37:21.287 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:37:21.288 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:37:21.288 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:37:21.288 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:37:21.288 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:37:21.288 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:37:21.288 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:37:21.288 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:37:21.288 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:37:21.288 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:37:21.288 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:37:21.289 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:37:21.289 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:37:21.289 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:37:21.289 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:37:21.289 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:37:21.289 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:37:21.289 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-27 16:37:21.289 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:37:21.289 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:37:21.289 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:37:21.289 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:37:21.290 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:37:21.290 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:37:21.290 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:37:21.290 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:37:21.290 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:37:21.290 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:37:21.290 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:37:21.290 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:37:21.290 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:37:21.290 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:37:21.291 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:37:21.291 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:37:21.291 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:37:21.291 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:37:21.291 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:37:21.291 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:37:21.291 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:37:21.291 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:37:21.291 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:37:21.291 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:37:21.291 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:37:21.292 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:37:21.292 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:37:21.292 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:37:21.292 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:37:21.292 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-27 16:37:21.292 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:37:21.292 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:37:21.292 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:37:21.292 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:37:21.292 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:37:21.292 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-27 16:37:21.292 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:37:21.293 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:37:21.293 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:37:21.293 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:37:21.293 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-27 16:37:21.293 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-27 16:37:21.293 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-27 16:37:21.293 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:37:21.293 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:37:21.293 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:37:21.293 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:37:21.294 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:37:21.294 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:37:21.294 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:37:21.294 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:37:21.294 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:37:21.294 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:37:21.294 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:37:21.294 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:37:21.294 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:37:21.294 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-27 16:37:21.294 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-27 16:37:21.294 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:37:21.295 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:37:21.295 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:37:21.295 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-27 16:37:21.295 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-27 16:37:21.295 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:37:21.295 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:37:21.295 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:37:21.295 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:37:21.295 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:37:21.296 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:37:21.296 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:37:21.296 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:37:21.296 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:37:21.296 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:37:21.296 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:37:21.296 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:37:21.296 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:37:21.296 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:37:21.296 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:37:21.296 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-27 16:37:21.297 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:37:21.297 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:37:21.297 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:37:21.297 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:37:21.297 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:37:21.297 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:37:21.297 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:37:21.297 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:37:21.297 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:37:21.297 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:37:21.297 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:37:21.298 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:37:21.298 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:37:21.298 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:37:21.298 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:37:21.298 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:37:21.298 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:37:21.298 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:37:21.298 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:37:21.298 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:37:21.298 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 16:37:21.298 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 16:37:21.298 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2024-11-27 16:37:21.299 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2024-11-27 16:37:21.303 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 16:37:21.303 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 16:37:21.304 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1bc49bc5
[DEBUG] 2024-11-27 16:37:21.304 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-27 16:37:21.304 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-27 16:37:21.304 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-27 16:37:21.304 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-27 16:37:21.304 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@24e83d19
[DEBUG] 2024-11-27 16:37:21.304 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5c080ef3
[DEBUG] 2024-11-27 16:37:21.304 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@188cbcde
[DEBUG] 2024-11-27 16:37:21.305 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ee6291f
[INFO ] 2024-11-27 16:37:21.326 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-27 16:37:21.326 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-27 16:37:21.326 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-27 16:37:21.386 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-27 16:37:21.455 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-27 16:37:21.456 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-27 16:37:21.456 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-27 16:37:21.487 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-27 16:37:21.488 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-27 16:37:21.492 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-27 16:37:21.492 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-27 16:37:21.503 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e)
[DEBUG] 2024-11-27 16:37:21.503 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@513b52af)
[DEBUG] 2024-11-27 16:37:21.504 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a8c93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bed3315)
[DEBUG] 2024-11-27 16:37:21.504 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24)
[DEBUG] 2024-11-27 16:37:21.504 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c7350b0)
[DEBUG] 2024-11-27 16:37:21.504 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bc4ef12)
[DEBUG] 2024-11-27 16:37:21.504 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50448409) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5634a861)
[DEBUG] 2024-11-27 16:37:21.504 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b0dc227) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37ad042b)
[DEBUG] 2024-11-27 16:37:21.504 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@43bdaa1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30b975ad)
[DEBUG] 2024-11-27 16:37:21.505 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-27 16:37:21.505 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:37:21.506 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:37:21.507 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:37:21.507 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:37:21.510 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@52bf7bf6
[DEBUG] 2024-11-27 16:37:21.510 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1bc49bc5`
[DEBUG] 2024-11-27 16:37:21.514 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:37:21.514 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:37:21.514 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:37:21.517 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:37:21.517 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:37:21.518 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:37:21.518 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:37:21.518 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:37:21.518 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:37:21.518 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:37:21.518 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:37:21.518 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:37:21.519 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@411a5965]
[DEBUG] 2024-11-27 16:37:21.549 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-27 16:37:21.568 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-27 16:37:21.574 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-27 16:37:21.579 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-27 16:37:21.586 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:37:21.601 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:37:21.601 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:37:21.601 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:37:21.603 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:37:21.606 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-27 16:37:21.609 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:37:21.612 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-27 16:37:21.612 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:37:21.615 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:37:21.620 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:37:21.620 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:37:21.628 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-27 16:37:21.629 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:37:21.630 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:37:21.630 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:37:21.631 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:37:21.631 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:37:21.633 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:37:21.634 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-27 16:37:21.635 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-27 16:37:21.635 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-27 16:37:21.635 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-27 16:37:21.635 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-27 16:37:21.635 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-27 16:37:21.635 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-27 16:37:21.636 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:37:21.639 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:37:21.639 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-27 16:37:21.639 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-27 16:37:21.640 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:37:21.641 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:37:21.641 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:37:21.641 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:37:21.641 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:37:21.641 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-27 16:37:21.641 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:37:21.641 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-27 16:37:21.641 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:37:21.641 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:37:21.642 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-27 16:37:21.642 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-27 16:37:21.642 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-27 16:37:21.642 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-27 16:37:21.642 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-27 16:37:21.642 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-27 16:37:21.642 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:37:21.642 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:37:21.642 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-27 16:37:21.643 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:37:21.643 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:37:21.643 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:37:21.643 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:37:21.643 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:37:21.643 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:37:21.643 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-27 16:37:21.644 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:37:21.644 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:37:21.645 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-27 16:37:21.645 [main] EntityBinder - Bind entity com.radams.entity.Team on table teams
[DEBUG] 2024-11-27 16:37:21.645 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:37:21.649 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:37:21.649 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:37:21.649 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:37:21.649 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:37:21.649 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-27 16:37:21.649 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:37:21.649 [main] BasicValue - Skipping column re-registration: teams.id
[DEBUG] 2024-11-27 16:37:21.649 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:37:21.649 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:37:21.650 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-27 16:37:21.650 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:37:21.652 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-27 16:37:21.652 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-27 16:37:21.652 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-27 16:37:21.653 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-27 16:37:21.653 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-27 16:37:21.653 [main] BasicValue - Skipping column re-registration: teams.team_name
[DEBUG] 2024-11-27 16:37:21.653 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-27 16:37:21.653 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:37:21.653 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:37:21.654 [main] EntityBinder - Import with entity name FavoriteTeam
[DEBUG] 2024-11-27 16:37:21.654 [main] EntityBinder - Bind entity com.radams.entity.FavoriteTeam on table favorite_teams
[DEBUG] 2024-11-27 16:37:21.654 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:37:21.655 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:37:21.655 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:37:21.655 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:37:21.655 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:37:21.655 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.FavoriteTeam:id]
[DEBUG] 2024-11-27 16:37:21.655 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:37:21.655 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-27 16:37:21.655 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:37:21.655 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:37:21.655 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='team_id')
[DEBUG] 2024-11-27 16:37:21.656 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:37:21.656 [main] PropertyBinder - Building property team
[DEBUG] 2024-11-27 16:37:21.656 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-27 16:37:21.656 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:37:21.656 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-27 16:37:21.657 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:37:21.657 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:37:21.657 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-27 16:37:21.658 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:37:21.659 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-27 16:37:21.659 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:37:21.659 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-27 16:37:21.659 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:37:21.662 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-27 16:37:21.663 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-27 16:37:21.663 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2024-11-27 16:37:21.663 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-27 16:37:21.663 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:37:21.664 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-27 16:37:21.665 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-27 16:37:21.666 [main] TableBinder - Retrieving property com.radams.entity.FavoriteTeam.user
[DEBUG] 2024-11-27 16:37:21.667 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:37:21.667 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:37:21.667 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-27 16:37:21.667 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> teams
[DEBUG] 2024-11-27 16:37:21.667 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-27 16:37:21.667 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 16:37:21.667 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:37:21.668 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:37:21.669 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:37:21.676 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:37:21.676 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:37:21.676 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:37:21.894 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-27 16:37:21.926 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:37:21.926 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.TeamDaoTest,getAllTeamsFromSportSuccess, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4409cae6, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-27 16:37:21.929 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-27 16:37:21.935 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:37:21.966 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-27 16:37:21.966 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-27 16:37:21.967 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-27 16:37:21.967 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-27 16:37:21.968 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1cde374] under count; prior registration was null
[DEBUG] 2024-11-27 16:37:21.969 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7b5021d1] under every; prior registration was null
[DEBUG] 2024-11-27 16:37:21.969 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6befbb12] under any; prior registration was null
[DEBUG] 2024-11-27 16:37:21.969 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-27 16:37:21.969 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-27 16:37:21.969 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-27 16:37:21.969 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-27 16:37:21.969 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-27 16:37:21.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-27 16:37:21.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-27 16:37:21.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-27 16:37:21.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-27 16:37:21.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-27 16:37:21.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-27 16:37:21.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-27 16:37:21.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-27 16:37:21.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-27 16:37:21.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-27 16:37:21.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-27 16:37:21.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-27 16:37:21.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398] under sinh; prior registration was null
[DEBUG] 2024-11-27 16:37:21.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6] under cosh; prior registration was null
[DEBUG] 2024-11-27 16:37:21.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37b01ce2] under tanh; prior registration was null
[DEBUG] 2024-11-27 16:37:21.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a88c4f5] under pi; prior registration was null
[DEBUG] 2024-11-27 16:37:21.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1894fa9f] under log; prior registration was null
[DEBUG] 2024-11-27 16:37:21.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-27 16:37:21.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-27 16:37:21.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-27 16:37:21.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-27 16:37:21.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-27 16:37:21.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-27 16:37:21.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-27 16:37:21.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-27 16:37:21.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-27 16:37:21.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-27 16:37:21.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-27 16:37:21.974 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-27 16:37:21.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@63f9ddf9] under position; prior registration was null
[DEBUG] 2024-11-27 16:37:21.976 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@38087342] under overlay; prior registration was null
[DEBUG] 2024-11-27 16:37:21.976 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5d9d2119] under trim; prior registration was null
[DEBUG] 2024-11-27 16:37:21.977 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2a04ab05] under cast; prior registration was null
[DEBUG] 2024-11-27 16:37:21.977 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ebbde60] under collate; prior registration was null
[DEBUG] 2024-11-27 16:37:21.978 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@25c1f5ee] under extract; prior registration was null
[DEBUG] 2024-11-27 16:37:21.978 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-27 16:37:21.978 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-27 16:37:21.978 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3f6c2763] under ifnull; prior registration was null
[DEBUG] 2024-11-27 16:37:21.978 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-27 16:37:21.978 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-27 16:37:21.978 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2a484710] under pad; prior registration was null
[DEBUG] 2024-11-27 16:37:21.979 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2ad7bd26] under str; prior registration was null
[DEBUG] 2024-11-27 16:37:21.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1216eb3f] under format; prior registration was null
[DEBUG] 2024-11-27 16:37:21.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1510b9a2] under timestampadd; prior registration was null
[DEBUG] 2024-11-27 16:37:21.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3af236d0] under timestampdiff; prior registration was null
[DEBUG] 2024-11-27 16:37:21.981 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-27 16:37:21.981 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-27 16:37:21.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bf570c] under current_date; prior registration was null
[DEBUG] 2024-11-27 16:37:21.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1796b2d4] under current_time; prior registration was null
[DEBUG] 2024-11-27 16:37:21.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@935d3f9] under current_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:37:21.981 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-27 16:37:21.981 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-27 16:37:21.981 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@214b342f] under local_date; prior registration was null
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5db0003d] under local_time; prior registration was null
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f12094d] under local_datetime; prior registration was null
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@589fb74d] under offset_datetime; prior registration was null
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@200d1a3d] under instant; prior registration was null
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7f42b194] under sql; prior registration was null
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1894fa9f
[DEBUG] 2024-11-27 16:37:21.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-27 16:37:21.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-27 16:37:21.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-27 16:37:21.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-27 16:37:21.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-27 16:37:21.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-27 16:37:21.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-27 16:37:21.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-27 16:37:21.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@402b4f81] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-27 16:37:21.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@13ef7fa1] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-27 16:37:21.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-27 16:37:21.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-27 16:37:21.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-27 16:37:21.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:37:21.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-27 16:37:21.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-27 16:37:21.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-27 16:37:21.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-27 16:37:21.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-27 16:37:21.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-27 16:37:21.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-27 16:37:21.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-27 16:37:21.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-27 16:37:21.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-27 16:37:21.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23b1aa9] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@63f9ddf9
[DEBUG] 2024-11-27 16:37:21.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-27 16:37:21.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-27 16:37:21.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-27 16:37:21.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7345f97d] under trunc; prior registration was null
[DEBUG] 2024-11-27 16:37:21.988 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-27 16:37:21.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-27 16:37:21.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@554566a8] under bitand; prior registration was null
[DEBUG] 2024-11-27 16:37:21.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66020d69] under bitor; prior registration was null
[DEBUG] 2024-11-27 16:37:21.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3751acd7] under bitxor; prior registration was null
[DEBUG] 2024-11-27 16:37:21.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b832551] under bitnot; prior registration was null
[DEBUG] 2024-11-27 16:37:21.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-27 16:37:21.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-27 16:37:21.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@150d6eaf] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1216eb3f
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5db0003d
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@7f12094d
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63124022] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a88c4f5
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@591f6f83] under chr; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b44605c] under sysdate; prior registration was null
[DEBUG] 2024-11-27 16:37:21.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-27 16:37:21.990 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-27 16:37:21.990 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-27 16:37:21.990 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-27 16:37:21.990 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-27 16:37:21.990 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 16:37:21.991 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@177ede17] under rank; prior registration was null
[DEBUG] 2024-11-27 16:37:21.991 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@17176b18] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 16:37:21.991 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4e4395c] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 16:37:21.991 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1ab53860] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 16:37:21.991 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@41f785e3] under listagg; prior registration was null
[DEBUG] 2024-11-27 16:37:21.995 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.995 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.995 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:37:21.995 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:37:21.995 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 16:37:21.995 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 16:37:21.995 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.995 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.995 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:37:21.995 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 16:37:21.995 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 16:37:21.995 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:37:21.995 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 16:37:21.995 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 16:37:21.995 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 16:37:21.996 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 16:37:21.997 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 16:37:21.998 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 16:37:21.999 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 16:37:21.999 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 16:37:21.999 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 16:37:21.999 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 16:37:21.999 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 16:37:21.999 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.999 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.999 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 16:37:21.999 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 16:37:21.999 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 16:37:22.002 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 16:37:22.092 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:37:22.092 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 16:37:22.187 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:37:22.190 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:37:22.193 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:37:22.193 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:37:22.343 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 16:37:22.346 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:37:22.371 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:37:22.371 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:37:22.371 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:37:22.371 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:37:22.371 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:37:22.371 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:37:22.383 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.FavoriteTeam]: private accessor [team]
[DEBUG] 2024-11-27 16:37:22.383 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:37:22.383 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:37:22.384 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:37:22.384 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:37:22.396 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 16:37:22.396 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:37:22.396 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:37:22.405 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 16:37:22.420 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:37:22.421 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:37:22.421 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:37:22.422 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:37:22.422 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:37:22.422 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:37:22.448 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 16:37:22.448 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 16:37:22.452 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:37:22.452 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.team]
[DEBUG] 2024-11-27 16:37:22.452 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.user]
[DEBUG] 2024-11-27 16:37:22.452 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.FavoriteTeam) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:37:22.452 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:37:22.452 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 16:37:22.452 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 16:37:22.452 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:37:22.452 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:37:22.452 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 16:37:22.452 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 16:37:22.452 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:37:22.452 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:37:22.452 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:37:22.517 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:37:22.519 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:37:22.527 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@578b2dec] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:37:22.528 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:37:22.537 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  \-BasicFetch [com.radams.entity.Team.teamName]

[DEBUG] 2024-11-27 16:37:22.546 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:37:22.555 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 16:37:22.555 [main] AbstractEntityPersister -  Version select: select id from teams where id=?
[DEBUG] 2024-11-27 16:37:22.555 [main] AbstractEntityPersister -  Insert (0): insert into teams (sport_id,team_name) values (?,?)
[DEBUG] 2024-11-27 16:37:22.555 [main] AbstractEntityPersister -  Update (0): update teams set sport_id=?,team_name=? where id=?
[DEBUG] 2024-11-27 16:37:22.555 [main] AbstractEntityPersister -  Delete (0): delete from teams where id=?
[DEBUG] 2024-11-27 16:37:22.555 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:37:22.555 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.FavoriteTeam)] with identifierForTableGroup [com.radams.entity.FavoriteTeam] for NavigablePath [com.radams.entity.FavoriteTeam] 
[DEBUG] 2024-11-27 16:37:22.555 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1607d391] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team] for NavigablePath [com.radams.entity.FavoriteTeam.team] 
[DEBUG] 2024-11-27 16:37:22.555 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:37:22.555 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38826984] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team.sport] for NavigablePath [com.radams.entity.FavoriteTeam.team.sport] 
[DEBUG] 2024-11-27 16:37:22.555 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:37:22.556 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a78d380] with identifierForTableGroup [com.radams.entity.FavoriteTeam.user] for NavigablePath [com.radams.entity.FavoriteTeam.user] 
[DEBUG] 2024-11-27 16:37:22.556 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:37:22.556 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.FavoriteTeam]
 |  +-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.team]
 |  \-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.user]

[DEBUG] 2024-11-27 16:37:22.556 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ft1 : com.radams.entity.FavoriteTeam) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.FavoriteTeam.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.FavoriteTeam.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.FavoriteTeam.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:37:22.556 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:37:22.556 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 16:37:22.556 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (team_id,user_id) values (?,?)
[DEBUG] 2024-11-27 16:37:22.556 [main] AbstractEntityPersister -  Update (0): update favorite_teams set team_id=?,user_id=? where id=?
[DEBUG] 2024-11-27 16:37:22.556 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 16:37:22.556 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:37:22.556 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 16:37:22.557 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:37:22.558 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@71734463] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:37:22.559 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:37:22.566 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 16:37:22.567 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : teams as t1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:37:22.567 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:37:22.567 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 16:37:22.567 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 16:37:22.567 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 16:37:22.567 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 16:37:22.567 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:37:22.567 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 16:37:22.567 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:37:22.567 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@59b98ad1] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:37:22.567 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:37:22.567 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@591e5fd4] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:37:22.567 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:37:22.568 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37b238da] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:37:22.568 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 16:37:22.569 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
                  primaryTableReference : teams as t1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:37:22.569 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 16:37:22.569 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 16:37:22.569 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 16:37:22.569 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 16:37:22.569 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 16:37:22.570 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:37:22.570 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@158e6fc2] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:37:22.570 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:37:22.570 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@acd3460] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:37:22.570 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:37:22.570 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3ea9a091] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:37:22.570 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:37:22.571 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@16f4a3c0] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 16:37:22.571 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 16:37:22.572 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:37:22.572 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:37:22.572 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:37:22.572 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@54496c2d] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:37:22.572 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:37:22.572 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4e1a3d5a] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 16:37:22.572 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 16:37:22.572 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:37:22.573 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:37:22.597 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 16:37:22.598 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 16:37:22.601 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 16:37:22.601 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 16:37:22.602 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@275902e1]
[DEBUG] 2024-11-27 16:37:22.604 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 16:37:22.604 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 16:37:22.604 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:37:22.604 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 16:37:22.606 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3516b881
[DEBUG] 2024-11-27 16:37:22.606 [main] SessionFactoryRegistry - Registering SessionFactory: 35768e1c-c5e4-469f-8505-a7a5698004c6 (<unnamed>)
[DEBUG] 2024-11-27 16:37:22.606 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 16:37:22.606 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 16:37:22.651 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 16:37:22.667 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:37:22.681 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@650520717 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1472044075 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@902556500 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@175825728)

[DEBUG] 2024-11-27 16:37:22.685 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-11-27 16:37:22.700 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-27 16:37:22.700 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 16:37:22.700 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:37:22.701 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:37:22.701 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:37:22.701 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:37:22.703 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 1354439711
[DEBUG] 2024-11-27 16:37:22.704 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 52313140
[DEBUG] 2024-11-27 16:37:22.707 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1979242928
[DEBUG] 2024-11-27 16:37:22.709 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1979242928
[DEBUG] 2024-11-27 16:37:22.710 [main] results - Extracted JDBC value [4] - [Hawks]
[DEBUG] 2024-11-27 16:37:22.713 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-27 16:37:22.713 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1979242928
[DEBUG] 2024-11-27 16:37:22.714 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 16:37:22.714 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 16:37:22.714 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d1c63af
[DEBUG] 2024-11-27 16:37:22.715 [main] results - Extracted JDBC value [3] - [3]
[DEBUG] 2024-11-27 16:37:22.715 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 16:37:22.715 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:37:22.715 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:37:22.715 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:37:22.715 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:37:22.715 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#3] : 2071551415
[DEBUG] 2024-11-27 16:37:22.715 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@1979242928
[DEBUG] 2024-11-27 16:37:22.715 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1979242928
[DEBUG] 2024-11-27 16:37:22.715 [main] results - Extracted JDBC value [4] - [Bulls]
[DEBUG] 2024-11-27 16:37:22.715 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#3
[DEBUG] 2024-11-27 16:37:22.715 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1979242928
[DEBUG] 2024-11-27 16:37:22.715 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1d1c63af
[DEBUG] 2024-11-27 16:37:22.717 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 16:37:22.718 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:37:22.809 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:37:22.809 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team(84361311376261))] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:37:22.815 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1031c1a0] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:37:22.816 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.ValueBindJpaCriteriaParameter@3c9ef37b
[DEBUG] 2024-11-27 16:37:22.816 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c8758d1
[DEBUG] 2024-11-27 16:37:22.817 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.radams.entity.Team(84361311376261).sport) 
[DEBUG] 2024-11-27 16:37:22.822 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team(84361311376261)]
 |  +-CircularFetchImpl [com.radams.entity.Team(84361311376261).sport]
 |  \-BasicFetch [com.radams.entity.Team(84361311376261).teamName]

[DEBUG] 2024-11-27 16:37:22.822 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team(84361311376261)) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team(84361311376261).sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:37:22.824 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2024-11-27 16:37:22.827 [main] results - Initializer list:
	  com.radams.entity.Team(84361311376261).sport -> EntitySelectFetchInitializer(com.radams.entity.Team(84361311376261).sport)@1969357009 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@956958624)
	  com.radams.entity.Team(84361311376261) -> EntityResultInitializer(com.radams.entity.Team(84361311376261))@1733184642 (SingleTableEntityPersister(com.radams.entity.Team))

[DEBUG] 2024-11-27 16:37:22.827 [main] SQL - select t1_0.id,t1_0.sport_id,t1_0.team_name from teams t1_0 where t1_0.sport_id=?
[DEBUG] 2024-11-27 16:37:22.828 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:37:22.828 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(84361311376261)): 1
[DEBUG] 2024-11-27 16:37:22.828 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team(84361311376261)#1] : 2031311416
[DEBUG] 2024-11-27 16:37:22.828 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 16:37:22.828 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.radams.entity.Team(84361311376261).sport#1) : 1
[DEBUG] 2024-11-27 16:37:22.829 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:37:22.829 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2013063878 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1446787786 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1407280813 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@175825728)

[DEBUG] 2024-11-27 16:37:22.829 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-11-27 16:37:22.830 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-27 16:37:22.830 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 16:37:22.830 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:37:22.830 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:37:22.830 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:37:22.830 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:37:22.830 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 207766759
[DEBUG] 2024-11-27 16:37:22.830 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@635097653
[DEBUG] 2024-11-27 16:37:22.830 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@635097653
[DEBUG] 2024-11-27 16:37:22.830 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@635097653
[DEBUG] 2024-11-27 16:37:22.830 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 16:37:22.830 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 16:37:22.830 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3292eff7
[DEBUG] 2024-11-27 16:37:22.830 [main] results - Extracted JDBC value [3] - [3]
[DEBUG] 2024-11-27 16:37:22.830 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 16:37:22.830 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:37:22.830 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:37:22.830 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:37:22.830 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:37:22.830 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#3] : 43951584
[DEBUG] 2024-11-27 16:37:22.830 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@635097653
[DEBUG] 2024-11-27 16:37:22.830 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@635097653
[DEBUG] 2024-11-27 16:37:22.830 [main] results - Extracted JDBC value [4] - [Bulls]
[DEBUG] 2024-11-27 16:37:22.831 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#3
[DEBUG] 2024-11-27 16:37:22.831 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@635097653
[DEBUG] 2024-11-27 16:37:22.831 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3292eff7
[DEBUG] 2024-11-27 16:37:22.831 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 16:37:22.831 [main] entity - (EntitySelectFetchInitializer) Entity [com.radams.entity.Team(84361311376261).sport#1] : 1 has being loaded by session.internalLoad.
[DEBUG] 2024-11-27 16:37:22.831 [main] results - Extracted JDBC value [2] - [Hawks]
[DEBUG] 2024-11-27 16:37:22.831 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team(84361311376261)#1
[DEBUG] 2024-11-27 16:37:22.831 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c459c28
[DEBUG] 2024-11-27 16:37:22.831 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2024-11-27 16:37:22.831 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(84361311376261)): 3
[DEBUG] 2024-11-27 16:37:22.831 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1c459c28
[DEBUG] 2024-11-27 16:37:22.831 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:37:22.832 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:39:04.972 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-27 16:39:04.975 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-27 16:39:04.995 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-27 16:39:04.996 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-27 16:39:05.034 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-27 16:39:05.039 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-27 16:39:05.197 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-27 16:39:05.200 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-27 16:39:05.201 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-27 16:39:05.201 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:39:05.201 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:39:05.201 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-27 16:39:05.202 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-27 16:39:05.202 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-27 16:39:05.203 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:39:05.204 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-27 16:39:05.204 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-27 16:39:05.204 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:39:05.212 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-27 16:39:05.218 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-27 16:39:05.219 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-27 16:39:05.295 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:39:05.295 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:39:05.295 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:39:05.295 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:39:05.295 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:39:05.295 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:39:05.295 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:39:05.295 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:39:05.295 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:39:05.296 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:39:05.296 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:39:05.296 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:39:05.296 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:39:05.296 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:39:05.296 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:39:05.296 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:39:05.296 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:39:05.296 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-27 16:39:05.296 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:39:05.296 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:39:05.296 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:39:05.297 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:39:05.297 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:39:05.297 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:39:05.297 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:39:05.297 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:39:05.297 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:39:05.297 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:39:05.297 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:39:05.297 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:39:05.297 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:39:05.297 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:39:05.298 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:39:05.298 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:39:05.298 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:39:05.298 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:39:05.298 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:39:05.298 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:39:05.298 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:39:05.298 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:39:05.298 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:39:05.298 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:39:05.298 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:39:05.298 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:39:05.299 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:39:05.299 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:39:05.299 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:39:05.299 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-27 16:39:05.299 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:39:05.299 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:39:05.299 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:39:05.299 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:39:05.299 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:39:05.299 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-27 16:39:05.299 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:39:05.300 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:39:05.300 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:39:05.300 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:39:05.300 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-27 16:39:05.300 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-27 16:39:05.300 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-27 16:39:05.300 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:39:05.300 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:39:05.300 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:39:05.300 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:39:05.300 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:39:05.301 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:39:05.301 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:39:05.301 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:39:05.301 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:39:05.301 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:39:05.301 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:39:05.301 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:39:05.301 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:39:05.301 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-27 16:39:05.301 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-27 16:39:05.301 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:39:05.301 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:39:05.301 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:39:05.302 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-27 16:39:05.302 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-27 16:39:05.302 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:39:05.302 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:39:05.302 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:39:05.302 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:39:05.302 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:39:05.302 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:39:05.302 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:39:05.302 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:39:05.302 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:39:05.303 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:39:05.303 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:39:05.303 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:39:05.303 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:39:05.303 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:39:05.303 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:39:05.303 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-27 16:39:05.303 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:39:05.303 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:39:05.303 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:39:05.303 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:39:05.303 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:39:05.303 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:39:05.304 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:39:05.304 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:39:05.304 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:39:05.304 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:39:05.304 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:39:05.304 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:39:05.304 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:39:05.304 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:39:05.304 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:39:05.304 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:39:05.304 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:39:05.305 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:39:05.305 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:39:05.305 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:39:05.305 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 16:39:05.305 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 16:39:05.305 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2024-11-27 16:39:05.305 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2024-11-27 16:39:05.309 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 16:39:05.309 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 16:39:05.310 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1bc49bc5
[DEBUG] 2024-11-27 16:39:05.310 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-27 16:39:05.310 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-27 16:39:05.310 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-27 16:39:05.310 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-27 16:39:05.311 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@24e83d19
[DEBUG] 2024-11-27 16:39:05.311 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5c080ef3
[DEBUG] 2024-11-27 16:39:05.311 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@188cbcde
[DEBUG] 2024-11-27 16:39:05.311 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ee6291f
[INFO ] 2024-11-27 16:39:05.330 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-27 16:39:05.330 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-27 16:39:05.330 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-27 16:39:05.403 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-27 16:39:05.484 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-27 16:39:05.484 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-27 16:39:05.484 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-27 16:39:05.517 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-27 16:39:05.518 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-27 16:39:05.522 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-27 16:39:05.522 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-27 16:39:05.533 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e)
[DEBUG] 2024-11-27 16:39:05.533 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@513b52af)
[DEBUG] 2024-11-27 16:39:05.533 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a8c93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bed3315)
[DEBUG] 2024-11-27 16:39:05.533 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24)
[DEBUG] 2024-11-27 16:39:05.533 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c7350b0)
[DEBUG] 2024-11-27 16:39:05.533 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bc4ef12)
[DEBUG] 2024-11-27 16:39:05.533 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50448409) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5634a861)
[DEBUG] 2024-11-27 16:39:05.534 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b0dc227) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37ad042b)
[DEBUG] 2024-11-27 16:39:05.534 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@43bdaa1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30b975ad)
[DEBUG] 2024-11-27 16:39:05.535 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-27 16:39:05.535 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:39:05.535 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:39:05.537 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:39:05.537 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:39:05.539 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@52bf7bf6
[DEBUG] 2024-11-27 16:39:05.539 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1bc49bc5`
[DEBUG] 2024-11-27 16:39:05.544 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:39:05.544 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:39:05.544 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:39:05.546 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:39:05.546 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:39:05.546 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:39:05.546 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:39:05.546 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:39:05.546 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:39:05.547 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:39:05.547 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:39:05.547 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:39:05.548 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@411a5965]
[DEBUG] 2024-11-27 16:39:05.577 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-27 16:39:05.594 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-27 16:39:05.600 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-27 16:39:05.604 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-27 16:39:05.610 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:39:05.624 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:39:05.624 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:39:05.625 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:39:05.626 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:39:05.629 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-27 16:39:05.631 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:39:05.634 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-27 16:39:05.634 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:39:05.637 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:39:05.641 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:39:05.642 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:39:05.649 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-27 16:39:05.650 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:39:05.650 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:39:05.651 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:39:05.651 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:39:05.651 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:39:05.653 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:39:05.654 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-27 16:39:05.655 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-27 16:39:05.655 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-27 16:39:05.655 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-27 16:39:05.655 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-27 16:39:05.655 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-27 16:39:05.655 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-27 16:39:05.656 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:39:05.659 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:39:05.660 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-27 16:39:05.660 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-27 16:39:05.660 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:39:05.661 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:39:05.661 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:39:05.661 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:39:05.661 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:39:05.661 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-27 16:39:05.661 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:39:05.661 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-27 16:39:05.661 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:39:05.661 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:39:05.662 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-27 16:39:05.662 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-27 16:39:05.662 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-27 16:39:05.662 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-27 16:39:05.662 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-27 16:39:05.662 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-27 16:39:05.662 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:39:05.662 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:39:05.662 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-27 16:39:05.663 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:39:05.663 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:39:05.663 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:39:05.663 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:39:05.663 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:39:05.664 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:39:05.664 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-27 16:39:05.664 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:39:05.665 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:39:05.665 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-27 16:39:05.665 [main] EntityBinder - Bind entity com.radams.entity.Team on table teams
[DEBUG] 2024-11-27 16:39:05.666 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:39:05.669 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:39:05.670 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:39:05.670 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:39:05.670 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:39:05.670 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-27 16:39:05.670 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:39:05.670 [main] BasicValue - Skipping column re-registration: teams.id
[DEBUG] 2024-11-27 16:39:05.670 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:39:05.670 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:39:05.671 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-27 16:39:05.671 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:39:05.673 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-27 16:39:05.673 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-27 16:39:05.673 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-27 16:39:05.673 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-27 16:39:05.673 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-27 16:39:05.673 [main] BasicValue - Skipping column re-registration: teams.team_name
[DEBUG] 2024-11-27 16:39:05.673 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-27 16:39:05.674 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:39:05.674 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:39:05.674 [main] EntityBinder - Import with entity name FavoriteTeam
[DEBUG] 2024-11-27 16:39:05.674 [main] EntityBinder - Bind entity com.radams.entity.FavoriteTeam on table favorite_teams
[DEBUG] 2024-11-27 16:39:05.675 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:39:05.675 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:39:05.675 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:39:05.675 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:39:05.675 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:39:05.675 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.FavoriteTeam:id]
[DEBUG] 2024-11-27 16:39:05.675 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:39:05.675 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-27 16:39:05.675 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:39:05.676 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:39:05.676 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='team_id')
[DEBUG] 2024-11-27 16:39:05.676 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:39:05.676 [main] PropertyBinder - Building property team
[DEBUG] 2024-11-27 16:39:05.676 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-27 16:39:05.676 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:39:05.676 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-27 16:39:05.677 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:39:05.677 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:39:05.677 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-27 16:39:05.678 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:39:05.678 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-27 16:39:05.678 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:39:05.679 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-27 16:39:05.679 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:39:05.682 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-27 16:39:05.682 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-27 16:39:05.682 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2024-11-27 16:39:05.682 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-27 16:39:05.683 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:39:05.684 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-27 16:39:05.685 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-27 16:39:05.686 [main] TableBinder - Retrieving property com.radams.entity.FavoriteTeam.user
[DEBUG] 2024-11-27 16:39:05.686 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:39:05.686 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:39:05.686 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-27 16:39:05.686 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> teams
[DEBUG] 2024-11-27 16:39:05.687 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-27 16:39:05.687 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 16:39:05.687 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:39:05.688 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:39:05.688 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:39:05.695 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:39:05.696 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:39:05.696 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:39:05.936 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-27 16:39:05.969 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:39:05.969 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.TeamDaoTest,getAllTeamsFromDatabaseSuccess, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4409cae6, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-27 16:39:05.973 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-27 16:39:05.978 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:39:06.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-27 16:39:06.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-27 16:39:06.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-27 16:39:06.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-27 16:39:06.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5a47730c] under count; prior registration was null
[DEBUG] 2024-11-27 16:39:06.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@514377fc] under every; prior registration was null
[DEBUG] 2024-11-27 16:39:06.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2e4eda17] under any; prior registration was null
[DEBUG] 2024-11-27 16:39:06.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-27 16:39:06.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-27 16:39:06.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-27 16:39:06.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-27 16:39:06.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-27 16:39:06.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-27 16:39:06.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-27 16:39:06.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-27 16:39:06.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-27 16:39:06.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-27 16:39:06.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-27 16:39:06.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-27 16:39:06.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-27 16:39:06.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-27 16:39:06.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-27 16:39:06.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-27 16:39:06.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-27 16:39:06.017 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55c1ced9] under sinh; prior registration was null
[DEBUG] 2024-11-27 16:39:06.017 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49cc9b2a] under cosh; prior registration was null
[DEBUG] 2024-11-27 16:39:06.017 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398] under tanh; prior registration was null
[DEBUG] 2024-11-27 16:39:06.017 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6] under pi; prior registration was null
[DEBUG] 2024-11-27 16:39:06.018 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37b01ce2] under log; prior registration was null
[DEBUG] 2024-11-27 16:39:06.018 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-27 16:39:06.018 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-27 16:39:06.018 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-27 16:39:06.019 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-27 16:39:06.019 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-27 16:39:06.019 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-27 16:39:06.019 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-27 16:39:06.019 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-27 16:39:06.019 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-27 16:39:06.019 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-27 16:39:06.019 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-27 16:39:06.019 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-27 16:39:06.020 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@35e74e08] under position; prior registration was null
[DEBUG] 2024-11-27 16:39:06.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5c234920] under overlay; prior registration was null
[DEBUG] 2024-11-27 16:39:06.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2eb1c615] under trim; prior registration was null
[DEBUG] 2024-11-27 16:39:06.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@370c7cc5] under cast; prior registration was null
[DEBUG] 2024-11-27 16:39:06.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61b838f2] under collate; prior registration was null
[DEBUG] 2024-11-27 16:39:06.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2a5abd3c] under extract; prior registration was null
[DEBUG] 2024-11-27 16:39:06.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-27 16:39:06.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-27 16:39:06.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7bf018dd] under ifnull; prior registration was null
[DEBUG] 2024-11-27 16:39:06.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-27 16:39:06.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-27 16:39:06.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@274fdea6] under pad; prior registration was null
[DEBUG] 2024-11-27 16:39:06.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3ffd4b12] under str; prior registration was null
[DEBUG] 2024-11-27 16:39:06.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@44faa4f2] under format; prior registration was null
[DEBUG] 2024-11-27 16:39:06.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@482ba4b1] under timestampadd; prior registration was null
[DEBUG] 2024-11-27 16:39:06.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5514579e] under timestampdiff; prior registration was null
[DEBUG] 2024-11-27 16:39:06.026 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-27 16:39:06.026 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54895681] under current_date; prior registration was null
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2dd0a0d0] under current_time; prior registration was null
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bf570c] under current_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1796b2d4] under local_date; prior registration was null
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@935d3f9] under local_time; prior registration was null
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@214b342f] under local_datetime; prior registration was null
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5db0003d] under offset_datetime; prior registration was null
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f12094d] under instant; prior registration was null
[DEBUG] 2024-11-27 16:39:06.027 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-27 16:39:06.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@12567179] under sql; prior registration was null
[DEBUG] 2024-11-27 16:39:06.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-27 16:39:06.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-27 16:39:06.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-27 16:39:06.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-27 16:39:06.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37b01ce2
[DEBUG] 2024-11-27 16:39:06.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-27 16:39:06.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-27 16:39:06.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-27 16:39:06.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-27 16:39:06.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-27 16:39:06.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-27 16:39:06.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-27 16:39:06.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@29170a47] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2a8f8555] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-27 16:39:06.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-27 16:39:06.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@402b4f81] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@35e74e08
[DEBUG] 2024-11-27 16:39:06.031 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-27 16:39:06.031 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-27 16:39:06.031 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@6cdbe5ec] under trunc; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14b8a751] under bitand; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7345f97d] under bitor; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@554566a8] under bitxor; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66020d69] under bitnot; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-27 16:39:06.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3751acd7] under format; prior registration was org.hibernate.dialect.function.FormatFunction@44faa4f2
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@935d3f9
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@214b342f
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b832551] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@150d6eaf] under chr; prior registration was null
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63124022] under sysdate; prior registration was null
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-27 16:39:06.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-27 16:39:06.036 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-27 16:39:06.036 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-27 16:39:06.036 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 16:39:06.037 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@13e00016] under rank; prior registration was null
[DEBUG] 2024-11-27 16:39:06.037 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7b3cbe6e] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 16:39:06.037 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@177ede17] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 16:39:06.037 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@17176b18] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 16:39:06.038 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@57b9389f] under listagg; prior registration was null
[DEBUG] 2024-11-27 16:39:06.041 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.041 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.041 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:39:06.041 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:39:06.041 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 16:39:06.041 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 16:39:06.042 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:39:06.043 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 16:39:06.044 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.045 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.046 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 16:39:06.046 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 16:39:06.046 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 16:39:06.049 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 16:39:06.151 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:39:06.151 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 16:39:06.227 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:39:06.229 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:39:06.231 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:39:06.231 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:39:06.375 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 16:39:06.379 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:39:06.401 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:39:06.401 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:39:06.401 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:39:06.401 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:39:06.401 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:39:06.401 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:39:06.413 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.FavoriteTeam]: private accessor [team]
[DEBUG] 2024-11-27 16:39:06.414 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:39:06.414 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:39:06.415 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:39:06.415 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:39:06.428 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 16:39:06.429 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:39:06.429 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:39:06.440 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 16:39:06.452 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:39:06.452 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:39:06.453 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:39:06.453 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:39:06.453 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:39:06.453 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:39:06.476 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 16:39:06.476 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 16:39:06.479 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:39:06.480 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.team]
[DEBUG] 2024-11-27 16:39:06.480 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.user]
[DEBUG] 2024-11-27 16:39:06.480 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.FavoriteTeam) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:39:06.480 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:39:06.480 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 16:39:06.480 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 16:39:06.480 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:39:06.480 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:39:06.480 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 16:39:06.480 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 16:39:06.480 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:39:06.480 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:39:06.480 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:39:06.531 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:39:06.532 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:39:06.539 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6cd66f6a] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:39:06.540 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:39:06.546 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  \-BasicFetch [com.radams.entity.Team.teamName]

[DEBUG] 2024-11-27 16:39:06.555 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:39:06.562 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 16:39:06.562 [main] AbstractEntityPersister -  Version select: select id from teams where id=?
[DEBUG] 2024-11-27 16:39:06.562 [main] AbstractEntityPersister -  Insert (0): insert into teams (sport_id,team_name) values (?,?)
[DEBUG] 2024-11-27 16:39:06.562 [main] AbstractEntityPersister -  Update (0): update teams set sport_id=?,team_name=? where id=?
[DEBUG] 2024-11-27 16:39:06.562 [main] AbstractEntityPersister -  Delete (0): delete from teams where id=?
[DEBUG] 2024-11-27 16:39:06.563 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:39:06.563 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.FavoriteTeam)] with identifierForTableGroup [com.radams.entity.FavoriteTeam] for NavigablePath [com.radams.entity.FavoriteTeam] 
[DEBUG] 2024-11-27 16:39:06.563 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3a5ce4b8] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team] for NavigablePath [com.radams.entity.FavoriteTeam.team] 
[DEBUG] 2024-11-27 16:39:06.563 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:39:06.563 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38848217] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team.sport] for NavigablePath [com.radams.entity.FavoriteTeam.team.sport] 
[DEBUG] 2024-11-27 16:39:06.563 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:39:06.563 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@792e8181] with identifierForTableGroup [com.radams.entity.FavoriteTeam.user] for NavigablePath [com.radams.entity.FavoriteTeam.user] 
[DEBUG] 2024-11-27 16:39:06.563 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:39:06.563 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.FavoriteTeam]
 |  +-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.team]
 |  \-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.user]

[DEBUG] 2024-11-27 16:39:06.564 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ft1 : com.radams.entity.FavoriteTeam) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.FavoriteTeam.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.FavoriteTeam.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.FavoriteTeam.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:39:06.564 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:39:06.564 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 16:39:06.564 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (team_id,user_id) values (?,?)
[DEBUG] 2024-11-27 16:39:06.564 [main] AbstractEntityPersister -  Update (0): update favorite_teams set team_id=?,user_id=? where id=?
[DEBUG] 2024-11-27 16:39:06.564 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 16:39:06.564 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:39:06.564 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 16:39:06.565 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:39:06.566 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2382b2f] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:39:06.567 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:39:06.574 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 16:39:06.574 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : teams as t1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:39:06.574 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:39:06.574 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 16:39:06.574 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 16:39:06.574 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 16:39:06.574 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 16:39:06.574 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:39:06.574 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 16:39:06.574 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:39:06.574 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@749ad37c] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:39:06.575 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:39:06.575 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b485c8b] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:39:06.575 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:39:06.575 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7bbd76b8] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:39:06.576 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 16:39:06.576 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
                  primaryTableReference : teams as t1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:39:06.576 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 16:39:06.576 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 16:39:06.576 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 16:39:06.576 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 16:39:06.576 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 16:39:06.577 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:39:06.577 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@4a7db5a] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:39:06.577 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:39:06.578 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a3a49e5] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:39:06.578 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:39:06.578 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c1b82cd] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:39:06.578 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:39:06.578 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@acd3460] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 16:39:06.579 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 16:39:06.579 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:39:06.579 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:39:06.580 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:39:06.580 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@21c99abf] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:39:06.580 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:39:06.580 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d6f6ca9] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 16:39:06.580 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 16:39:06.580 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:39:06.580 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:39:06.604 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 16:39:06.604 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 16:39:06.607 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 16:39:06.608 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 16:39:06.608 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@22429a11]
[DEBUG] 2024-11-27 16:39:06.609 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 16:39:06.609 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 16:39:06.610 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:39:06.610 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 16:39:06.611 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5627b8eb
[DEBUG] 2024-11-27 16:39:06.611 [main] SessionFactoryRegistry - Registering SessionFactory: f2483ee8-5e47-450d-868e-85fe1627e6e5 (<unnamed>)
[DEBUG] 2024-11-27 16:39:06.611 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 16:39:06.611 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 16:39:06.654 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 16:39:06.724 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:39:06.724 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team(84465246721818))] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:39:06.731 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@67593f7b] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:39:06.732 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team(84465246721818)]
 |  +-CircularFetchImpl [com.radams.entity.Team(84465246721818).sport]
 |  \-BasicFetch [com.radams.entity.Team(84465246721818).teamName]

[DEBUG] 2024-11-27 16:39:06.733 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team(84465246721818)) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team(84465246721818).sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:39:06.740 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2024-11-27 16:39:06.753 [main] results - Initializer list:
	  com.radams.entity.Team(84465246721818).sport -> EntitySelectFetchInitializer(com.radams.entity.Team(84465246721818).sport)@78461289 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1982652230)
	  com.radams.entity.Team(84465246721818) -> EntityResultInitializer(com.radams.entity.Team(84465246721818))@1866632814 (SingleTableEntityPersister(com.radams.entity.Team))

[DEBUG] 2024-11-27 16:39:06.758 [main] SQL - select t1_0.id,t1_0.sport_id,t1_0.team_name from teams t1_0
[DEBUG] 2024-11-27 16:39:06.770 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2024-11-27 16:39:06.771 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(84465246721818)): 3
[DEBUG] 2024-11-27 16:39:06.772 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team(84465246721818)#3] : 132753462
[DEBUG] 2024-11-27 16:39:06.772 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 16:39:06.772 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.radams.entity.Team(84465246721818).sport#1) : 1
[DEBUG] 2024-11-27 16:39:06.775 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:39:06.778 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1575171535 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@503486980 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1357442420 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1961537655)

[DEBUG] 2024-11-27 16:39:06.778 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-11-27 16:39:06.779 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-27 16:39:06.779 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 16:39:06.779 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:39:06.780 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:39:06.780 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:39:06.780 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:39:06.780 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 839291796
[DEBUG] 2024-11-27 16:39:06.780 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1883380232
[DEBUG] 2024-11-27 16:39:06.783 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1365013293
[DEBUG] 2024-11-27 16:39:06.784 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1365013293
[DEBUG] 2024-11-27 16:39:06.785 [main] results - Extracted JDBC value [4] - [Hawks]
[DEBUG] 2024-11-27 16:39:06.787 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-27 16:39:06.787 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1365013293
[DEBUG] 2024-11-27 16:39:06.787 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 16:39:06.788 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 16:39:06.788 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1fba3fd6
[DEBUG] 2024-11-27 16:39:06.788 [main] results - Extracted JDBC value [3] - [3]
[DEBUG] 2024-11-27 16:39:06.788 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 16:39:06.788 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:39:06.788 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:39:06.788 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:39:06.788 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:39:06.788 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@1365013293
[DEBUG] 2024-11-27 16:39:06.788 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1365013293
[DEBUG] 2024-11-27 16:39:06.788 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1365013293
[DEBUG] 2024-11-27 16:39:06.788 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1fba3fd6
[DEBUG] 2024-11-27 16:39:06.789 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 16:39:06.790 [main] entity - (EntitySelectFetchInitializer) Entity [com.radams.entity.Team(84465246721818).sport#1] : 1 has being loaded by session.internalLoad.
[DEBUG] 2024-11-27 16:39:06.790 [main] results - Extracted JDBC value [2] - [Bulls]
[DEBUG] 2024-11-27 16:39:06.790 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team(84465246721818)#3
[DEBUG] 2024-11-27 16:39:06.790 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2cdcfaa6
[DEBUG] 2024-11-27 16:39:06.791 [main] results - Extracted JDBC value [0] - [4]
[DEBUG] 2024-11-27 16:39:06.791 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(84465246721818)): 4
[DEBUG] 2024-11-27 16:39:06.791 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team(84465246721818)#4] : 1341157484
[DEBUG] 2024-11-27 16:39:06.791 [main] results - Extracted JDBC value [1] - [2]
[DEBUG] 2024-11-27 16:39:06.791 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.radams.entity.Team(84465246721818).sport#2) : 2
[DEBUG] 2024-11-27 16:39:06.791 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:39:06.791 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1768471397 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1718103695 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@757788974 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1961537655)

[DEBUG] 2024-11-27 16:39:06.791 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-11-27 16:39:06.792 [main] results - Extracted JDBC value [3] - [2]
[DEBUG] 2024-11-27 16:39:06.792 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 2
[DEBUG] 2024-11-27 16:39:06.792 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-27 16:39:06.792 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:39:06.792 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-27 16:39:06.792 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-27 16:39:06.792 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#2] : 1162128198
[DEBUG] 2024-11-27 16:39:06.792 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 542306453
[DEBUG] 2024-11-27 16:39:06.792 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1993471722
[DEBUG] 2024-11-27 16:39:06.792 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1993471722
[DEBUG] 2024-11-27 16:39:06.792 [main] results - Extracted JDBC value [4] - [Packers]
[DEBUG] 2024-11-27 16:39:06.792 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#2
[DEBUG] 2024-11-27 16:39:06.792 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1993471722
[DEBUG] 2024-11-27 16:39:06.792 [main] results - Extracted JDBC value [1] - [NFL]
[DEBUG] 2024-11-27 16:39:06.793 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-27 16:39:06.793 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55fe9c2f
[DEBUG] 2024-11-27 16:39:06.793 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2024-11-27 16:39:06.793 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 4
[DEBUG] 2024-11-27 16:39:06.793 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-27 16:39:06.793 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:39:06.793 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-27 16:39:06.793 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-27 16:39:06.793 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#2]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@1993471722
[DEBUG] 2024-11-27 16:39:06.793 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1993471722
[DEBUG] 2024-11-27 16:39:06.793 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1993471722
[DEBUG] 2024-11-27 16:39:06.793 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55fe9c2f
[DEBUG] 2024-11-27 16:39:06.793 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-27 16:39:06.793 [main] entity - (EntitySelectFetchInitializer) Entity [com.radams.entity.Team(84465246721818).sport#2] : 2 has being loaded by session.internalLoad.
[DEBUG] 2024-11-27 16:39:06.793 [main] results - Extracted JDBC value [2] - [Falcons]
[DEBUG] 2024-11-27 16:39:06.793 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team(84465246721818)#4
[DEBUG] 2024-11-27 16:39:06.793 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2cdcfaa6
[DEBUG] 2024-11-27 16:39:06.793 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:39:06.793 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(84465246721818)): 1
[DEBUG] 2024-11-27 16:39:06.793 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2cdcfaa6
[DEBUG] 2024-11-27 16:39:06.793 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:39:06.793 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(84465246721818)): 2
[DEBUG] 2024-11-27 16:39:06.793 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2cdcfaa6
[DEBUG] 2024-11-27 16:39:06.794 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:39:06.795 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:45:38.956 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-27 16:45:38.961 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-27 16:45:38.982 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-27 16:45:38.983 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-27 16:45:39.020 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-27 16:45:39.024 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-27 16:45:39.184 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-27 16:45:39.187 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-27 16:45:39.187 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-27 16:45:39.188 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:45:39.188 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:45:39.188 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-27 16:45:39.189 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-27 16:45:39.189 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-27 16:45:39.190 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:45:39.191 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-27 16:45:39.191 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-27 16:45:39.191 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:45:39.192 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-27 16:45:39.198 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-27 16:45:39.199 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-27 16:45:39.285 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:45:39.285 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:45:39.285 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:45:39.286 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:45:39.286 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:45:39.286 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:45:39.286 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:45:39.286 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:45:39.286 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:45:39.286 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:45:39.286 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:45:39.286 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:45:39.286 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:45:39.286 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:45:39.286 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:45:39.287 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:45:39.287 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:45:39.287 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-27 16:45:39.287 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:45:39.287 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:45:39.287 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:45:39.287 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:45:39.287 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:45:39.287 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:45:39.287 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:45:39.287 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:45:39.288 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:45:39.288 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:45:39.288 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:45:39.288 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:45:39.288 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:45:39.288 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:45:39.288 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:45:39.288 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:45:39.288 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:45:39.288 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:45:39.288 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:45:39.288 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:45:39.289 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:45:39.289 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:45:39.289 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:45:39.289 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:45:39.289 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:45:39.289 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:45:39.289 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:45:39.289 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:45:39.289 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:45:39.289 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-27 16:45:39.289 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:45:39.289 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:45:39.290 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:45:39.290 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:45:39.290 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:45:39.290 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-27 16:45:39.290 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:45:39.290 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:45:39.290 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:45:39.290 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:45:39.290 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-27 16:45:39.290 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-27 16:45:39.290 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-27 16:45:39.291 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:45:39.291 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:45:39.291 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:45:39.291 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:45:39.291 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:45:39.291 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:45:39.291 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:45:39.291 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:45:39.291 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:45:39.291 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:45:39.291 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:45:39.292 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:45:39.292 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:45:39.292 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-27 16:45:39.292 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-27 16:45:39.292 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:45:39.292 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:45:39.292 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:45:39.292 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-27 16:45:39.292 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-27 16:45:39.292 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:45:39.292 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:45:39.292 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:45:39.292 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:45:39.293 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:45:39.293 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:45:39.293 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:45:39.293 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:45:39.293 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:45:39.293 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:45:39.293 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:45:39.293 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:45:39.293 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:45:39.293 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:45:39.293 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:45:39.293 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-27 16:45:39.293 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:45:39.294 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:45:39.294 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:45:39.294 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:45:39.294 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:45:39.294 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:45:39.294 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:45:39.294 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:45:39.294 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:45:39.294 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:45:39.294 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:45:39.294 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:45:39.294 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:45:39.294 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:45:39.295 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:45:39.295 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:45:39.295 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:45:39.295 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:45:39.295 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:45:39.295 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:45:39.295 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 16:45:39.295 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-27 16:45:39.295 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2024-11-27 16:45:39.295 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2024-11-27 16:45:39.299 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 16:45:39.299 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-27 16:45:39.300 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1bc49bc5
[DEBUG] 2024-11-27 16:45:39.300 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-27 16:45:39.300 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-27 16:45:39.300 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-27 16:45:39.300 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-27 16:45:39.300 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@24e83d19
[DEBUG] 2024-11-27 16:45:39.300 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5c080ef3
[DEBUG] 2024-11-27 16:45:39.300 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@188cbcde
[DEBUG] 2024-11-27 16:45:39.301 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ee6291f
[INFO ] 2024-11-27 16:45:39.321 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-27 16:45:39.321 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-27 16:45:39.321 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-27 16:45:39.400 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-27 16:45:39.471 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-27 16:45:39.471 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-27 16:45:39.471 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-27 16:45:39.505 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-27 16:45:39.506 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-27 16:45:39.510 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-27 16:45:39.510 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-27 16:45:39.522 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e)
[DEBUG] 2024-11-27 16:45:39.522 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@513b52af)
[DEBUG] 2024-11-27 16:45:39.522 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a8c93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bed3315)
[DEBUG] 2024-11-27 16:45:39.523 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24)
[DEBUG] 2024-11-27 16:45:39.523 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c7350b0)
[DEBUG] 2024-11-27 16:45:39.523 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bc4ef12)
[DEBUG] 2024-11-27 16:45:39.523 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50448409) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5634a861)
[DEBUG] 2024-11-27 16:45:39.523 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b0dc227) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37ad042b)
[DEBUG] 2024-11-27 16:45:39.523 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@43bdaa1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30b975ad)
[DEBUG] 2024-11-27 16:45:39.524 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-27 16:45:39.524 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:45:39.524 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:45:39.526 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:45:39.526 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:45:39.529 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@52bf7bf6
[DEBUG] 2024-11-27 16:45:39.529 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1bc49bc5`
[DEBUG] 2024-11-27 16:45:39.533 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:45:39.533 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:45:39.533 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:45:39.535 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:45:39.535 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:45:39.535 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:45:39.536 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:45:39.536 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:45:39.536 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:45:39.536 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:45:39.536 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:45:39.536 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:45:39.537 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@411a5965]
[DEBUG] 2024-11-27 16:45:39.568 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-27 16:45:39.585 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-27 16:45:39.591 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-27 16:45:39.595 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-27 16:45:39.602 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:45:39.617 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:45:39.617 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:45:39.617 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:45:39.619 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:45:39.622 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-27 16:45:39.624 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:45:39.627 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-27 16:45:39.627 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:45:39.630 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:45:39.635 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:45:39.635 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:45:39.642 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-27 16:45:39.644 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:45:39.645 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:45:39.646 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:45:39.647 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:45:39.647 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:45:39.650 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:45:39.651 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-27 16:45:39.652 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-27 16:45:39.652 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-27 16:45:39.652 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-27 16:45:39.652 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-27 16:45:39.652 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-27 16:45:39.652 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-27 16:45:39.652 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:45:39.655 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:45:39.656 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-27 16:45:39.656 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-27 16:45:39.656 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:45:39.657 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:45:39.657 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:45:39.657 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:45:39.657 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:45:39.657 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-27 16:45:39.657 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:45:39.657 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-27 16:45:39.657 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:45:39.658 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:45:39.658 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-27 16:45:39.658 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-27 16:45:39.658 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-27 16:45:39.658 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-27 16:45:39.658 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-27 16:45:39.658 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-27 16:45:39.658 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:45:39.659 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:45:39.659 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-27 16:45:39.659 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:45:39.659 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:45:39.660 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:45:39.660 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:45:39.660 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:45:39.660 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:45:39.661 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-27 16:45:39.661 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:45:39.662 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:45:39.662 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-27 16:45:39.663 [main] EntityBinder - Bind entity com.radams.entity.Team on table teams
[DEBUG] 2024-11-27 16:45:39.663 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:45:39.667 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:45:39.667 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:45:39.667 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:45:39.667 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:45:39.667 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-27 16:45:39.667 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:45:39.667 [main] BasicValue - Skipping column re-registration: teams.id
[DEBUG] 2024-11-27 16:45:39.667 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:45:39.667 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:45:39.668 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-27 16:45:39.668 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:45:39.670 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-27 16:45:39.670 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-27 16:45:39.670 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-27 16:45:39.670 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-27 16:45:39.670 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-27 16:45:39.671 [main] BasicValue - Skipping column re-registration: teams.team_name
[DEBUG] 2024-11-27 16:45:39.671 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-27 16:45:39.671 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:45:39.671 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:45:39.672 [main] EntityBinder - Import with entity name FavoriteTeam
[DEBUG] 2024-11-27 16:45:39.672 [main] EntityBinder - Bind entity com.radams.entity.FavoriteTeam on table favorite_teams
[DEBUG] 2024-11-27 16:45:39.672 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:45:39.672 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:45:39.672 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:45:39.672 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:45:39.672 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:45:39.673 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.FavoriteTeam:id]
[DEBUG] 2024-11-27 16:45:39.673 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:45:39.673 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-27 16:45:39.673 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:45:39.673 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:45:39.673 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='team_id')
[DEBUG] 2024-11-27 16:45:39.673 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:45:39.673 [main] PropertyBinder - Building property team
[DEBUG] 2024-11-27 16:45:39.674 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-27 16:45:39.674 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:45:39.674 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-27 16:45:39.674 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:45:39.675 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:45:39.675 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-27 16:45:39.676 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:45:39.676 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-27 16:45:39.676 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:45:39.676 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-27 16:45:39.676 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:45:39.680 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-27 16:45:39.680 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-27 16:45:39.680 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2024-11-27 16:45:39.680 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-27 16:45:39.680 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:45:39.681 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-27 16:45:39.683 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-27 16:45:39.684 [main] TableBinder - Retrieving property com.radams.entity.FavoriteTeam.user
[DEBUG] 2024-11-27 16:45:39.684 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:45:39.684 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:45:39.684 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-27 16:45:39.684 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> teams
[DEBUG] 2024-11-27 16:45:39.684 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-27 16:45:39.684 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 16:45:39.685 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:45:39.686 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:45:39.686 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:45:39.695 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:45:39.695 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:45:39.695 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:45:39.947 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-27 16:45:39.982 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:45:39.982 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.TeamDaoTest,getByPropertyEqual, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4409cae6, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-27 16:45:39.987 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-27 16:45:39.993 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:45:40.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-27 16:45:40.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-27 16:45:40.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-27 16:45:40.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-27 16:45:40.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1cde374] under count; prior registration was null
[DEBUG] 2024-11-27 16:45:40.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7b5021d1] under every; prior registration was null
[DEBUG] 2024-11-27 16:45:40.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6befbb12] under any; prior registration was null
[DEBUG] 2024-11-27 16:45:40.031 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-27 16:45:40.031 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-27 16:45:40.031 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-27 16:45:40.031 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-27 16:45:40.031 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-27 16:45:40.031 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-27 16:45:40.031 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-27 16:45:40.031 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-27 16:45:40.032 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-27 16:45:40.032 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-27 16:45:40.032 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-27 16:45:40.032 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-27 16:45:40.032 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-27 16:45:40.032 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-27 16:45:40.032 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-27 16:45:40.032 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-27 16:45:40.032 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-27 16:45:40.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398] under sinh; prior registration was null
[DEBUG] 2024-11-27 16:45:40.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6] under cosh; prior registration was null
[DEBUG] 2024-11-27 16:45:40.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37b01ce2] under tanh; prior registration was null
[DEBUG] 2024-11-27 16:45:40.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a88c4f5] under pi; prior registration was null
[DEBUG] 2024-11-27 16:45:40.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1894fa9f] under log; prior registration was null
[DEBUG] 2024-11-27 16:45:40.034 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-27 16:45:40.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-27 16:45:40.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-27 16:45:40.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-27 16:45:40.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-27 16:45:40.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-27 16:45:40.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-27 16:45:40.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-27 16:45:40.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-27 16:45:40.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-27 16:45:40.036 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-27 16:45:40.036 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-27 16:45:40.036 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@63f9ddf9] under position; prior registration was null
[DEBUG] 2024-11-27 16:45:40.038 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@38087342] under overlay; prior registration was null
[DEBUG] 2024-11-27 16:45:40.038 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5d9d2119] under trim; prior registration was null
[DEBUG] 2024-11-27 16:45:40.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2a04ab05] under cast; prior registration was null
[DEBUG] 2024-11-27 16:45:40.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ebbde60] under collate; prior registration was null
[DEBUG] 2024-11-27 16:45:40.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@25c1f5ee] under extract; prior registration was null
[DEBUG] 2024-11-27 16:45:40.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-27 16:45:40.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-27 16:45:40.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3f6c2763] under ifnull; prior registration was null
[DEBUG] 2024-11-27 16:45:40.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-27 16:45:40.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-27 16:45:40.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2a484710] under pad; prior registration was null
[DEBUG] 2024-11-27 16:45:40.041 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2ad7bd26] under str; prior registration was null
[DEBUG] 2024-11-27 16:45:40.042 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1216eb3f] under format; prior registration was null
[DEBUG] 2024-11-27 16:45:40.042 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1510b9a2] under timestampadd; prior registration was null
[DEBUG] 2024-11-27 16:45:40.043 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3af236d0] under timestampdiff; prior registration was null
[DEBUG] 2024-11-27 16:45:40.043 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-27 16:45:40.043 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-27 16:45:40.043 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bf570c] under current_date; prior registration was null
[DEBUG] 2024-11-27 16:45:40.043 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1796b2d4] under current_time; prior registration was null
[DEBUG] 2024-11-27 16:45:40.043 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@935d3f9] under current_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:45:40.043 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-27 16:45:40.043 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-27 16:45:40.043 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-27 16:45:40.043 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@214b342f] under local_date; prior registration was null
[DEBUG] 2024-11-27 16:45:40.044 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5db0003d] under local_time; prior registration was null
[DEBUG] 2024-11-27 16:45:40.044 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f12094d] under local_datetime; prior registration was null
[DEBUG] 2024-11-27 16:45:40.044 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@589fb74d] under offset_datetime; prior registration was null
[DEBUG] 2024-11-27 16:45:40.044 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-27 16:45:40.044 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-27 16:45:40.044 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-27 16:45:40.044 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-27 16:45:40.044 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@200d1a3d] under instant; prior registration was null
[DEBUG] 2024-11-27 16:45:40.044 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-27 16:45:40.044 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7f42b194] under sql; prior registration was null
[DEBUG] 2024-11-27 16:45:40.044 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-27 16:45:40.045 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-27 16:45:40.045 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-27 16:45:40.045 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-27 16:45:40.045 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1894fa9f
[DEBUG] 2024-11-27 16:45:40.045 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-27 16:45:40.045 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-27 16:45:40.045 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-27 16:45:40.045 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-27 16:45:40.045 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-27 16:45:40.045 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-27 16:45:40.045 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-27 16:45:40.045 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-27 16:45:40.046 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@402b4f81] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-27 16:45:40.046 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@13ef7fa1] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-27 16:45:40.046 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-27 16:45:40.046 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-27 16:45:40.046 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-27 16:45:40.046 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-27 16:45:40.046 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-27 16:45:40.046 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-27 16:45:40.046 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-27 16:45:40.046 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-27 16:45:40.046 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-27 16:45:40.046 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-27 16:45:40.047 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-27 16:45:40.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-27 16:45:40.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-27 16:45:40.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-27 16:45:40.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-27 16:45:40.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-27 16:45:40.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-27 16:45:40.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-27 16:45:40.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-27 16:45:40.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-27 16:45:40.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-27 16:45:40.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-27 16:45:40.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:45:40.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-27 16:45:40.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-27 16:45:40.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-27 16:45:40.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-27 16:45:40.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-27 16:45:40.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-27 16:45:40.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-27 16:45:40.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-27 16:45:40.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-27 16:45:40.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-27 16:45:40.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23b1aa9] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@63f9ddf9
[DEBUG] 2024-11-27 16:45:40.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-27 16:45:40.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-27 16:45:40.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-27 16:45:40.051 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7345f97d] under trunc; prior registration was null
[DEBUG] 2024-11-27 16:45:40.051 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-27 16:45:40.051 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-27 16:45:40.051 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@554566a8] under bitand; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66020d69] under bitor; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3751acd7] under bitxor; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b832551] under bitnot; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-27 16:45:40.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-27 16:45:40.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@150d6eaf] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1216eb3f
[DEBUG] 2024-11-27 16:45:40.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-27 16:45:40.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-27 16:45:40.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-27 16:45:40.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-27 16:45:40.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5db0003d
[DEBUG] 2024-11-27 16:45:40.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@7f12094d
[DEBUG] 2024-11-27 16:45:40.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-27 16:45:40.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63124022] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a88c4f5
[DEBUG] 2024-11-27 16:45:40.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@591f6f83] under chr; prior registration was null
[DEBUG] 2024-11-27 16:45:40.054 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-27 16:45:40.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b44605c] under sysdate; prior registration was null
[DEBUG] 2024-11-27 16:45:40.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-27 16:45:40.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-27 16:45:40.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-27 16:45:40.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-27 16:45:40.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-27 16:45:40.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 16:45:40.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@177ede17] under rank; prior registration was null
[DEBUG] 2024-11-27 16:45:40.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@17176b18] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 16:45:40.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4e4395c] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 16:45:40.056 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1ab53860] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 16:45:40.056 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@41f785e3] under listagg; prior registration was null
[DEBUG] 2024-11-27 16:45:40.060 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 16:45:40.061 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 16:45:40.062 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 16:45:40.063 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:45:40.064 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 16:45:40.065 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 16:45:40.068 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 16:45:40.173 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:45:40.173 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 16:45:40.251 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:45:40.254 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:45:40.256 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:45:40.256 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:45:40.401 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 16:45:40.405 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:45:40.432 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:45:40.432 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:45:40.432 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:45:40.432 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:45:40.432 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:45:40.432 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:45:40.444 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.FavoriteTeam]: private accessor [team]
[DEBUG] 2024-11-27 16:45:40.444 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:45:40.445 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:45:40.446 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:45:40.446 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:45:40.458 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 16:45:40.459 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:45:40.459 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:45:40.467 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 16:45:40.481 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:45:40.482 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:45:40.482 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:45:40.482 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:45:40.482 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:45:40.482 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:45:40.507 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 16:45:40.507 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 16:45:40.511 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:45:40.511 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.team]
[DEBUG] 2024-11-27 16:45:40.511 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.user]
[DEBUG] 2024-11-27 16:45:40.511 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.FavoriteTeam) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:45:40.512 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:45:40.512 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 16:45:40.512 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 16:45:40.512 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:45:40.512 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:45:40.512 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 16:45:40.512 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 16:45:40.512 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:45:40.512 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:45:40.512 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:45:40.574 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:45:40.576 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:45:40.584 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@578b2dec] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:45:40.584 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:45:40.593 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  \-BasicFetch [com.radams.entity.Team.teamName]

[DEBUG] 2024-11-27 16:45:40.602 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:45:40.612 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 16:45:40.612 [main] AbstractEntityPersister -  Version select: select id from teams where id=?
[DEBUG] 2024-11-27 16:45:40.612 [main] AbstractEntityPersister -  Insert (0): insert into teams (sport_id,team_name) values (?,?)
[DEBUG] 2024-11-27 16:45:40.612 [main] AbstractEntityPersister -  Update (0): update teams set sport_id=?,team_name=? where id=?
[DEBUG] 2024-11-27 16:45:40.612 [main] AbstractEntityPersister -  Delete (0): delete from teams where id=?
[DEBUG] 2024-11-27 16:45:40.612 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:45:40.612 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.FavoriteTeam)] with identifierForTableGroup [com.radams.entity.FavoriteTeam] for NavigablePath [com.radams.entity.FavoriteTeam] 
[DEBUG] 2024-11-27 16:45:40.612 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1607d391] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team] for NavigablePath [com.radams.entity.FavoriteTeam.team] 
[DEBUG] 2024-11-27 16:45:40.612 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:45:40.613 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38826984] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team.sport] for NavigablePath [com.radams.entity.FavoriteTeam.team.sport] 
[DEBUG] 2024-11-27 16:45:40.613 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:45:40.613 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a78d380] with identifierForTableGroup [com.radams.entity.FavoriteTeam.user] for NavigablePath [com.radams.entity.FavoriteTeam.user] 
[DEBUG] 2024-11-27 16:45:40.613 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:45:40.613 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.FavoriteTeam]
 |  +-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.team]
 |  \-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.user]

[DEBUG] 2024-11-27 16:45:40.613 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ft1 : com.radams.entity.FavoriteTeam) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.FavoriteTeam.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.FavoriteTeam.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.FavoriteTeam.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:45:40.614 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:45:40.614 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 16:45:40.614 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (team_id,user_id) values (?,?)
[DEBUG] 2024-11-27 16:45:40.614 [main] AbstractEntityPersister -  Update (0): update favorite_teams set team_id=?,user_id=? where id=?
[DEBUG] 2024-11-27 16:45:40.614 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 16:45:40.614 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:45:40.614 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 16:45:40.615 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:45:40.616 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@71734463] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:45:40.617 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:45:40.624 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 16:45:40.624 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : teams as t1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:45:40.624 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:45:40.624 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 16:45:40.624 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 16:45:40.624 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 16:45:40.624 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 16:45:40.624 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:45:40.624 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 16:45:40.625 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:45:40.625 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@59b98ad1] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:45:40.625 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:45:40.625 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@591e5fd4] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:45:40.625 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:45:40.625 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37b238da] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:45:40.626 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 16:45:40.626 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
                  primaryTableReference : teams as t1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:45:40.626 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 16:45:40.626 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 16:45:40.626 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 16:45:40.626 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 16:45:40.626 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 16:45:40.628 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:45:40.628 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@158e6fc2] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:45:40.628 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:45:40.628 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@acd3460] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:45:40.628 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:45:40.628 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3ea9a091] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:45:40.629 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:45:40.629 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@16f4a3c0] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 16:45:40.630 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 16:45:40.630 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:45:40.630 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:45:40.630 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:45:40.630 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@54496c2d] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:45:40.630 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:45:40.630 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4e1a3d5a] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 16:45:40.631 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 16:45:40.631 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:45:40.631 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:45:40.654 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 16:45:40.655 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 16:45:40.657 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 16:45:40.658 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 16:45:40.658 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@275902e1]
[DEBUG] 2024-11-27 16:45:40.659 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 16:45:40.659 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 16:45:40.660 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:45:40.660 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 16:45:40.661 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3516b881
[DEBUG] 2024-11-27 16:45:40.661 [main] SessionFactoryRegistry - Registering SessionFactory: 190de431-3bba-48c0-896b-619331593e3b (<unnamed>)
[DEBUG] 2024-11-27 16:45:40.661 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 16:45:40.662 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 16:45:40.702 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 16:45:40.784 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:45:40.784 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team(84859293372449))] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:45:40.789 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@484b5a21] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:45:40.793 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@35cbeb54
[DEBUG] 2024-11-27 16:45:40.793 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.radams.entity.Team(84859293372449).teamName) 
[DEBUG] 2024-11-27 16:45:40.799 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team(84859293372449)]
 |  +-CircularFetchImpl [com.radams.entity.Team(84859293372449).sport]
 |  \-BasicFetch [com.radams.entity.Team(84859293372449).teamName]

[DEBUG] 2024-11-27 16:45:40.799 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team(84859293372449)) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team(84859293372449).sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:45:40.807 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2024-11-27 16:45:40.820 [main] results - Initializer list:
	  com.radams.entity.Team(84859293372449) -> EntityResultInitializer(com.radams.entity.Team(84859293372449))@190240935 (SingleTableEntityPersister(com.radams.entity.Team))
	  com.radams.entity.Team(84859293372449).sport -> EntitySelectFetchInitializer(com.radams.entity.Team(84859293372449).sport)@334720373 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@82565330)

[DEBUG] 2024-11-27 16:45:40.825 [main] SQL - select t1_0.id,t1_0.sport_id,t1_0.team_name from teams t1_0 where t1_0.team_name=?
[DEBUG] 2024-11-27 16:45:40.839 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2024-11-27 16:45:40.840 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(84859293372449)): 3
[DEBUG] 2024-11-27 16:45:40.841 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team(84859293372449)#3] : 1984803180
[DEBUG] 2024-11-27 16:45:40.841 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 16:45:40.841 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.radams.entity.Team(84859293372449).sport#1) : 1
[DEBUG] 2024-11-27 16:45:40.845 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:45:40.848 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1341157484 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1768471397 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1718103695 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@757788974)

[DEBUG] 2024-11-27 16:45:40.848 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-11-27 16:45:40.849 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-27 16:45:40.849 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 16:45:40.849 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:45:40.849 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:45:40.850 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:45:40.850 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:45:40.850 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 1877984746
[DEBUG] 2024-11-27 16:45:40.850 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1633286972
[DEBUG] 2024-11-27 16:45:40.854 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1939178534
[DEBUG] 2024-11-27 16:45:40.855 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1939178534
[DEBUG] 2024-11-27 16:45:40.856 [main] results - Extracted JDBC value [4] - [Hawks]
[DEBUG] 2024-11-27 16:45:40.859 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-27 16:45:40.859 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1939178534
[DEBUG] 2024-11-27 16:45:40.860 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 16:45:40.860 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 16:45:40.860 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2dd2ff87
[DEBUG] 2024-11-27 16:45:40.860 [main] results - Extracted JDBC value [3] - [3]
[DEBUG] 2024-11-27 16:45:40.860 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 16:45:40.860 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:45:40.861 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:45:40.861 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:45:40.861 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:45:40.861 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@1939178534
[DEBUG] 2024-11-27 16:45:40.861 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1939178534
[DEBUG] 2024-11-27 16:45:40.861 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1939178534
[DEBUG] 2024-11-27 16:45:40.861 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2dd2ff87
[DEBUG] 2024-11-27 16:45:40.862 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 16:45:40.863 [main] entity - (EntitySelectFetchInitializer) Entity [com.radams.entity.Team(84859293372449).sport#1] : 1 has being loaded by session.internalLoad.
[DEBUG] 2024-11-27 16:45:40.863 [main] results - Extracted JDBC value [2] - [Bulls]
[DEBUG] 2024-11-27 16:45:40.863 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team(84859293372449)#3
[DEBUG] 2024-11-27 16:45:40.863 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6dcee890
[DEBUG] 2024-11-27 16:45:40.863 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:45:40.864 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:48:06.783 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-27 16:48:06.787 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-27 16:48:06.808 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-27 16:48:06.809 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-27 16:48:06.849 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-27 16:48:06.855 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-27 16:48:07.031 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-27 16:48:07.034 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-27 16:48:07.034 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-27 16:48:07.034 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:48:07.035 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:48:07.035 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-27 16:48:07.036 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-27 16:48:07.036 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-27 16:48:07.037 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:48:07.037 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-27 16:48:07.037 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-27 16:48:07.037 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:48:07.038 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-27 16:48:07.044 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-27 16:48:07.044 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-27 16:48:07.118 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2024-11-27 16:48:07.119 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2024-11-27 16:48:07.119 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2024-11-27 16:48:07.119 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@41fe8e5f
[DEBUG] 2024-11-27 16:48:07.119 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@41fe8e5f
[DEBUG] 2024-11-27 16:48:07.119 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2024-11-27 16:48:07.119 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2024-11-27 16:48:07.119 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:48:07.119 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:48:07.119 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:48:07.120 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:48:07.120 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:48:07.120 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:48:07.120 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:48:07.120 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:48:07.120 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:48:07.120 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:48:07.120 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:48:07.120 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:48:07.120 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:48:07.121 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:48:07.121 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-27 16:48:07.121 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:48:07.121 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:48:07.121 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:48:07.121 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:48:07.121 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:48:07.121 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:48:07.121 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:48:07.121 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:48:07.121 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:48:07.122 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:48:07.122 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:48:07.122 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:48:07.122 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:48:07.122 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:48:07.122 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:48:07.122 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:48:07.122 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:48:07.122 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:48:07.122 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:48:07.122 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:48:07.123 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:48:07.123 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:48:07.123 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:48:07.123 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:48:07.123 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:48:07.123 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:48:07.123 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:48:07.123 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:48:07.123 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:48:07.123 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:48:07.123 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-27 16:48:07.123 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:48:07.124 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:48:07.124 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:48:07.124 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:48:07.124 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:48:07.124 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-27 16:48:07.124 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:48:07.124 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:48:07.124 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-27 16:48:07.124 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-27 16:48:07.124 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-27 16:48:07.124 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:48:07.125 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:48:07.125 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:48:07.125 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:48:07.125 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:48:07.125 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:48:07.125 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:48:07.125 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:48:07.125 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:48:07.125 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:48:07.125 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:48:07.125 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:48:07.126 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:48:07.126 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:48:07.126 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-27 16:48:07.126 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-27 16:48:07.126 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:48:07.126 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:48:07.126 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:48:07.126 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-27 16:48:07.126 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-27 16:48:07.126 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:48:07.126 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:48:07.126 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:48:07.127 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:48:07.127 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:48:07.127 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:48:07.127 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:48:07.127 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:48:07.127 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:48:07.127 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:48:07.127 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:48:07.127 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:48:07.127 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:48:07.127 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:48:07.127 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:48:07.128 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:48:07.128 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:48:07.128 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-27 16:48:07.128 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:48:07.128 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:48:07.128 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:48:07.128 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:48:07.128 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:48:07.128 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:48:07.128 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:48:07.128 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:48:07.129 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:48:07.129 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:48:07.129 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:48:07.129 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:48:07.129 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:48:07.129 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:48:07.129 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:48:07.129 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:48:07.129 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:48:07.129 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:48:07.133 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@10643593
[DEBUG] 2024-11-27 16:48:07.133 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@10643593
[DEBUG] 2024-11-27 16:48:07.134 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1c7f96b1
[DEBUG] 2024-11-27 16:48:07.134 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7979b8b7
[DEBUG] 2024-11-27 16:48:07.134 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a04fea7
[DEBUG] 2024-11-27 16:48:07.134 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1bc49bc5
[DEBUG] 2024-11-27 16:48:07.134 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-27 16:48:07.134 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-27 16:48:07.135 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-27 16:48:07.135 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-27 16:48:07.135 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@24e83d19
[INFO ] 2024-11-27 16:48:07.154 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-27 16:48:07.155 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-27 16:48:07.155 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-27 16:48:07.217 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-27 16:48:07.289 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-27 16:48:07.289 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-27 16:48:07.289 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-27 16:48:07.318 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-27 16:48:07.319 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-27 16:48:07.323 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-27 16:48:07.323 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-27 16:48:07.333 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29b40b3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d247660)
[DEBUG] 2024-11-27 16:48:07.333 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@656f62dc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f)
[DEBUG] 2024-11-27 16:48:07.333 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a)
[DEBUG] 2024-11-27 16:48:07.333 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@513b52af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5a8c93)
[DEBUG] 2024-11-27 16:48:07.334 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bed3315) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892)
[DEBUG] 2024-11-27 16:48:07.334 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4)
[DEBUG] 2024-11-27 16:48:07.334 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c7350b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434)
[DEBUG] 2024-11-27 16:48:07.334 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bc4ef12) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50448409)
[DEBUG] 2024-11-27 16:48:07.334 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5634a861) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b0dc227)
[DEBUG] 2024-11-27 16:48:07.335 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-27 16:48:07.335 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:48:07.335 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:48:07.337 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:48:07.337 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:48:07.340 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6b63e6ad
[DEBUG] 2024-11-27 16:48:07.340 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1c7f96b1`
[DEBUG] 2024-11-27 16:48:07.344 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:48:07.344 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:48:07.344 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:48:07.346 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:48:07.346 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:48:07.346 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:48:07.346 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:48:07.346 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:48:07.346 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:48:07.347 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:48:07.347 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:48:07.347 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:48:07.348 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bc2e16] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48e8c32a]
[DEBUG] 2024-11-27 16:48:07.376 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-27 16:48:07.393 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-27 16:48:07.399 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-27 16:48:07.403 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-27 16:48:07.409 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:48:07.423 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:48:07.423 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:48:07.424 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:48:07.425 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:48:07.428 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-27 16:48:07.430 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:48:07.433 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-27 16:48:07.433 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:48:07.435 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:48:07.440 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:48:07.440 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:48:07.446 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-27 16:48:07.448 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:48:07.448 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:48:07.448 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:48:07.449 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:48:07.449 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:48:07.451 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:48:07.452 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-27 16:48:07.452 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-27 16:48:07.453 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-27 16:48:07.453 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-27 16:48:07.453 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-27 16:48:07.453 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-27 16:48:07.453 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-27 16:48:07.453 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:48:07.456 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:48:07.457 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-27 16:48:07.457 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-27 16:48:07.457 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:48:07.458 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:48:07.458 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:48:07.458 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:48:07.458 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:48:07.458 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-27 16:48:07.458 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:48:07.458 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-27 16:48:07.458 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:48:07.459 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:48:07.459 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-27 16:48:07.459 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-27 16:48:07.459 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-27 16:48:07.459 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-27 16:48:07.459 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-27 16:48:07.459 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-27 16:48:07.459 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:48:07.459 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:48:07.460 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-27 16:48:07.460 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:48:07.460 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:48:07.460 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:48:07.461 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:48:07.461 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:48:07.461 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:48:07.461 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-27 16:48:07.461 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:48:07.462 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:48:07.462 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-27 16:48:07.462 [main] EntityBinder - Bind entity com.radams.entity.Team on table teams
[DEBUG] 2024-11-27 16:48:07.462 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:48:07.465 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:48:07.466 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:48:07.466 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:48:07.466 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:48:07.466 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-27 16:48:07.466 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:48:07.466 [main] BasicValue - Skipping column re-registration: teams.id
[DEBUG] 2024-11-27 16:48:07.466 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:48:07.466 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:48:07.466 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-27 16:48:07.467 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:48:07.468 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-27 16:48:07.469 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-27 16:48:07.469 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-27 16:48:07.469 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-27 16:48:07.469 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-27 16:48:07.469 [main] BasicValue - Skipping column re-registration: teams.team_name
[DEBUG] 2024-11-27 16:48:07.469 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-27 16:48:07.469 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:48:07.470 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:48:07.470 [main] EntityBinder - Import with entity name FavoriteTeam
[DEBUG] 2024-11-27 16:48:07.470 [main] EntityBinder - Bind entity com.radams.entity.FavoriteTeam on table favorite_teams
[DEBUG] 2024-11-27 16:48:07.470 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:48:07.471 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:48:07.471 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:48:07.471 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:48:07.471 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:48:07.471 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.FavoriteTeam:id]
[DEBUG] 2024-11-27 16:48:07.472 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:48:07.472 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-27 16:48:07.472 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:48:07.472 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:48:07.472 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='team_id')
[DEBUG] 2024-11-27 16:48:07.473 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:48:07.473 [main] PropertyBinder - Building property team
[DEBUG] 2024-11-27 16:48:07.473 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-27 16:48:07.474 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:48:07.474 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-27 16:48:07.474 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:48:07.475 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:48:07.475 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-27 16:48:07.476 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:48:07.476 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-27 16:48:07.476 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:48:07.476 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-27 16:48:07.477 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:48:07.480 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-27 16:48:07.480 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-27 16:48:07.480 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2024-11-27 16:48:07.480 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-27 16:48:07.481 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:48:07.482 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-27 16:48:07.483 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-27 16:48:07.484 [main] TableBinder - Retrieving property com.radams.entity.FavoriteTeam.user
[DEBUG] 2024-11-27 16:48:07.484 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:48:07.484 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:48:07.484 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-27 16:48:07.484 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> teams
[DEBUG] 2024-11-27 16:48:07.484 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-27 16:48:07.485 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 16:48:07.485 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:48:07.486 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:48:07.486 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:48:07.494 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:48:07.494 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:48:07.494 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:48:07.715 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-27 16:48:07.743 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:48:07.743 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.TeamDaoTest,getByPropertyLike, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25a5c8e, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-27 16:48:07.746 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-27 16:48:07.751 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:48:07.780 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-27 16:48:07.780 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-27 16:48:07.780 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-27 16:48:07.781 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-27 16:48:07.781 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@46612bfc] under count; prior registration was null
[DEBUG] 2024-11-27 16:48:07.782 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@28daf506] under every; prior registration was null
[DEBUG] 2024-11-27 16:48:07.782 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4662752a] under any; prior registration was null
[DEBUG] 2024-11-27 16:48:07.782 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-27 16:48:07.782 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-27 16:48:07.782 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-27 16:48:07.782 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-27 16:48:07.783 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-27 16:48:07.783 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-27 16:48:07.783 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-27 16:48:07.783 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-27 16:48:07.783 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-27 16:48:07.783 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-27 16:48:07.783 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-27 16:48:07.783 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-27 16:48:07.783 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-27 16:48:07.783 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-27 16:48:07.783 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-27 16:48:07.783 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-27 16:48:07.783 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-27 16:48:07.785 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17216605] under sinh; prior registration was null
[DEBUG] 2024-11-27 16:48:07.785 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10a907ec] under cosh; prior registration was null
[DEBUG] 2024-11-27 16:48:07.785 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59b492ec] under tanh; prior registration was null
[DEBUG] 2024-11-27 16:48:07.785 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55c1ced9] under pi; prior registration was null
[DEBUG] 2024-11-27 16:48:07.785 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49cc9b2a] under log; prior registration was null
[DEBUG] 2024-11-27 16:48:07.786 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-27 16:48:07.786 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-27 16:48:07.786 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-27 16:48:07.786 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-27 16:48:07.787 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-27 16:48:07.787 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-27 16:48:07.787 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-27 16:48:07.787 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-27 16:48:07.788 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-27 16:48:07.788 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-27 16:48:07.788 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-27 16:48:07.788 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-27 16:48:07.789 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7159d601] under position; prior registration was null
[DEBUG] 2024-11-27 16:48:07.791 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5d7f8467] under overlay; prior registration was null
[DEBUG] 2024-11-27 16:48:07.791 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7ddeb27f] under trim; prior registration was null
[DEBUG] 2024-11-27 16:48:07.792 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7ae590f6] under cast; prior registration was null
[DEBUG] 2024-11-27 16:48:07.792 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7ab63838] under collate; prior registration was null
[DEBUG] 2024-11-27 16:48:07.792 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2a04ab05] under extract; prior registration was null
[DEBUG] 2024-11-27 16:48:07.793 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-27 16:48:07.793 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-27 16:48:07.793 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@250967f1] under ifnull; prior registration was null
[DEBUG] 2024-11-27 16:48:07.793 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-27 16:48:07.793 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-27 16:48:07.793 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@15a8cebd] under pad; prior registration was null
[DEBUG] 2024-11-27 16:48:07.794 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@74c121d4] under str; prior registration was null
[DEBUG] 2024-11-27 16:48:07.795 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3cc3f13e] under format; prior registration was null
[DEBUG] 2024-11-27 16:48:07.795 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6793f752] under timestampadd; prior registration was null
[DEBUG] 2024-11-27 16:48:07.796 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@633ddc0c] under timestampdiff; prior registration was null
[DEBUG] 2024-11-27 16:48:07.796 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-27 16:48:07.796 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-27 16:48:07.796 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58c42c8c] under current_date; prior registration was null
[DEBUG] 2024-11-27 16:48:07.796 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3af236d0] under current_time; prior registration was null
[DEBUG] 2024-11-27 16:48:07.796 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23564dd2] under current_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:48:07.796 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-27 16:48:07.796 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-27 16:48:07.796 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-27 16:48:07.796 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54895681] under local_date; prior registration was null
[DEBUG] 2024-11-27 16:48:07.796 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2dd0a0d0] under local_time; prior registration was null
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bf570c] under local_datetime; prior registration was null
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1796b2d4] under offset_datetime; prior registration was null
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@935d3f9] under instant; prior registration was null
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@589fb74d] under sql; prior registration was null
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49cc9b2a
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-27 16:48:07.797 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-27 16:48:07.798 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-27 16:48:07.798 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-27 16:48:07.798 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-27 16:48:07.798 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-27 16:48:07.798 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-27 16:48:07.798 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@37d699a1] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-27 16:48:07.798 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7f42b194] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-27 16:48:07.798 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-27 16:48:07.798 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-27 16:48:07.798 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-27 16:48:07.798 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-27 16:48:07.798 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-27 16:48:07.799 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-27 16:48:07.799 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-27 16:48:07.799 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-27 16:48:07.799 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-27 16:48:07.799 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-27 16:48:07.799 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-27 16:48:07.799 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-27 16:48:07.799 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-27 16:48:07.799 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-27 16:48:07.799 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-27 16:48:07.799 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-27 16:48:07.799 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-27 16:48:07.799 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-27 16:48:07.799 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-27 16:48:07.799 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-27 16:48:07.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-27 16:48:07.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-27 16:48:07.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:48:07.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-27 16:48:07.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-27 16:48:07.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-27 16:48:07.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-27 16:48:07.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-27 16:48:07.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-27 16:48:07.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-27 16:48:07.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-27 16:48:07.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-27 16:48:07.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-27 16:48:07.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8eb6f9a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7159d601
[DEBUG] 2024-11-27 16:48:07.800 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-27 16:48:07.801 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-27 16:48:07.801 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-27 16:48:07.803 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@3e38c472] under trunc; prior registration was null
[DEBUG] 2024-11-27 16:48:07.803 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-27 16:48:07.803 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-27 16:48:07.803 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ee92e7d] under bitand; prior registration was null
[DEBUG] 2024-11-27 16:48:07.803 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@759a678a] under bitor; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cdbe5ec] under bitxor; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14b8a751] under bitnot; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7345f97d] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3cc3f13e
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2dd0a0d0
[DEBUG] 2024-11-27 16:48:07.804 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6bf570c
[DEBUG] 2024-11-27 16:48:07.805 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-27 16:48:07.805 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@554566a8] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55c1ced9
[DEBUG] 2024-11-27 16:48:07.805 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66020d69] under chr; prior registration was null
[DEBUG] 2024-11-27 16:48:07.805 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-27 16:48:07.805 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3751acd7] under sysdate; prior registration was null
[DEBUG] 2024-11-27 16:48:07.805 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-27 16:48:07.805 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-27 16:48:07.805 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-27 16:48:07.805 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-27 16:48:07.805 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-27 16:48:07.805 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 16:48:07.806 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4bf4680c] under rank; prior registration was null
[DEBUG] 2024-11-27 16:48:07.806 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6d6039df] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 16:48:07.806 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@611c3eae] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 16:48:07.806 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@13e00016] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 16:48:07.807 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@4e4395c] under listagg; prior registration was null
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 16:48:07.810 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.811 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 16:48:07.812 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.813 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 16:48:07.814 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 16:48:07.817 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 16:48:07.910 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:48:07.911 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 16:48:07.995 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:48:07.998 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:48:08.001 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:48:08.001 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:48:08.161 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 16:48:08.166 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:48:08.193 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:48:08.194 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:48:08.194 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:48:08.194 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:48:08.194 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:48:08.194 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:48:08.206 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.FavoriteTeam]: private accessor [team]
[DEBUG] 2024-11-27 16:48:08.206 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:48:08.206 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:48:08.208 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:48:08.208 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:48:08.221 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 16:48:08.222 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:48:08.222 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:48:08.231 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 16:48:08.245 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:48:08.246 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:48:08.246 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:48:08.246 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:48:08.247 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:48:08.247 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:48:08.273 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 16:48:08.273 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 16:48:08.277 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:48:08.277 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.team]
[DEBUG] 2024-11-27 16:48:08.277 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.user]
[DEBUG] 2024-11-27 16:48:08.277 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.FavoriteTeam) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:48:08.277 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:48:08.277 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 16:48:08.277 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 16:48:08.277 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:48:08.277 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:48:08.277 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 16:48:08.277 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 16:48:08.277 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:48:08.278 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:48:08.278 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:48:08.348 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:48:08.349 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:48:08.357 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5f166f2e] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:48:08.358 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:48:08.367 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  \-BasicFetch [com.radams.entity.Team.teamName]

[DEBUG] 2024-11-27 16:48:08.377 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:48:08.386 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 16:48:08.386 [main] AbstractEntityPersister -  Version select: select id from teams where id=?
[DEBUG] 2024-11-27 16:48:08.386 [main] AbstractEntityPersister -  Insert (0): insert into teams (sport_id,team_name) values (?,?)
[DEBUG] 2024-11-27 16:48:08.386 [main] AbstractEntityPersister -  Update (0): update teams set sport_id=?,team_name=? where id=?
[DEBUG] 2024-11-27 16:48:08.386 [main] AbstractEntityPersister -  Delete (0): delete from teams where id=?
[DEBUG] 2024-11-27 16:48:08.386 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:48:08.386 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.FavoriteTeam)] with identifierForTableGroup [com.radams.entity.FavoriteTeam] for NavigablePath [com.radams.entity.FavoriteTeam] 
[DEBUG] 2024-11-27 16:48:08.387 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2444c3df] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team] for NavigablePath [com.radams.entity.FavoriteTeam.team] 
[DEBUG] 2024-11-27 16:48:08.387 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:48:08.387 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1eb6037d] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team.sport] for NavigablePath [com.radams.entity.FavoriteTeam.team.sport] 
[DEBUG] 2024-11-27 16:48:08.387 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:48:08.387 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1607d391] with identifierForTableGroup [com.radams.entity.FavoriteTeam.user] for NavigablePath [com.radams.entity.FavoriteTeam.user] 
[DEBUG] 2024-11-27 16:48:08.387 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:48:08.387 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.FavoriteTeam]
 |  +-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.team]
 |  \-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.user]

[DEBUG] 2024-11-27 16:48:08.388 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ft1 : com.radams.entity.FavoriteTeam) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.FavoriteTeam.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.FavoriteTeam.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.FavoriteTeam.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:48:08.388 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:48:08.388 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 16:48:08.388 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (team_id,user_id) values (?,?)
[DEBUG] 2024-11-27 16:48:08.388 [main] AbstractEntityPersister -  Update (0): update favorite_teams set team_id=?,user_id=? where id=?
[DEBUG] 2024-11-27 16:48:08.388 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 16:48:08.388 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:48:08.388 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 16:48:08.389 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:48:08.390 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2b974137] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:48:08.391 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:48:08.398 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 16:48:08.398 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : teams as t1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:48:08.398 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:48:08.398 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 16:48:08.398 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 16:48:08.398 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 16:48:08.399 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 16:48:08.399 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:48:08.399 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 16:48:08.399 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:48:08.399 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@105ffc58] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:48:08.399 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:48:08.399 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@68454ed5] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:48:08.399 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:48:08.399 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b485c8b] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:48:08.400 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 16:48:08.400 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
                  primaryTableReference : teams as t1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:48:08.400 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 16:48:08.400 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 16:48:08.400 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 16:48:08.400 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 16:48:08.401 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 16:48:08.402 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:48:08.402 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@4fd3b20a] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:48:08.402 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:48:08.403 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6eaf030c] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:48:08.403 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:48:08.403 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@b2da3a5] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:48:08.403 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:48:08.403 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6dbb3d7d] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 16:48:08.404 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 16:48:08.405 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:48:08.405 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:48:08.405 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:48:08.405 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@356f20b7] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:48:08.405 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:48:08.405 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6f4adaab] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 16:48:08.405 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 16:48:08.405 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:48:08.405 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:48:08.431 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 16:48:08.431 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 16:48:08.435 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 16:48:08.435 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 16:48:08.436 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bc2e16] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@98722ef]
[DEBUG] 2024-11-27 16:48:08.438 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 16:48:08.438 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 16:48:08.439 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:48:08.439 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 16:48:08.441 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4ffa078d
[DEBUG] 2024-11-27 16:48:08.441 [main] SessionFactoryRegistry - Registering SessionFactory: 96ee667c-92c8-4661-94ae-e46f9722157e (<unnamed>)
[DEBUG] 2024-11-27 16:48:08.441 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 16:48:08.441 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 16:48:08.486 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 16:48:08.580 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:48:08.580 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team(85007076651237))] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:48:08.585 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e7e7a7e] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:48:08.589 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@46ee7013
[DEBUG] 2024-11-27 16:48:08.589 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.radams.entity.Team(85007076651237).teamName) 
[DEBUG] 2024-11-27 16:48:08.593 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team(85007076651237)]
 |  +-CircularFetchImpl [com.radams.entity.Team(85007076651237).sport]
 |  \-BasicFetch [com.radams.entity.Team(85007076651237).teamName]

[DEBUG] 2024-11-27 16:48:08.593 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team(85007076651237)) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team(85007076651237).sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:48:08.601 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2024-11-27 16:48:08.614 [main] results - Initializer list:
	  com.radams.entity.Team(85007076651237) -> EntityResultInitializer(com.radams.entity.Team(85007076651237))@979960142 (SingleTableEntityPersister(com.radams.entity.Team))
	  com.radams.entity.Team(85007076651237).sport -> EntitySelectFetchInitializer(com.radams.entity.Team(85007076651237).sport)@661941342 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1416852258)

[DEBUG] 2024-11-27 16:48:08.619 [main] SQL - select t1_0.id,t1_0.sport_id,t1_0.team_name from teams t1_0 where t1_0.team_name like ? escape ''
[DEBUG] 2024-11-27 16:48:08.633 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2024-11-27 16:48:08.633 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(85007076651237)): 3
[DEBUG] 2024-11-27 16:48:08.634 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team(85007076651237)#3] : 411594792
[DEBUG] 2024-11-27 16:48:08.635 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 16:48:08.635 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.radams.entity.Team(85007076651237).sport#1) : 1
[DEBUG] 2024-11-27 16:48:08.639 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:48:08.642 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1761057660 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@924067193 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@642086628 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@141293835)

[DEBUG] 2024-11-27 16:48:08.642 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-11-27 16:48:08.643 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-27 16:48:08.643 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 16:48:08.643 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:48:08.643 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:48:08.644 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:48:08.644 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:48:08.644 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 1939178534
[DEBUG] 2024-11-27 16:48:08.644 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 596848689
[DEBUG] 2024-11-27 16:48:08.648 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@355777990
[DEBUG] 2024-11-27 16:48:08.650 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@355777990
[DEBUG] 2024-11-27 16:48:08.651 [main] results - Extracted JDBC value [4] - [Hawks]
[DEBUG] 2024-11-27 16:48:08.654 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-27 16:48:08.654 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@355777990
[DEBUG] 2024-11-27 16:48:08.654 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 16:48:08.655 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 16:48:08.655 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bf54260
[DEBUG] 2024-11-27 16:48:08.655 [main] results - Extracted JDBC value [3] - [3]
[DEBUG] 2024-11-27 16:48:08.655 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 16:48:08.655 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:48:08.655 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:48:08.655 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:48:08.655 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:48:08.656 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@355777990
[DEBUG] 2024-11-27 16:48:08.656 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@355777990
[DEBUG] 2024-11-27 16:48:08.656 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@355777990
[DEBUG] 2024-11-27 16:48:08.656 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bf54260
[DEBUG] 2024-11-27 16:48:08.657 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 16:48:08.658 [main] entity - (EntitySelectFetchInitializer) Entity [com.radams.entity.Team(85007076651237).sport#1] : 1 has being loaded by session.internalLoad.
[DEBUG] 2024-11-27 16:48:08.658 [main] results - Extracted JDBC value [2] - [Bulls]
[DEBUG] 2024-11-27 16:48:08.658 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team(85007076651237)#3
[DEBUG] 2024-11-27 16:48:08.658 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43ee1cf7
[DEBUG] 2024-11-27 16:48:08.658 [main] results - Extracted JDBC value [0] - [4]
[DEBUG] 2024-11-27 16:48:08.658 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(85007076651237)): 4
[DEBUG] 2024-11-27 16:48:08.659 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team(85007076651237)#4] : 613764738
[DEBUG] 2024-11-27 16:48:08.659 [main] results - Extracted JDBC value [1] - [2]
[DEBUG] 2024-11-27 16:48:08.659 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.radams.entity.Team(85007076651237).sport#2) : 2
[DEBUG] 2024-11-27 16:48:08.659 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:48:08.659 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1528782796 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1244266030 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@2031311416 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@141293835)

[DEBUG] 2024-11-27 16:48:08.659 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-11-27 16:48:08.660 [main] results - Extracted JDBC value [3] - [2]
[DEBUG] 2024-11-27 16:48:08.660 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 2
[DEBUG] 2024-11-27 16:48:08.660 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-27 16:48:08.660 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:48:08.660 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-27 16:48:08.660 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-27 16:48:08.660 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#2] : 396875464
[DEBUG] 2024-11-27 16:48:08.660 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 1328225951
[DEBUG] 2024-11-27 16:48:08.660 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@2130299045
[DEBUG] 2024-11-27 16:48:08.660 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@2130299045
[DEBUG] 2024-11-27 16:48:08.660 [main] results - Extracted JDBC value [4] - [Packers]
[DEBUG] 2024-11-27 16:48:08.661 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#2
[DEBUG] 2024-11-27 16:48:08.661 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@2130299045
[DEBUG] 2024-11-27 16:48:08.661 [main] results - Extracted JDBC value [1] - [NFL]
[DEBUG] 2024-11-27 16:48:08.661 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-27 16:48:08.661 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c6244e7
[DEBUG] 2024-11-27 16:48:08.661 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2024-11-27 16:48:08.661 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 4
[DEBUG] 2024-11-27 16:48:08.661 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-27 16:48:08.661 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:48:08.661 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-27 16:48:08.661 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-27 16:48:08.661 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#2]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@2130299045
[DEBUG] 2024-11-27 16:48:08.661 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@2130299045
[DEBUG] 2024-11-27 16:48:08.661 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@2130299045
[DEBUG] 2024-11-27 16:48:08.661 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c6244e7
[DEBUG] 2024-11-27 16:48:08.661 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-27 16:48:08.661 [main] entity - (EntitySelectFetchInitializer) Entity [com.radams.entity.Team(85007076651237).sport#2] : 2 has being loaded by session.internalLoad.
[DEBUG] 2024-11-27 16:48:08.661 [main] results - Extracted JDBC value [2] - [Falcons]
[DEBUG] 2024-11-27 16:48:08.662 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team(85007076651237)#4
[DEBUG] 2024-11-27 16:48:08.662 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43ee1cf7
[DEBUG] 2024-11-27 16:48:08.662 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:48:08.662 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(85007076651237)): 1
[DEBUG] 2024-11-27 16:48:08.662 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43ee1cf7
[DEBUG] 2024-11-27 16:48:08.662 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:48:08.662 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(85007076651237)): 2
[DEBUG] 2024-11-27 16:48:08.662 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43ee1cf7
[DEBUG] 2024-11-27 16:48:08.662 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:48:08.663 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:49:57.727 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-27 16:49:57.732 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-27 16:49:57.754 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-27 16:49:57.756 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-27 16:49:57.801 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-27 16:49:57.807 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-27 16:49:57.969 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-27 16:49:57.972 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-27 16:49:57.972 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-27 16:49:57.973 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:49:57.973 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:49:57.973 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-27 16:49:57.974 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-27 16:49:57.974 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-27 16:49:57.976 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:49:57.976 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-27 16:49:57.976 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-27 16:49:57.977 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:49:57.977 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-27 16:49:57.984 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-27 16:49:57.985 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-27 16:49:58.074 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2024-11-27 16:49:58.074 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2024-11-27 16:49:58.074 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2024-11-27 16:49:58.074 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@41fe8e5f
[DEBUG] 2024-11-27 16:49:58.074 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@41fe8e5f
[DEBUG] 2024-11-27 16:49:58.074 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2024-11-27 16:49:58.074 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2024-11-27 16:49:58.074 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:49:58.074 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:49:58.075 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:49:58.075 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:49:58.075 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:49:58.075 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:49:58.075 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:49:58.075 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:49:58.075 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:49:58.075 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:49:58.075 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:49:58.075 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:49:58.075 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:49:58.076 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:49:58.076 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-27 16:49:58.076 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:49:58.076 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:49:58.076 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:49:58.076 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:49:58.076 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:49:58.076 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:49:58.076 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:49:58.076 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:49:58.076 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:49:58.076 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:49:58.077 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:49:58.077 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:49:58.077 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:49:58.077 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:49:58.077 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:49:58.077 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:49:58.077 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:49:58.077 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:49:58.077 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:49:58.077 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:49:58.077 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:49:58.078 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:49:58.078 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:49:58.078 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:49:58.078 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:49:58.078 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:49:58.078 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:49:58.078 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:49:58.078 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:49:58.078 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:49:58.078 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-27 16:49:58.078 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:49:58.078 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:49:58.079 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:49:58.079 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:49:58.079 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:49:58.079 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-27 16:49:58.079 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:49:58.079 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:49:58.079 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-27 16:49:58.079 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-27 16:49:58.079 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-27 16:49:58.079 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:49:58.079 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:49:58.080 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:49:58.080 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:49:58.080 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:49:58.080 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:49:58.080 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:49:58.080 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:49:58.080 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:49:58.080 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:49:58.080 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:49:58.080 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:49:58.080 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:49:58.081 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:49:58.081 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-27 16:49:58.081 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-27 16:49:58.081 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:49:58.081 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:49:58.081 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:49:58.081 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-27 16:49:58.081 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-27 16:49:58.081 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:49:58.081 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:49:58.081 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:49:58.082 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:49:58.082 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:49:58.082 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:49:58.082 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:49:58.082 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:49:58.082 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:49:58.082 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:49:58.082 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:49:58.082 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:49:58.082 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:49:58.083 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:49:58.083 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:49:58.083 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:49:58.083 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:49:58.083 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-27 16:49:58.083 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:49:58.083 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:49:58.083 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:49:58.083 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:49:58.083 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:49:58.083 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:49:58.083 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:49:58.084 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:49:58.084 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:49:58.084 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:49:58.084 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:49:58.084 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:49:58.084 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:49:58.084 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:49:58.084 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:49:58.084 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:49:58.084 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:49:58.084 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:49:58.088 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@10643593
[DEBUG] 2024-11-27 16:49:58.088 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@10643593
[DEBUG] 2024-11-27 16:49:58.089 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1c7f96b1
[DEBUG] 2024-11-27 16:49:58.090 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7979b8b7
[DEBUG] 2024-11-27 16:49:58.090 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a04fea7
[DEBUG] 2024-11-27 16:49:58.090 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1bc49bc5
[DEBUG] 2024-11-27 16:49:58.090 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-27 16:49:58.090 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-27 16:49:58.090 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-27 16:49:58.090 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-27 16:49:58.090 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@24e83d19
[INFO ] 2024-11-27 16:49:58.112 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-27 16:49:58.112 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-27 16:49:58.112 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-27 16:49:58.188 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-27 16:49:58.258 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-27 16:49:58.258 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-27 16:49:58.259 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-27 16:49:58.292 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-27 16:49:58.292 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-27 16:49:58.297 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-27 16:49:58.297 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-27 16:49:58.308 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29b40b3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d247660)
[DEBUG] 2024-11-27 16:49:58.308 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@656f62dc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f)
[DEBUG] 2024-11-27 16:49:58.309 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a)
[DEBUG] 2024-11-27 16:49:58.309 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@513b52af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5a8c93)
[DEBUG] 2024-11-27 16:49:58.309 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bed3315) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892)
[DEBUG] 2024-11-27 16:49:58.309 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4)
[DEBUG] 2024-11-27 16:49:58.309 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c7350b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434)
[DEBUG] 2024-11-27 16:49:58.309 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bc4ef12) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50448409)
[DEBUG] 2024-11-27 16:49:58.309 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5634a861) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b0dc227)
[DEBUG] 2024-11-27 16:49:58.311 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-27 16:49:58.311 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:49:58.311 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:49:58.313 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:49:58.313 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:49:58.315 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6b63e6ad
[DEBUG] 2024-11-27 16:49:58.315 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1c7f96b1`
[DEBUG] 2024-11-27 16:49:58.320 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:49:58.320 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:49:58.320 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:49:58.322 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:49:58.322 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:49:58.322 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:49:58.322 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:49:58.322 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:49:58.322 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:49:58.323 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:49:58.323 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:49:58.323 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:49:58.324 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bc2e16] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48e8c32a]
[DEBUG] 2024-11-27 16:49:58.356 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-27 16:49:58.376 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-27 16:49:58.382 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-27 16:49:58.387 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-27 16:49:58.394 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:49:58.409 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:49:58.409 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:49:58.409 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:49:58.411 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:49:58.413 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-27 16:49:58.417 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:49:58.420 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-27 16:49:58.420 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:49:58.423 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:49:58.428 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:49:58.429 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:49:58.436 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-27 16:49:58.438 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:49:58.439 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:49:58.439 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:49:58.440 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:49:58.440 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:49:58.442 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:49:58.444 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-27 16:49:58.445 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-27 16:49:58.445 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-27 16:49:58.445 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-27 16:49:58.445 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-27 16:49:58.445 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-27 16:49:58.445 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-27 16:49:58.446 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:49:58.450 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:49:58.450 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-27 16:49:58.451 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-27 16:49:58.451 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:49:58.452 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:49:58.452 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:49:58.452 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:49:58.452 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:49:58.452 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-27 16:49:58.452 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:49:58.452 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-27 16:49:58.452 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:49:58.452 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:49:58.453 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-27 16:49:58.453 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-27 16:49:58.453 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-27 16:49:58.453 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-27 16:49:58.453 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-27 16:49:58.453 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-27 16:49:58.453 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:49:58.453 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:49:58.453 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-27 16:49:58.454 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:49:58.454 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:49:58.454 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:49:58.454 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:49:58.454 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:49:58.454 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:49:58.454 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-27 16:49:58.455 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:49:58.456 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:49:58.456 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-27 16:49:58.456 [main] EntityBinder - Bind entity com.radams.entity.Team on table teams
[DEBUG] 2024-11-27 16:49:58.457 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:49:58.460 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:49:58.460 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:49:58.460 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:49:58.460 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:49:58.460 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-27 16:49:58.460 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:49:58.460 [main] BasicValue - Skipping column re-registration: teams.id
[DEBUG] 2024-11-27 16:49:58.460 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:49:58.461 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:49:58.461 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-27 16:49:58.461 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:49:58.463 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-27 16:49:58.464 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-27 16:49:58.464 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-27 16:49:58.464 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-27 16:49:58.464 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-27 16:49:58.464 [main] BasicValue - Skipping column re-registration: teams.team_name
[DEBUG] 2024-11-27 16:49:58.464 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-27 16:49:58.464 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:49:58.465 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:49:58.465 [main] EntityBinder - Import with entity name FavoriteTeam
[DEBUG] 2024-11-27 16:49:58.465 [main] EntityBinder - Bind entity com.radams.entity.FavoriteTeam on table favorite_teams
[DEBUG] 2024-11-27 16:49:58.465 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:49:58.466 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:49:58.466 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:49:58.466 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:49:58.466 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:49:58.466 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.FavoriteTeam:id]
[DEBUG] 2024-11-27 16:49:58.466 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:49:58.466 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-27 16:49:58.466 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:49:58.466 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:49:58.467 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='team_id')
[DEBUG] 2024-11-27 16:49:58.467 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:49:58.467 [main] PropertyBinder - Building property team
[DEBUG] 2024-11-27 16:49:58.467 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-27 16:49:58.467 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:49:58.468 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-27 16:49:58.468 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:49:58.469 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:49:58.469 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-27 16:49:58.470 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:49:58.470 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-27 16:49:58.470 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:49:58.470 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-27 16:49:58.470 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:49:58.474 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-27 16:49:58.474 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-27 16:49:58.475 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2024-11-27 16:49:58.475 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-27 16:49:58.475 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:49:58.476 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-27 16:49:58.478 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-27 16:49:58.479 [main] TableBinder - Retrieving property com.radams.entity.FavoriteTeam.user
[DEBUG] 2024-11-27 16:49:58.479 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:49:58.479 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:49:58.479 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-27 16:49:58.479 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> teams
[DEBUG] 2024-11-27 16:49:58.480 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-27 16:49:58.480 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 16:49:58.480 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:49:58.481 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:49:58.481 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:49:58.490 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:49:58.490 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:49:58.490 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:49:58.745 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-27 16:49:58.778 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:49:58.778 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.TeamDaoTest,getByPropertyLike, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25a5c8e, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-27 16:49:58.782 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-27 16:49:58.788 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:49:58.822 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-27 16:49:58.822 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-27 16:49:58.823 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-27 16:49:58.824 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-27 16:49:58.825 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@25699aa7] under count; prior registration was null
[DEBUG] 2024-11-27 16:49:58.825 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@693f2213] under every; prior registration was null
[DEBUG] 2024-11-27 16:49:58.825 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@514377fc] under any; prior registration was null
[DEBUG] 2024-11-27 16:49:58.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-27 16:49:58.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-27 16:49:58.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-27 16:49:58.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-27 16:49:58.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-27 16:49:58.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-27 16:49:58.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-27 16:49:58.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-27 16:49:58.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-27 16:49:58.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-27 16:49:58.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-27 16:49:58.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-27 16:49:58.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-27 16:49:58.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-27 16:49:58.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-27 16:49:58.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-27 16:49:58.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-27 16:49:58.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59b492ec] under sinh; prior registration was null
[DEBUG] 2024-11-27 16:49:58.829 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55c1ced9] under cosh; prior registration was null
[DEBUG] 2024-11-27 16:49:58.829 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49cc9b2a] under tanh; prior registration was null
[DEBUG] 2024-11-27 16:49:58.829 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398] under pi; prior registration was null
[DEBUG] 2024-11-27 16:49:58.829 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6] under log; prior registration was null
[DEBUG] 2024-11-27 16:49:58.829 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-27 16:49:58.830 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-27 16:49:58.830 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-27 16:49:58.830 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-27 16:49:58.830 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-27 16:49:58.830 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-27 16:49:58.830 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-27 16:49:58.830 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-27 16:49:58.830 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-27 16:49:58.830 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-27 16:49:58.830 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-27 16:49:58.831 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-27 16:49:58.831 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@33d230ce] under position; prior registration was null
[DEBUG] 2024-11-27 16:49:58.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7caf1e5] under overlay; prior registration was null
[DEBUG] 2024-11-27 16:49:58.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@681de87f] under trim; prior registration was null
[DEBUG] 2024-11-27 16:49:58.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4e974b9e] under cast; prior registration was null
[DEBUG] 2024-11-27 16:49:58.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@370c7cc5] under collate; prior registration was null
[DEBUG] 2024-11-27 16:49:58.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@a056b26] under extract; prior registration was null
[DEBUG] 2024-11-27 16:49:58.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-27 16:49:58.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-27 16:49:58.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4bce62b] under ifnull; prior registration was null
[DEBUG] 2024-11-27 16:49:58.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-27 16:49:58.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-27 16:49:58.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5c82031b] under pad; prior registration was null
[DEBUG] 2024-11-27 16:49:58.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@661e1399] under str; prior registration was null
[DEBUG] 2024-11-27 16:49:58.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@53d30d23] under format; prior registration was null
[DEBUG] 2024-11-27 16:49:58.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@59e7564b] under timestampadd; prior registration was null
[DEBUG] 2024-11-27 16:49:58.838 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1471b98d] under timestampdiff; prior registration was null
[DEBUG] 2024-11-27 16:49:58.838 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-27 16:49:58.838 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-27 16:49:58.838 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23564dd2] under current_date; prior registration was null
[DEBUG] 2024-11-27 16:49:58.838 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54895681] under current_time; prior registration was null
[DEBUG] 2024-11-27 16:49:58.838 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2dd0a0d0] under current_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:49:58.838 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-27 16:49:58.838 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-27 16:49:58.838 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-27 16:49:58.838 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bf570c] under local_date; prior registration was null
[DEBUG] 2024-11-27 16:49:58.838 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1796b2d4] under local_time; prior registration was null
[DEBUG] 2024-11-27 16:49:58.838 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@935d3f9] under local_datetime; prior registration was null
[DEBUG] 2024-11-27 16:49:58.839 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@214b342f] under offset_datetime; prior registration was null
[DEBUG] 2024-11-27 16:49:58.839 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-27 16:49:58.839 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-27 16:49:58.839 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-27 16:49:58.839 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-27 16:49:58.839 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5db0003d] under instant; prior registration was null
[DEBUG] 2024-11-27 16:49:58.839 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-27 16:49:58.839 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7de147e9] under sql; prior registration was null
[DEBUG] 2024-11-27 16:49:58.839 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-27 16:49:58.839 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-27 16:49:58.839 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-27 16:49:58.839 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-27 16:49:58.839 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6
[DEBUG] 2024-11-27 16:49:58.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-27 16:49:58.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-27 16:49:58.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-27 16:49:58.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-27 16:49:58.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-27 16:49:58.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-27 16:49:58.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-27 16:49:58.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-27 16:49:58.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@8eb6f9a] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-27 16:49:58.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@29170a47] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-27 16:49:58.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-27 16:49:58.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-27 16:49:58.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a8f8555] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@33d230ce
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-27 16:49:58.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-27 16:49:58.845 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@759a678a] under trunc; prior registration was null
[DEBUG] 2024-11-27 16:49:58.845 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-27 16:49:58.845 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-27 16:49:58.845 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cdbe5ec] under bitand; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14b8a751] under bitor; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7345f97d] under bitxor; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@554566a8] under bitnot; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@66020d69] under format; prior registration was org.hibernate.dialect.function.FormatFunction@53d30d23
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-27 16:49:58.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-27 16:49:58.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-27 16:49:58.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1796b2d4
[DEBUG] 2024-11-27 16:49:58.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@935d3f9
[DEBUG] 2024-11-27 16:49:58.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-27 16:49:58.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3751acd7] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398
[DEBUG] 2024-11-27 16:49:58.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b832551] under chr; prior registration was null
[DEBUG] 2024-11-27 16:49:58.847 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-27 16:49:58.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@150d6eaf] under sysdate; prior registration was null
[DEBUG] 2024-11-27 16:49:58.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-27 16:49:58.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-27 16:49:58.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-27 16:49:58.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-27 16:49:58.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-27 16:49:58.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 16:49:58.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@611c3eae] under rank; prior registration was null
[DEBUG] 2024-11-27 16:49:58.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@13e00016] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 16:49:58.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7b3cbe6e] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 16:49:58.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@177ede17] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 16:49:58.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7b5ac347] under listagg; prior registration was null
[DEBUG] 2024-11-27 16:49:58.853 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.853 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.853 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:49:58.853 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:49:58.853 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 16:49:58.853 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 16:49:58.853 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.853 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.853 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:49:58.854 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 16:49:58.854 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 16:49:58.854 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:49:58.854 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 16:49:58.854 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 16:49:58.854 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 16:49:58.854 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 16:49:58.854 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 16:49:58.854 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 16:49:58.854 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.854 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 16:49:58.854 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:49:58.854 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 16:49:58.854 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 16:49:58.854 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 16:49:58.855 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:49:58.856 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 16:49:58.857 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:49:58.858 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 16:49:58.858 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 16:49:58.858 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 16:49:58.858 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 16:49:58.858 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 16:49:58.858 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 16:49:58.858 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 16:49:58.858 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 16:49:58.858 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.858 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.858 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 16:49:58.858 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 16:49:58.858 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 16:49:58.861 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 16:49:58.961 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:49:58.962 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 16:49:59.051 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:49:59.054 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:49:59.056 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:49:59.056 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:49:59.188 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 16:49:59.192 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:49:59.214 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:49:59.215 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:49:59.215 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:49:59.215 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:49:59.215 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:49:59.215 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:49:59.228 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.FavoriteTeam]: private accessor [team]
[DEBUG] 2024-11-27 16:49:59.228 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:49:59.229 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:49:59.230 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:49:59.230 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:49:59.242 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 16:49:59.243 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:49:59.243 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:49:59.251 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 16:49:59.262 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:49:59.262 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:49:59.263 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:49:59.263 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:49:59.263 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:49:59.263 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:49:59.285 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 16:49:59.285 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 16:49:59.288 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:49:59.288 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.team]
[DEBUG] 2024-11-27 16:49:59.288 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.user]
[DEBUG] 2024-11-27 16:49:59.288 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.FavoriteTeam) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:49:59.288 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:49:59.288 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 16:49:59.288 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 16:49:59.288 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:49:59.289 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:49:59.289 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 16:49:59.289 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 16:49:59.289 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:49:59.289 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:49:59.289 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:49:59.342 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:49:59.343 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:49:59.351 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4fafd27e] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:49:59.352 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:49:59.359 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  \-BasicFetch [com.radams.entity.Team.teamName]

[DEBUG] 2024-11-27 16:49:59.367 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:49:59.373 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 16:49:59.373 [main] AbstractEntityPersister -  Version select: select id from teams where id=?
[DEBUG] 2024-11-27 16:49:59.374 [main] AbstractEntityPersister -  Insert (0): insert into teams (sport_id,team_name) values (?,?)
[DEBUG] 2024-11-27 16:49:59.374 [main] AbstractEntityPersister -  Update (0): update teams set sport_id=?,team_name=? where id=?
[DEBUG] 2024-11-27 16:49:59.374 [main] AbstractEntityPersister -  Delete (0): delete from teams where id=?
[DEBUG] 2024-11-27 16:49:59.374 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:49:59.374 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.FavoriteTeam)] with identifierForTableGroup [com.radams.entity.FavoriteTeam] for NavigablePath [com.radams.entity.FavoriteTeam] 
[DEBUG] 2024-11-27 16:49:59.374 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@335b3d6] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team] for NavigablePath [com.radams.entity.FavoriteTeam.team] 
[DEBUG] 2024-11-27 16:49:59.374 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:49:59.374 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3a5ce4b8] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team.sport] for NavigablePath [com.radams.entity.FavoriteTeam.team.sport] 
[DEBUG] 2024-11-27 16:49:59.374 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:49:59.374 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65262308] with identifierForTableGroup [com.radams.entity.FavoriteTeam.user] for NavigablePath [com.radams.entity.FavoriteTeam.user] 
[DEBUG] 2024-11-27 16:49:59.374 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:49:59.374 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.FavoriteTeam]
 |  +-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.team]
 |  \-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.user]

[DEBUG] 2024-11-27 16:49:59.375 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ft1 : com.radams.entity.FavoriteTeam) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.FavoriteTeam.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.FavoriteTeam.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.FavoriteTeam.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:49:59.375 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:49:59.375 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 16:49:59.375 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (team_id,user_id) values (?,?)
[DEBUG] 2024-11-27 16:49:59.375 [main] AbstractEntityPersister -  Update (0): update favorite_teams set team_id=?,user_id=? where id=?
[DEBUG] 2024-11-27 16:49:59.375 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 16:49:59.375 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:49:59.375 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 16:49:59.376 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:49:59.377 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5d22604e] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:49:59.378 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:49:59.384 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 16:49:59.384 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : teams as t1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:49:59.384 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:49:59.384 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 16:49:59.384 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 16:49:59.384 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 16:49:59.385 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 16:49:59.385 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:49:59.385 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 16:49:59.385 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:49:59.385 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6d2db15b] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:49:59.385 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:49:59.385 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@749ad37c] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:49:59.385 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:49:59.386 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@591e5fd4] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:49:59.386 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 16:49:59.386 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
                  primaryTableReference : teams as t1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:49:59.387 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 16:49:59.387 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 16:49:59.387 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 16:49:59.387 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 16:49:59.387 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 16:49:59.387 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:49:59.387 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@398f0516] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:49:59.387 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:49:59.388 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6dbb3d7d] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:49:59.388 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:49:59.388 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a3a49e5] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:49:59.388 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:49:59.388 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c1b82cd] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 16:49:59.389 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 16:49:59.390 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:49:59.390 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:49:59.390 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:49:59.390 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@69de72ec] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:49:59.390 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:49:59.390 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@21c99abf] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 16:49:59.390 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 16:49:59.390 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:49:59.390 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:49:59.410 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 16:49:59.411 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 16:49:59.413 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 16:49:59.413 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 16:49:59.414 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bc2e16] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@fd69983]
[DEBUG] 2024-11-27 16:49:59.415 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 16:49:59.415 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 16:49:59.415 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:49:59.415 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 16:49:59.417 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@42238078
[DEBUG] 2024-11-27 16:49:59.417 [main] SessionFactoryRegistry - Registering SessionFactory: 8a94bde8-9fb5-4201-b6f0-95e9afa8fa50 (<unnamed>)
[DEBUG] 2024-11-27 16:49:59.417 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 16:49:59.417 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 16:49:59.458 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 16:49:59.544 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:49:59.544 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team(85118044341250))] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:49:59.549 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1c610f] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:49:59.552 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3275a47f
[DEBUG] 2024-11-27 16:49:59.552 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.radams.entity.Team(85118044341250).teamName) 
[DEBUG] 2024-11-27 16:49:59.556 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team(85118044341250)]
 |  +-CircularFetchImpl [com.radams.entity.Team(85118044341250).sport]
 |  \-BasicFetch [com.radams.entity.Team(85118044341250).teamName]

[DEBUG] 2024-11-27 16:49:59.556 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team(85118044341250)) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team(85118044341250).sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:49:59.564 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2024-11-27 16:49:59.575 [main] results - Initializer list:
	  com.radams.entity.Team(85118044341250) -> EntityResultInitializer(com.radams.entity.Team(85118044341250))@1413136929 (SingleTableEntityPersister(com.radams.entity.Team))
	  com.radams.entity.Team(85118044341250).sport -> EntitySelectFetchInitializer(com.radams.entity.Team(85118044341250).sport)@577828237 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1931723660)

[DEBUG] 2024-11-27 16:49:59.579 [main] SQL - select t1_0.id,t1_0.sport_id,t1_0.team_name from teams t1_0 where t1_0.team_name like ? escape ''
[DEBUG] 2024-11-27 16:49:59.592 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2024-11-27 16:49:59.592 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(85118044341250)): 3
[DEBUG] 2024-11-27 16:49:59.593 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team(85118044341250)#3] : 738867238
[DEBUG] 2024-11-27 16:49:59.593 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 16:49:59.593 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.radams.entity.Team(85118044341250).sport#1) : 1
[DEBUG] 2024-11-27 16:49:59.596 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:49:59.598 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@642086628 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@141293835 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1544793857 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1253733911)

[DEBUG] 2024-11-27 16:49:59.599 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-11-27 16:49:59.600 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-27 16:49:59.600 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 16:49:59.600 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:49:59.600 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:49:59.601 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:49:59.601 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:49:59.601 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 1292599253
[DEBUG] 2024-11-27 16:49:59.601 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 484573851
[DEBUG] 2024-11-27 16:49:59.604 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1904923558
[DEBUG] 2024-11-27 16:49:59.605 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1904923558
[DEBUG] 2024-11-27 16:49:59.606 [main] results - Extracted JDBC value [4] - [Hawks]
[DEBUG] 2024-11-27 16:49:59.608 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-27 16:49:59.608 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1904923558
[DEBUG] 2024-11-27 16:49:59.609 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 16:49:59.609 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-27 16:49:59.609 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72168258
[DEBUG] 2024-11-27 16:49:59.609 [main] results - Extracted JDBC value [3] - [3]
[DEBUG] 2024-11-27 16:49:59.609 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 16:49:59.609 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-27 16:49:59.610 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:49:59.610 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:49:59.610 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2024-11-27 16:49:59.610 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@1904923558
[DEBUG] 2024-11-27 16:49:59.610 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1904923558
[DEBUG] 2024-11-27 16:49:59.610 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@1904923558
[DEBUG] 2024-11-27 16:49:59.610 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72168258
[DEBUG] 2024-11-27 16:49:59.611 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 16:49:59.612 [main] entity - (EntitySelectFetchInitializer) Entity [com.radams.entity.Team(85118044341250).sport#1] : 1 has being loaded by session.internalLoad.
[DEBUG] 2024-11-27 16:49:59.612 [main] results - Extracted JDBC value [2] - [Bulls]
[DEBUG] 2024-11-27 16:49:59.612 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team(85118044341250)#3
[DEBUG] 2024-11-27 16:49:59.612 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b1f5fcc
[DEBUG] 2024-11-27 16:49:59.612 [main] results - Extracted JDBC value [0] - [4]
[DEBUG] 2024-11-27 16:49:59.612 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(85118044341250)): 4
[DEBUG] 2024-11-27 16:49:59.612 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Team(85118044341250)#4] : 1244266030
[DEBUG] 2024-11-27 16:49:59.612 [main] results - Extracted JDBC value [1] - [2]
[DEBUG] 2024-11-27 16:49:59.612 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (com.radams.entity.Team(85118044341250).sport#2) : 2
[DEBUG] 2024-11-27 16:49:59.613 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:49:59.613 [main] results - Initializer list:
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2031311416 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@2013063878 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1446787786 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1253733911)

[DEBUG] 2024-11-27 16:49:59.613 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name from sports s1_0 left join teams t1_0 on s1_0.id=t1_0.sport_id where s1_0.id=?
[DEBUG] 2024-11-27 16:49:59.614 [main] results - Extracted JDBC value [3] - [2]
[DEBUG] 2024-11-27 16:49:59.614 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 2
[DEBUG] 2024-11-27 16:49:59.614 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-27 16:49:59.614 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:49:59.614 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-27 16:49:59.614 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-27 16:49:59.614 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#2] : 2130299045
[DEBUG] 2024-11-27 16:49:59.614 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 207766759
[DEBUG] 2024-11-27 16:49:59.614 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@635097653
[DEBUG] 2024-11-27 16:49:59.614 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@635097653
[DEBUG] 2024-11-27 16:49:59.614 [main] results - Extracted JDBC value [4] - [Packers]
[DEBUG] 2024-11-27 16:49:59.614 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#2
[DEBUG] 2024-11-27 16:49:59.614 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@635097653
[DEBUG] 2024-11-27 16:49:59.614 [main] results - Extracted JDBC value [1] - [NFL]
[DEBUG] 2024-11-27 16:49:59.614 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-27 16:49:59.615 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3292eff7
[DEBUG] 2024-11-27 16:49:59.615 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2024-11-27 16:49:59.615 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 4
[DEBUG] 2024-11-27 16:49:59.615 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-27 16:49:59.615 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:49:59.615 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-27 16:49:59.615 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-27 16:49:59.615 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#2]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@635097653
[DEBUG] 2024-11-27 16:49:59.615 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@635097653
[DEBUG] 2024-11-27 16:49:59.615 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@635097653
[DEBUG] 2024-11-27 16:49:59.615 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3292eff7
[DEBUG] 2024-11-27 16:49:59.615 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-27 16:49:59.615 [main] entity - (EntitySelectFetchInitializer) Entity [com.radams.entity.Team(85118044341250).sport#2] : 2 has being loaded by session.internalLoad.
[DEBUG] 2024-11-27 16:49:59.615 [main] results - Extracted JDBC value [2] - [Falcons]
[DEBUG] 2024-11-27 16:49:59.615 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Team(85118044341250)#4
[DEBUG] 2024-11-27 16:49:59.615 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b1f5fcc
[DEBUG] 2024-11-27 16:49:59.615 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:49:59.615 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(85118044341250)): 1
[DEBUG] 2024-11-27 16:49:59.615 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b1f5fcc
[DEBUG] 2024-11-27 16:49:59.615 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:49:59.615 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Team(85118044341250)): 2
[DEBUG] 2024-11-27 16:49:59.615 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b1f5fcc
[DEBUG] 2024-11-27 16:49:59.616 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:49:59.617 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:51:36.056 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-27 16:51:36.060 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-27 16:51:36.078 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-27 16:51:36.079 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-27 16:51:36.113 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-27 16:51:36.117 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-27 16:51:36.261 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-27 16:51:36.273 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-27 16:51:36.273 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-27 16:51:36.274 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:51:36.274 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:51:36.274 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-27 16:51:36.275 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-27 16:51:36.275 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-27 16:51:36.276 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:51:36.276 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-27 16:51:36.277 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-27 16:51:36.277 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:51:36.277 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-27 16:51:36.282 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-27 16:51:36.283 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-27 16:51:36.352 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2024-11-27 16:51:36.352 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2024-11-27 16:51:36.352 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2024-11-27 16:51:36.352 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@41fe8e5f
[DEBUG] 2024-11-27 16:51:36.352 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@41fe8e5f
[DEBUG] 2024-11-27 16:51:36.352 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2024-11-27 16:51:36.352 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2024-11-27 16:51:36.353 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:51:36.353 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:51:36.353 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:51:36.353 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:51:36.353 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:51:36.353 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:51:36.353 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:51:36.353 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:51:36.353 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:51:36.353 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:51:36.353 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:51:36.354 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:51:36.354 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:51:36.354 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:51:36.354 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-27 16:51:36.354 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:51:36.354 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:51:36.354 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:51:36.354 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:51:36.354 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:51:36.354 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:51:36.354 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:51:36.355 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:51:36.355 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:51:36.355 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:51:36.355 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:51:36.355 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:51:36.355 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:51:36.355 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:51:36.355 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:51:36.356 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:51:36.356 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:51:36.356 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:51:36.356 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:51:36.356 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:51:36.356 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:51:36.356 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:51:36.356 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:51:36.356 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:51:36.356 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:51:36.356 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:51:36.357 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:51:36.357 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:51:36.357 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:51:36.357 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:51:36.357 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-27 16:51:36.357 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:51:36.357 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:51:36.357 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:51:36.357 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:51:36.357 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:51:36.357 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-27 16:51:36.357 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:51:36.358 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:51:36.358 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-27 16:51:36.358 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-27 16:51:36.358 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-27 16:51:36.358 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:51:36.358 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:51:36.358 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:51:36.358 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:51:36.358 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:51:36.359 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:51:36.359 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:51:36.359 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:51:36.359 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:51:36.359 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:51:36.359 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:51:36.359 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:51:36.359 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:51:36.359 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:51:36.359 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-27 16:51:36.359 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-27 16:51:36.359 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:51:36.359 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:51:36.360 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:51:36.360 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-27 16:51:36.360 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-27 16:51:36.360 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:51:36.360 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:51:36.360 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:51:36.360 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:51:36.360 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:51:36.360 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:51:36.360 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:51:36.360 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:51:36.360 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:51:36.360 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:51:36.361 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:51:36.361 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:51:36.361 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:51:36.361 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:51:36.361 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:51:36.361 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:51:36.361 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:51:36.361 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-27 16:51:36.361 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:51:36.361 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:51:36.361 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:51:36.361 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:51:36.362 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:51:36.362 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:51:36.362 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:51:36.362 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:51:36.362 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:51:36.362 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:51:36.362 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:51:36.362 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:51:36.362 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:51:36.362 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:51:36.362 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:51:36.362 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:51:36.362 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:51:36.363 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:51:36.366 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@10643593
[DEBUG] 2024-11-27 16:51:36.366 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@10643593
[DEBUG] 2024-11-27 16:51:36.367 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1c7f96b1
[DEBUG] 2024-11-27 16:51:36.368 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7979b8b7
[DEBUG] 2024-11-27 16:51:36.368 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a04fea7
[DEBUG] 2024-11-27 16:51:36.368 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1bc49bc5
[DEBUG] 2024-11-27 16:51:36.368 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-27 16:51:36.368 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-27 16:51:36.368 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-27 16:51:36.368 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-27 16:51:36.368 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@24e83d19
[INFO ] 2024-11-27 16:51:36.388 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-27 16:51:36.388 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-27 16:51:36.389 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-27 16:51:36.454 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-27 16:51:36.530 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-27 16:51:36.530 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-27 16:51:36.530 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-27 16:51:36.559 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-27 16:51:36.560 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-27 16:51:36.564 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-27 16:51:36.564 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-27 16:51:36.577 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29b40b3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d247660)
[DEBUG] 2024-11-27 16:51:36.577 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@656f62dc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f)
[DEBUG] 2024-11-27 16:51:36.577 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a)
[DEBUG] 2024-11-27 16:51:36.577 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@513b52af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5a8c93)
[DEBUG] 2024-11-27 16:51:36.578 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bed3315) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892)
[DEBUG] 2024-11-27 16:51:36.578 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4)
[DEBUG] 2024-11-27 16:51:36.578 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c7350b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434)
[DEBUG] 2024-11-27 16:51:36.578 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bc4ef12) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50448409)
[DEBUG] 2024-11-27 16:51:36.578 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5634a861) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b0dc227)
[DEBUG] 2024-11-27 16:51:36.579 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-27 16:51:36.579 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:51:36.579 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:51:36.581 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:51:36.581 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:51:36.583 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6b63e6ad
[DEBUG] 2024-11-27 16:51:36.583 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1c7f96b1`
[DEBUG] 2024-11-27 16:51:36.587 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:51:36.587 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:51:36.587 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:51:36.589 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:51:36.589 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:51:36.589 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:51:36.589 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:51:36.589 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:51:36.589 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:51:36.590 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:51:36.590 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:51:36.590 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:51:36.591 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bc2e16] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48e8c32a]
[DEBUG] 2024-11-27 16:51:36.617 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-27 16:51:36.634 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-27 16:51:36.639 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-27 16:51:36.644 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-27 16:51:36.650 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:51:36.663 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:51:36.663 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:51:36.663 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:51:36.665 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:51:36.667 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-27 16:51:36.670 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:51:36.672 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-27 16:51:36.673 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:51:36.675 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:51:36.680 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:51:36.680 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:51:36.687 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-27 16:51:36.688 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:51:36.689 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:51:36.689 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:51:36.690 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:51:36.690 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:51:36.692 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:51:36.693 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-27 16:51:36.694 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-27 16:51:36.694 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-27 16:51:36.694 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-27 16:51:36.694 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-27 16:51:36.694 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-27 16:51:36.694 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-27 16:51:36.695 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:51:36.698 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:51:36.698 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-27 16:51:36.698 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-27 16:51:36.698 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:51:36.699 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:51:36.699 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:51:36.699 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:51:36.699 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:51:36.699 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-27 16:51:36.700 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:51:36.700 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-27 16:51:36.700 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:51:36.700 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:51:36.700 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-27 16:51:36.700 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-27 16:51:36.700 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-27 16:51:36.700 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-27 16:51:36.700 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-27 16:51:36.701 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-27 16:51:36.701 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:51:36.701 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:51:36.701 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-27 16:51:36.701 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:51:36.702 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:51:36.702 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:51:36.702 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:51:36.702 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:51:36.702 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:51:36.702 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-27 16:51:36.703 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:51:36.704 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:51:36.704 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-27 16:51:36.705 [main] EntityBinder - Bind entity com.radams.entity.Team on table teams
[DEBUG] 2024-11-27 16:51:36.705 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:51:36.709 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:51:36.710 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:51:36.710 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:51:36.710 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:51:36.710 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-27 16:51:36.710 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:51:36.710 [main] BasicValue - Skipping column re-registration: teams.id
[DEBUG] 2024-11-27 16:51:36.710 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:51:36.710 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:51:36.711 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-27 16:51:36.711 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:51:36.713 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-27 16:51:36.713 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-27 16:51:36.713 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-27 16:51:36.713 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-27 16:51:36.714 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-27 16:51:36.714 [main] BasicValue - Skipping column re-registration: teams.team_name
[DEBUG] 2024-11-27 16:51:36.714 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-27 16:51:36.714 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:51:36.714 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:51:36.715 [main] EntityBinder - Import with entity name FavoriteTeam
[DEBUG] 2024-11-27 16:51:36.715 [main] EntityBinder - Bind entity com.radams.entity.FavoriteTeam on table favorite_teams
[DEBUG] 2024-11-27 16:51:36.715 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:51:36.716 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:51:36.716 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:51:36.716 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:51:36.716 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:51:36.716 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.FavoriteTeam:id]
[DEBUG] 2024-11-27 16:51:36.716 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:51:36.716 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-27 16:51:36.716 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:51:36.716 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:51:36.716 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='team_id')
[DEBUG] 2024-11-27 16:51:36.717 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:51:36.717 [main] PropertyBinder - Building property team
[DEBUG] 2024-11-27 16:51:36.717 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-27 16:51:36.717 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:51:36.717 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-27 16:51:36.717 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:51:36.718 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:51:36.719 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-27 16:51:36.719 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:51:36.719 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-27 16:51:36.720 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:51:36.720 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-27 16:51:36.720 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:51:36.723 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-27 16:51:36.723 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-27 16:51:36.723 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2024-11-27 16:51:36.723 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-27 16:51:36.724 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:51:36.725 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-27 16:51:36.726 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-27 16:51:36.727 [main] TableBinder - Retrieving property com.radams.entity.FavoriteTeam.user
[DEBUG] 2024-11-27 16:51:36.727 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:51:36.727 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:51:36.727 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-27 16:51:36.727 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> teams
[DEBUG] 2024-11-27 16:51:36.728 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-27 16:51:36.728 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 16:51:36.728 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:51:36.729 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:51:36.729 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:51:36.735 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:51:36.735 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:51:36.735 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:51:36.945 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-27 16:51:36.973 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:51:36.973 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.SportDaoTest,getByPropertyLike, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25a5c8e, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-27 16:51:36.976 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-27 16:51:36.981 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:51:37.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-27 16:51:37.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-27 16:51:37.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-27 16:51:37.010 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-27 16:51:37.010 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@25699aa7] under count; prior registration was null
[DEBUG] 2024-11-27 16:51:37.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@693f2213] under every; prior registration was null
[DEBUG] 2024-11-27 16:51:37.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@514377fc] under any; prior registration was null
[DEBUG] 2024-11-27 16:51:37.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-27 16:51:37.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-27 16:51:37.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-27 16:51:37.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-27 16:51:37.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-27 16:51:37.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-27 16:51:37.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-27 16:51:37.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-27 16:51:37.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-27 16:51:37.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-27 16:51:37.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-27 16:51:37.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-27 16:51:37.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-27 16:51:37.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-27 16:51:37.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-27 16:51:37.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-27 16:51:37.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-27 16:51:37.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59b492ec] under sinh; prior registration was null
[DEBUG] 2024-11-27 16:51:37.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55c1ced9] under cosh; prior registration was null
[DEBUG] 2024-11-27 16:51:37.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49cc9b2a] under tanh; prior registration was null
[DEBUG] 2024-11-27 16:51:37.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398] under pi; prior registration was null
[DEBUG] 2024-11-27 16:51:37.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6] under log; prior registration was null
[DEBUG] 2024-11-27 16:51:37.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-27 16:51:37.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-27 16:51:37.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-27 16:51:37.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-27 16:51:37.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-27 16:51:37.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-27 16:51:37.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-27 16:51:37.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-27 16:51:37.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-27 16:51:37.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-27 16:51:37.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-27 16:51:37.015 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-27 16:51:37.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@33d230ce] under position; prior registration was null
[DEBUG] 2024-11-27 16:51:37.018 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7caf1e5] under overlay; prior registration was null
[DEBUG] 2024-11-27 16:51:37.018 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@681de87f] under trim; prior registration was null
[DEBUG] 2024-11-27 16:51:37.019 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4e974b9e] under cast; prior registration was null
[DEBUG] 2024-11-27 16:51:37.019 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@370c7cc5] under collate; prior registration was null
[DEBUG] 2024-11-27 16:51:37.020 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@a056b26] under extract; prior registration was null
[DEBUG] 2024-11-27 16:51:37.020 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-27 16:51:37.020 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-27 16:51:37.020 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4bce62b] under ifnull; prior registration was null
[DEBUG] 2024-11-27 16:51:37.020 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-27 16:51:37.020 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-27 16:51:37.020 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5c82031b] under pad; prior registration was null
[DEBUG] 2024-11-27 16:51:37.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@661e1399] under str; prior registration was null
[DEBUG] 2024-11-27 16:51:37.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@53d30d23] under format; prior registration was null
[DEBUG] 2024-11-27 16:51:37.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@59e7564b] under timestampadd; prior registration was null
[DEBUG] 2024-11-27 16:51:37.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1471b98d] under timestampdiff; prior registration was null
[DEBUG] 2024-11-27 16:51:37.024 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-27 16:51:37.024 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-27 16:51:37.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23564dd2] under current_date; prior registration was null
[DEBUG] 2024-11-27 16:51:37.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54895681] under current_time; prior registration was null
[DEBUG] 2024-11-27 16:51:37.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2dd0a0d0] under current_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:51:37.024 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-27 16:51:37.024 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-27 16:51:37.024 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-27 16:51:37.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bf570c] under local_date; prior registration was null
[DEBUG] 2024-11-27 16:51:37.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1796b2d4] under local_time; prior registration was null
[DEBUG] 2024-11-27 16:51:37.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@935d3f9] under local_datetime; prior registration was null
[DEBUG] 2024-11-27 16:51:37.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@214b342f] under offset_datetime; prior registration was null
[DEBUG] 2024-11-27 16:51:37.025 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-27 16:51:37.025 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-27 16:51:37.025 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-27 16:51:37.025 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-27 16:51:37.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5db0003d] under instant; prior registration was null
[DEBUG] 2024-11-27 16:51:37.025 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-27 16:51:37.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7de147e9] under sql; prior registration was null
[DEBUG] 2024-11-27 16:51:37.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-27 16:51:37.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-27 16:51:37.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-27 16:51:37.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-27 16:51:37.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6
[DEBUG] 2024-11-27 16:51:37.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-27 16:51:37.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-27 16:51:37.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-27 16:51:37.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-27 16:51:37.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-27 16:51:37.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-27 16:51:37.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-27 16:51:37.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-27 16:51:37.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@8eb6f9a] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-27 16:51:37.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@29170a47] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-27 16:51:37.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-27 16:51:37.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-27 16:51:37.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-27 16:51:37.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-27 16:51:37.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-27 16:51:37.027 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:51:37.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-27 16:51:37.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-27 16:51:37.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-27 16:51:37.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-27 16:51:37.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-27 16:51:37.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-27 16:51:37.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-27 16:51:37.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-27 16:51:37.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-27 16:51:37.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-27 16:51:37.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a8f8555] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@33d230ce
[DEBUG] 2024-11-27 16:51:37.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-27 16:51:37.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-27 16:51:37.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-27 16:51:37.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@759a678a] under trunc; prior registration was null
[DEBUG] 2024-11-27 16:51:37.039 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-27 16:51:37.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-27 16:51:37.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cdbe5ec] under bitand; prior registration was null
[DEBUG] 2024-11-27 16:51:37.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14b8a751] under bitor; prior registration was null
[DEBUG] 2024-11-27 16:51:37.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7345f97d] under bitxor; prior registration was null
[DEBUG] 2024-11-27 16:51:37.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@554566a8] under bitnot; prior registration was null
[DEBUG] 2024-11-27 16:51:37.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@66020d69] under format; prior registration was org.hibernate.dialect.function.FormatFunction@53d30d23
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-27 16:51:37.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1796b2d4
[DEBUG] 2024-11-27 16:51:37.041 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@935d3f9
[DEBUG] 2024-11-27 16:51:37.041 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-27 16:51:37.041 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3751acd7] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398
[DEBUG] 2024-11-27 16:51:37.041 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b832551] under chr; prior registration was null
[DEBUG] 2024-11-27 16:51:37.041 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-27 16:51:37.041 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@150d6eaf] under sysdate; prior registration was null
[DEBUG] 2024-11-27 16:51:37.041 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-27 16:51:37.042 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-27 16:51:37.042 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-27 16:51:37.042 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-27 16:51:37.042 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-27 16:51:37.042 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 16:51:37.043 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@611c3eae] under rank; prior registration was null
[DEBUG] 2024-11-27 16:51:37.043 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@13e00016] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 16:51:37.043 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7b3cbe6e] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 16:51:37.043 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@177ede17] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 16:51:37.044 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7b5ac347] under listagg; prior registration was null
[DEBUG] 2024-11-27 16:51:37.047 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:51:37.048 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 16:51:37.049 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 16:51:37.050 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:51:37.051 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 16:51:37.052 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 16:51:37.055 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 16:51:37.147 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:51:37.148 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 16:51:37.236 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:51:37.239 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:51:37.241 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:51:37.241 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:51:37.365 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 16:51:37.368 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:51:37.389 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:51:37.389 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:51:37.389 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:51:37.389 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:51:37.389 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:51:37.389 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:51:37.401 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.FavoriteTeam]: private accessor [team]
[DEBUG] 2024-11-27 16:51:37.401 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:51:37.401 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:51:37.403 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:51:37.403 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:51:37.416 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 16:51:37.416 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:51:37.416 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:51:37.424 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 16:51:37.436 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:51:37.436 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:51:37.436 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:51:37.437 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:51:37.437 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:51:37.437 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:51:37.461 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 16:51:37.461 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 16:51:37.463 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:51:37.463 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.team]
[DEBUG] 2024-11-27 16:51:37.464 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.user]
[DEBUG] 2024-11-27 16:51:37.464 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.FavoriteTeam) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:51:37.464 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:51:37.464 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 16:51:37.464 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 16:51:37.464 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:51:37.464 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:51:37.464 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 16:51:37.464 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 16:51:37.464 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:51:37.464 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:51:37.464 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:51:37.514 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:51:37.516 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:51:37.523 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4fafd27e] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:51:37.523 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:51:37.530 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  \-BasicFetch [com.radams.entity.Team.teamName]

[DEBUG] 2024-11-27 16:51:37.540 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:51:37.546 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 16:51:37.546 [main] AbstractEntityPersister -  Version select: select id from teams where id=?
[DEBUG] 2024-11-27 16:51:37.546 [main] AbstractEntityPersister -  Insert (0): insert into teams (sport_id,team_name) values (?,?)
[DEBUG] 2024-11-27 16:51:37.547 [main] AbstractEntityPersister -  Update (0): update teams set sport_id=?,team_name=? where id=?
[DEBUG] 2024-11-27 16:51:37.547 [main] AbstractEntityPersister -  Delete (0): delete from teams where id=?
[DEBUG] 2024-11-27 16:51:37.547 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:51:37.547 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.FavoriteTeam)] with identifierForTableGroup [com.radams.entity.FavoriteTeam] for NavigablePath [com.radams.entity.FavoriteTeam] 
[DEBUG] 2024-11-27 16:51:37.547 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@335b3d6] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team] for NavigablePath [com.radams.entity.FavoriteTeam.team] 
[DEBUG] 2024-11-27 16:51:37.547 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:51:37.547 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3a5ce4b8] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team.sport] for NavigablePath [com.radams.entity.FavoriteTeam.team.sport] 
[DEBUG] 2024-11-27 16:51:37.547 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:51:37.547 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65262308] with identifierForTableGroup [com.radams.entity.FavoriteTeam.user] for NavigablePath [com.radams.entity.FavoriteTeam.user] 
[DEBUG] 2024-11-27 16:51:37.547 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:51:37.547 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.FavoriteTeam]
 |  +-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.team]
 |  \-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.user]

[DEBUG] 2024-11-27 16:51:37.548 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ft1 : com.radams.entity.FavoriteTeam) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.FavoriteTeam.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.FavoriteTeam.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.FavoriteTeam.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:51:37.548 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:51:37.548 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 16:51:37.548 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (team_id,user_id) values (?,?)
[DEBUG] 2024-11-27 16:51:37.548 [main] AbstractEntityPersister -  Update (0): update favorite_teams set team_id=?,user_id=? where id=?
[DEBUG] 2024-11-27 16:51:37.548 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 16:51:37.548 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:51:37.548 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 16:51:37.549 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:51:37.550 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5d22604e] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:51:37.551 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:51:37.557 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 16:51:37.557 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : teams as t1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:51:37.557 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:51:37.557 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 16:51:37.557 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 16:51:37.557 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 16:51:37.557 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 16:51:37.557 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:51:37.557 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 16:51:37.557 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:51:37.557 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6d2db15b] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:51:37.557 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:51:37.557 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@749ad37c] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:51:37.557 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:51:37.558 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@591e5fd4] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:51:37.558 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 16:51:37.558 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
                  primaryTableReference : teams as t1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:51:37.559 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 16:51:37.559 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 16:51:37.559 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 16:51:37.559 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 16:51:37.559 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 16:51:37.560 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:51:37.560 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@398f0516] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:51:37.560 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:51:37.560 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6dbb3d7d] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:51:37.560 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:51:37.560 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a3a49e5] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:51:37.561 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:51:37.561 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c1b82cd] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 16:51:37.562 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 16:51:37.562 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:51:37.562 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:51:37.562 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:51:37.562 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@69de72ec] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:51:37.562 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:51:37.562 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@21c99abf] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 16:51:37.563 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 16:51:37.563 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:51:37.563 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:51:37.585 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 16:51:37.586 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 16:51:37.589 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 16:51:37.589 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 16:51:37.590 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bc2e16] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@fd69983]
[DEBUG] 2024-11-27 16:51:37.590 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 16:51:37.591 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 16:51:37.591 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:51:37.591 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 16:51:37.593 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@42238078
[DEBUG] 2024-11-27 16:51:37.593 [main] SessionFactoryRegistry - Registering SessionFactory: 81335aea-495a-4095-9dcf-811409dae6ab (<unnamed>)
[DEBUG] 2024-11-27 16:51:37.593 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 16:51:37.593 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 16:51:37.637 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 16:51:37.725 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:51:37.725 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport(85216221258615))] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 16:51:37.735 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3275a47f
[DEBUG] 2024-11-27 16:51:37.735 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.radams.entity.Sport(85216221258615).sportName) 
[DEBUG] 2024-11-27 16:51:37.739 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport(85216221258615)]
 |  +-BasicFetch [com.radams.entity.Sport(85216221258615).sportName]
 |  \-SelectEagerCollectionFetch [com.radams.entity.Sport(85216221258615).teams]

[DEBUG] 2024-11-27 16:51:37.740 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport(85216221258615)) {
          primaryTableReference : sports as s1_0
        }
      }
    }

[DEBUG] 2024-11-27 16:51:37.748 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2024-11-27 16:51:37.758 [main] results - Initializer list:
	  com.radams.entity.Sport(85216221258615).teams -> SelectEagerCollectionInitializer(com.radams.entity.Sport(85216221258615).teams)@1151617540 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport(85216221258615) -> EntityResultInitializer(com.radams.entity.Sport(85216221258615))@906637574 (SingleTableEntityPersister(com.radams.entity.Sport))

[DEBUG] 2024-11-27 16:51:37.763 [main] SQL - select s1_0.id,s1_0.name from sports s1_0 where s1_0.name like ? escape ''
[DEBUG] 2024-11-27 16:51:37.777 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:51:37.777 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport(85216221258615)): 1
[DEBUG] 2024-11-27 16:51:37.778 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : com.radams.entity.Sport(85216221258615).teams#1
[DEBUG] 2024-11-27 16:51:37.779 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport(85216221258615)#1] : 1525186016
[DEBUG] 2024-11-27 16:51:37.784 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 16:51:37.788 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport(85216221258615)#1
[DEBUG] 2024-11-27 16:51:37.788 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ff0706c
[DEBUG] 2024-11-27 16:51:37.789 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:51:37.789 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport(85216221258615)): 2
[DEBUG] 2024-11-27 16:51:37.789 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : com.radams.entity.Sport(85216221258615).teams#2
[DEBUG] 2024-11-27 16:51:37.789 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport(85216221258615)#2] : 757788974
[DEBUG] 2024-11-27 16:51:37.789 [main] results - Extracted JDBC value [1] - [NFL]
[DEBUG] 2024-11-27 16:51:37.789 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport(85216221258615)#2
[DEBUG] 2024-11-27 16:51:37.789 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ff0706c
[DEBUG] 2024-11-27 16:51:37.792 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:51:37.799 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.sport -> EntitySelectFetchInitializer(com.radams.entity.Sport.teams.{element}.sport)@921500150 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@273401463)
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@684660636 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@199076007)
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@826884252 (PluralAttribute(com.radams.entity.Sport.teams))

[DEBUG] 2024-11-27 16:51:37.799 [main] SQL - select t1_0.sport_id,t1_0.id,t1_0.team_name from teams t1_0 where t1_0.sport_id=?
[DEBUG] 2024-11-27 16:51:37.800 [main] results - Extracted JDBC value [1] - [2]
[DEBUG] 2024-11-27 16:51:37.800 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 2
[DEBUG] 2024-11-27 16:51:37.800 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:51:37.800 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-27 16:51:37.800 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:51:37.801 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#2] : 1371539709
[DEBUG] 2024-11-27 16:51:37.801 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:51:37.801 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#2] - using loading instance
[DEBUG] 2024-11-27 16:51:37.802 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1628801015
[DEBUG] 2024-11-27 16:51:37.802 [main] results - Extracted JDBC value [2] - [Packers]
[DEBUG] 2024-11-27 16:51:37.802 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#2
[DEBUG] 2024-11-27 16:51:37.802 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1628801015
[DEBUG] 2024-11-27 16:51:37.802 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@4af84a76
[DEBUG] 2024-11-27 16:51:37.802 [main] results - Extracted JDBC value [1] - [4]
[DEBUG] 2024-11-27 16:51:37.802 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 4
[DEBUG] 2024-11-27 16:51:37.802 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:51:37.802 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-27 16:51:37.803 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:51:37.803 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#4] : 190838539
[DEBUG] 2024-11-27 16:51:37.803 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:51:37.803 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#2] - using loading instance
[DEBUG] 2024-11-27 16:51:37.803 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#2]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@1628801015
[DEBUG] 2024-11-27 16:51:37.803 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1628801015
[DEBUG] 2024-11-27 16:51:37.803 [main] results - Extracted JDBC value [2] - [Falcons]
[DEBUG] 2024-11-27 16:51:37.803 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#4
[DEBUG] 2024-11-27 16:51:37.803 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1628801015
[DEBUG] 2024-11-27 16:51:37.803 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@4af84a76
[DEBUG] 2024-11-27 16:51:37.803 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-27 16:51:37.804 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:51:37.805 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:51:37.805 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.sport -> EntitySelectFetchInitializer(com.radams.entity.Sport.teams.{element}.sport)@1462452338 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@273401463)
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@841660110 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@199076007)
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1534365740 (PluralAttribute(com.radams.entity.Sport.teams))

[DEBUG] 2024-11-27 16:51:37.805 [main] SQL - select t1_0.sport_id,t1_0.id,t1_0.team_name from teams t1_0 where t1_0.sport_id=?
[DEBUG] 2024-11-27 16:51:37.806 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 16:51:37.806 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 16:51:37.806 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:51:37.806 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:51:37.806 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:51:37.806 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 2013063878
[DEBUG] 2024-11-27 16:51:37.806 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:51:37.806 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#1] - using loading instance
[DEBUG] 2024-11-27 16:51:37.806 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@807240950
[DEBUG] 2024-11-27 16:51:37.806 [main] results - Extracted JDBC value [2] - [Hawks]
[DEBUG] 2024-11-27 16:51:37.806 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-27 16:51:37.806 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@807240950
[DEBUG] 2024-11-27 16:51:37.806 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@563c3aca
[DEBUG] 2024-11-27 16:51:37.806 [main] results - Extracted JDBC value [1] - [3]
[DEBUG] 2024-11-27 16:51:37.806 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 16:51:37.806 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:51:37.806 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:51:37.806 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:51:37.806 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#3] : 1407280813
[DEBUG] 2024-11-27 16:51:37.806 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:51:37.807 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#1] - using loading instance
[DEBUG] 2024-11-27 16:51:37.807 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@807240950
[DEBUG] 2024-11-27 16:51:37.807 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@807240950
[DEBUG] 2024-11-27 16:51:37.807 [main] results - Extracted JDBC value [2] - [Bulls]
[DEBUG] 2024-11-27 16:51:37.807 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#3
[DEBUG] 2024-11-27 16:51:37.807 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@807240950
[DEBUG] 2024-11-27 16:51:37.807 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@563c3aca
[DEBUG] 2024-11-27 16:51:37.807 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 16:51:37.807 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:51:37.807 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:51:37.808 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:52:19.896 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-27 16:52:19.902 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-27 16:52:19.924 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-27 16:52:19.925 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-27 16:52:19.969 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-27 16:52:19.974 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-27 16:52:20.152 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-27 16:52:20.155 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-27 16:52:20.155 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-27 16:52:20.156 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:52:20.156 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:52:20.156 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-27 16:52:20.157 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-27 16:52:20.157 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-27 16:52:20.158 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:52:20.158 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-27 16:52:20.159 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-27 16:52:20.159 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:52:20.160 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-27 16:52:20.166 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-27 16:52:20.166 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-27 16:52:20.247 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2024-11-27 16:52:20.247 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2024-11-27 16:52:20.247 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2024-11-27 16:52:20.247 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@41fe8e5f
[DEBUG] 2024-11-27 16:52:20.248 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@41fe8e5f
[DEBUG] 2024-11-27 16:52:20.248 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2024-11-27 16:52:20.248 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2024-11-27 16:52:20.248 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:52:20.248 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:52:20.248 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:52:20.248 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:52:20.248 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:52:20.248 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:52:20.248 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:52:20.248 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:52:20.249 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:52:20.249 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:52:20.249 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:52:20.249 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:52:20.249 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:52:20.249 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:52:20.249 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-27 16:52:20.249 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:52:20.249 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:52:20.249 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:52:20.249 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:52:20.250 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:52:20.250 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:52:20.250 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:52:20.250 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:52:20.250 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:52:20.250 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:52:20.250 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:52:20.250 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:52:20.250 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:52:20.250 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:52:20.250 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:52:20.251 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:52:20.251 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:52:20.251 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:52:20.251 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:52:20.251 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:52:20.251 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:52:20.251 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:52:20.251 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:52:20.251 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:52:20.251 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:52:20.251 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:52:20.252 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:52:20.252 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:52:20.252 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:52:20.252 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:52:20.252 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-27 16:52:20.252 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:52:20.252 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:52:20.252 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:52:20.252 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:52:20.252 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:52:20.253 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-27 16:52:20.253 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:52:20.253 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:52:20.253 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-27 16:52:20.253 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-27 16:52:20.253 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-27 16:52:20.253 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:52:20.253 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:52:20.254 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:52:20.254 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:52:20.254 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:52:20.254 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:52:20.254 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:52:20.254 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:52:20.254 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:52:20.254 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:52:20.254 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:52:20.254 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:52:20.254 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:52:20.255 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:52:20.255 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-27 16:52:20.255 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-27 16:52:20.255 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:52:20.255 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:52:20.255 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:52:20.255 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-27 16:52:20.255 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-27 16:52:20.255 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:52:20.255 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:52:20.256 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:52:20.256 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:52:20.256 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:52:20.256 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:52:20.256 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:52:20.256 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:52:20.256 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:52:20.256 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:52:20.256 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:52:20.256 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:52:20.256 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:52:20.257 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:52:20.257 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:52:20.257 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:52:20.257 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:52:20.257 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-27 16:52:20.257 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:52:20.257 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:52:20.258 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:52:20.258 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:52:20.258 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:52:20.258 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:52:20.258 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:52:20.258 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:52:20.259 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:52:20.259 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:52:20.259 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:52:20.259 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:52:20.259 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:52:20.259 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:52:20.259 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:52:20.259 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:52:20.259 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:52:20.259 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:52:20.264 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@10643593
[DEBUG] 2024-11-27 16:52:20.264 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@10643593
[DEBUG] 2024-11-27 16:52:20.265 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1c7f96b1
[DEBUG] 2024-11-27 16:52:20.266 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7979b8b7
[DEBUG] 2024-11-27 16:52:20.266 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a04fea7
[DEBUG] 2024-11-27 16:52:20.266 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1bc49bc5
[DEBUG] 2024-11-27 16:52:20.266 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-27 16:52:20.266 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-27 16:52:20.266 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-27 16:52:20.266 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-27 16:52:20.267 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@24e83d19
[INFO ] 2024-11-27 16:52:20.289 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-27 16:52:20.289 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-27 16:52:20.290 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-27 16:52:20.364 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-27 16:52:20.443 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-27 16:52:20.444 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-27 16:52:20.444 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-27 16:52:20.477 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-27 16:52:20.478 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-27 16:52:20.482 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-27 16:52:20.482 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-27 16:52:20.494 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29b40b3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d247660)
[DEBUG] 2024-11-27 16:52:20.495 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@656f62dc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f)
[DEBUG] 2024-11-27 16:52:20.495 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a)
[DEBUG] 2024-11-27 16:52:20.495 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@513b52af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5a8c93)
[DEBUG] 2024-11-27 16:52:20.495 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bed3315) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892)
[DEBUG] 2024-11-27 16:52:20.495 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4)
[DEBUG] 2024-11-27 16:52:20.495 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c7350b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434)
[DEBUG] 2024-11-27 16:52:20.495 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bc4ef12) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50448409)
[DEBUG] 2024-11-27 16:52:20.495 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5634a861) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b0dc227)
[DEBUG] 2024-11-27 16:52:20.497 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-27 16:52:20.497 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:52:20.497 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:52:20.499 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:52:20.499 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:52:20.502 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6b63e6ad
[DEBUG] 2024-11-27 16:52:20.502 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1c7f96b1`
[DEBUG] 2024-11-27 16:52:20.506 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:52:20.506 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:52:20.506 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:52:20.508 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:52:20.509 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:52:20.509 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:52:20.509 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:52:20.509 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:52:20.509 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:52:20.509 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:52:20.509 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:52:20.509 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:52:20.511 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bc2e16] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48e8c32a]
[DEBUG] 2024-11-27 16:52:20.541 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-27 16:52:20.559 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-27 16:52:20.566 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-27 16:52:20.570 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-27 16:52:20.577 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:52:20.592 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:52:20.593 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:52:20.593 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:52:20.594 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:52:20.597 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-27 16:52:20.601 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:52:20.604 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-27 16:52:20.604 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:52:20.607 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:52:20.612 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:52:20.613 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:52:20.621 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-27 16:52:20.622 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:52:20.622 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:52:20.623 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:52:20.624 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:52:20.624 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:52:20.626 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:52:20.628 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-27 16:52:20.628 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-27 16:52:20.628 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-27 16:52:20.628 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-27 16:52:20.628 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-27 16:52:20.629 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-27 16:52:20.629 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-27 16:52:20.629 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:52:20.632 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:52:20.633 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-27 16:52:20.633 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-27 16:52:20.633 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:52:20.635 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:52:20.635 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:52:20.635 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:52:20.635 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:52:20.636 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-27 16:52:20.636 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:52:20.636 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-27 16:52:20.636 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:52:20.636 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:52:20.636 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-27 16:52:20.637 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-27 16:52:20.637 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-27 16:52:20.637 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-27 16:52:20.637 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-27 16:52:20.637 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-27 16:52:20.637 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:52:20.638 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:52:20.638 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-27 16:52:20.638 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:52:20.638 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:52:20.638 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:52:20.638 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:52:20.639 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:52:20.639 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:52:20.639 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-27 16:52:20.639 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:52:20.640 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:52:20.640 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-27 16:52:20.640 [main] EntityBinder - Bind entity com.radams.entity.Team on table teams
[DEBUG] 2024-11-27 16:52:20.640 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:52:20.643 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:52:20.644 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:52:20.644 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:52:20.644 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:52:20.644 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-27 16:52:20.644 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:52:20.644 [main] BasicValue - Skipping column re-registration: teams.id
[DEBUG] 2024-11-27 16:52:20.644 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:52:20.644 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:52:20.644 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-27 16:52:20.645 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:52:20.647 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-27 16:52:20.647 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-27 16:52:20.647 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-27 16:52:20.647 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-27 16:52:20.647 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-27 16:52:20.647 [main] BasicValue - Skipping column re-registration: teams.team_name
[DEBUG] 2024-11-27 16:52:20.648 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-27 16:52:20.648 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:52:20.649 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:52:20.650 [main] EntityBinder - Import with entity name FavoriteTeam
[DEBUG] 2024-11-27 16:52:20.650 [main] EntityBinder - Bind entity com.radams.entity.FavoriteTeam on table favorite_teams
[DEBUG] 2024-11-27 16:52:20.650 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:52:20.651 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:52:20.651 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:52:20.651 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:52:20.651 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:52:20.651 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.FavoriteTeam:id]
[DEBUG] 2024-11-27 16:52:20.651 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:52:20.651 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-27 16:52:20.651 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:52:20.651 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:52:20.652 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='team_id')
[DEBUG] 2024-11-27 16:52:20.652 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:52:20.652 [main] PropertyBinder - Building property team
[DEBUG] 2024-11-27 16:52:20.652 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-27 16:52:20.653 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:52:20.653 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-27 16:52:20.653 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:52:20.654 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:52:20.654 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-27 16:52:20.655 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:52:20.655 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-27 16:52:20.655 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:52:20.655 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-27 16:52:20.656 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:52:20.660 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-27 16:52:20.660 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-27 16:52:20.660 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2024-11-27 16:52:20.660 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-27 16:52:20.660 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:52:20.661 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-27 16:52:20.663 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-27 16:52:20.664 [main] TableBinder - Retrieving property com.radams.entity.FavoriteTeam.user
[DEBUG] 2024-11-27 16:52:20.664 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:52:20.664 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:52:20.664 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-27 16:52:20.665 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> teams
[DEBUG] 2024-11-27 16:52:20.665 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-27 16:52:20.665 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 16:52:20.665 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:52:20.667 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:52:20.667 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:52:20.675 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:52:20.675 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:52:20.675 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:52:20.928 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-27 16:52:20.961 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:52:20.961 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.SportDaoTest,getByPropertyLike, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25a5c8e, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-27 16:52:20.965 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-27 16:52:20.971 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:52:21.005 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-27 16:52:21.005 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-27 16:52:21.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-27 16:52:21.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-27 16:52:21.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@25699aa7] under count; prior registration was null
[DEBUG] 2024-11-27 16:52:21.008 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@693f2213] under every; prior registration was null
[DEBUG] 2024-11-27 16:52:21.008 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@514377fc] under any; prior registration was null
[DEBUG] 2024-11-27 16:52:21.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-27 16:52:21.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-27 16:52:21.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-27 16:52:21.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-27 16:52:21.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-27 16:52:21.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-27 16:52:21.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-27 16:52:21.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-27 16:52:21.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-27 16:52:21.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-27 16:52:21.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-27 16:52:21.010 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-27 16:52:21.010 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-27 16:52:21.010 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-27 16:52:21.010 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-27 16:52:21.010 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-27 16:52:21.010 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-27 16:52:21.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59b492ec] under sinh; prior registration was null
[DEBUG] 2024-11-27 16:52:21.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55c1ced9] under cosh; prior registration was null
[DEBUG] 2024-11-27 16:52:21.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49cc9b2a] under tanh; prior registration was null
[DEBUG] 2024-11-27 16:52:21.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398] under pi; prior registration was null
[DEBUG] 2024-11-27 16:52:21.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6] under log; prior registration was null
[DEBUG] 2024-11-27 16:52:21.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-27 16:52:21.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-27 16:52:21.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-27 16:52:21.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-27 16:52:21.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-27 16:52:21.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-27 16:52:21.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-27 16:52:21.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-27 16:52:21.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-27 16:52:21.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-27 16:52:21.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-27 16:52:21.013 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-27 16:52:21.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@33d230ce] under position; prior registration was null
[DEBUG] 2024-11-27 16:52:21.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7caf1e5] under overlay; prior registration was null
[DEBUG] 2024-11-27 16:52:21.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@681de87f] under trim; prior registration was null
[DEBUG] 2024-11-27 16:52:21.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4e974b9e] under cast; prior registration was null
[DEBUG] 2024-11-27 16:52:21.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@370c7cc5] under collate; prior registration was null
[DEBUG] 2024-11-27 16:52:21.017 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@a056b26] under extract; prior registration was null
[DEBUG] 2024-11-27 16:52:21.017 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-27 16:52:21.017 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-27 16:52:21.017 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4bce62b] under ifnull; prior registration was null
[DEBUG] 2024-11-27 16:52:21.017 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-27 16:52:21.017 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-27 16:52:21.018 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5c82031b] under pad; prior registration was null
[DEBUG] 2024-11-27 16:52:21.018 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@661e1399] under str; prior registration was null
[DEBUG] 2024-11-27 16:52:21.019 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@53d30d23] under format; prior registration was null
[DEBUG] 2024-11-27 16:52:21.019 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@59e7564b] under timestampadd; prior registration was null
[DEBUG] 2024-11-27 16:52:21.020 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1471b98d] under timestampdiff; prior registration was null
[DEBUG] 2024-11-27 16:52:21.020 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-27 16:52:21.020 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23564dd2] under current_date; prior registration was null
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54895681] under current_time; prior registration was null
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2dd0a0d0] under current_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bf570c] under local_date; prior registration was null
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1796b2d4] under local_time; prior registration was null
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@935d3f9] under local_datetime; prior registration was null
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@214b342f] under offset_datetime; prior registration was null
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5db0003d] under instant; prior registration was null
[DEBUG] 2024-11-27 16:52:21.021 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-27 16:52:21.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7de147e9] under sql; prior registration was null
[DEBUG] 2024-11-27 16:52:21.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-27 16:52:21.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-27 16:52:21.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-27 16:52:21.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-27 16:52:21.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6
[DEBUG] 2024-11-27 16:52:21.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-27 16:52:21.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-27 16:52:21.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-27 16:52:21.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-27 16:52:21.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-27 16:52:21.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-27 16:52:21.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-27 16:52:21.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-27 16:52:21.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@8eb6f9a] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-27 16:52:21.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@29170a47] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-27 16:52:21.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-27 16:52:21.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-27 16:52:21.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-27 16:52:21.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-27 16:52:21.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-27 16:52:21.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-27 16:52:21.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-27 16:52:21.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-27 16:52:21.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-27 16:52:21.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-27 16:52:21.024 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-27 16:52:21.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-27 16:52:21.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-27 16:52:21.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-27 16:52:21.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-27 16:52:21.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-27 16:52:21.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a8f8555] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@33d230ce
[DEBUG] 2024-11-27 16:52:21.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-27 16:52:21.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-27 16:52:21.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-27 16:52:21.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@759a678a] under trunc; prior registration was null
[DEBUG] 2024-11-27 16:52:21.028 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-27 16:52:21.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-27 16:52:21.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cdbe5ec] under bitand; prior registration was null
[DEBUG] 2024-11-27 16:52:21.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14b8a751] under bitor; prior registration was null
[DEBUG] 2024-11-27 16:52:21.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7345f97d] under bitxor; prior registration was null
[DEBUG] 2024-11-27 16:52:21.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@554566a8] under bitnot; prior registration was null
[DEBUG] 2024-11-27 16:52:21.028 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@66020d69] under format; prior registration was org.hibernate.dialect.function.FormatFunction@53d30d23
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-27 16:52:21.029 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1796b2d4
[DEBUG] 2024-11-27 16:52:21.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@935d3f9
[DEBUG] 2024-11-27 16:52:21.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-27 16:52:21.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3751acd7] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398
[DEBUG] 2024-11-27 16:52:21.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b832551] under chr; prior registration was null
[DEBUG] 2024-11-27 16:52:21.030 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-27 16:52:21.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@150d6eaf] under sysdate; prior registration was null
[DEBUG] 2024-11-27 16:52:21.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-27 16:52:21.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-27 16:52:21.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-27 16:52:21.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-27 16:52:21.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-27 16:52:21.030 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 16:52:21.031 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@611c3eae] under rank; prior registration was null
[DEBUG] 2024-11-27 16:52:21.032 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@13e00016] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 16:52:21.032 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7b3cbe6e] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 16:52:21.032 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@177ede17] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 16:52:21.032 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7b5ac347] under listagg; prior registration was null
[DEBUG] 2024-11-27 16:52:21.036 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.036 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.036 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:52:21.036 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:52:21.036 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 16:52:21.036 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 16:52:21.036 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.036 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.036 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:52:21.036 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 16:52:21.036 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 16:52:21.036 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 16:52:21.037 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:52:21.038 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 16:52:21.039 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.040 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 16:52:21.041 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 16:52:21.041 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:52:21.041 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 16:52:21.041 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 16:52:21.041 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 16:52:21.041 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 16:52:21.041 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 16:52:21.041 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 16:52:21.041 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 16:52:21.041 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 16:52:21.041 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.041 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.041 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 16:52:21.041 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 16:52:21.041 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 16:52:21.044 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 16:52:21.146 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:52:21.146 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 16:52:21.230 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:52:21.234 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:52:21.236 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:52:21.236 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:52:21.393 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 16:52:21.397 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:52:21.421 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:52:21.421 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:52:21.421 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:52:21.421 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:52:21.421 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:52:21.421 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:52:21.435 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.FavoriteTeam]: private accessor [team]
[DEBUG] 2024-11-27 16:52:21.435 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:52:21.435 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:52:21.436 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:52:21.436 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:52:21.453 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 16:52:21.453 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:52:21.454 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:52:21.463 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 16:52:21.477 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:52:21.478 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:52:21.478 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:52:21.478 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:52:21.478 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:52:21.478 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:52:21.504 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 16:52:21.504 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 16:52:21.507 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:52:21.508 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.team]
[DEBUG] 2024-11-27 16:52:21.508 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.user]
[DEBUG] 2024-11-27 16:52:21.508 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.FavoriteTeam) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:52:21.508 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:52:21.508 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 16:52:21.508 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 16:52:21.508 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:52:21.508 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:52:21.508 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 16:52:21.508 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 16:52:21.508 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:52:21.508 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:52:21.508 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:52:21.565 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:52:21.566 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:52:21.573 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4fafd27e] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:52:21.573 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:52:21.582 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  \-BasicFetch [com.radams.entity.Team.teamName]

[DEBUG] 2024-11-27 16:52:21.591 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:52:21.599 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 16:52:21.599 [main] AbstractEntityPersister -  Version select: select id from teams where id=?
[DEBUG] 2024-11-27 16:52:21.599 [main] AbstractEntityPersister -  Insert (0): insert into teams (sport_id,team_name) values (?,?)
[DEBUG] 2024-11-27 16:52:21.599 [main] AbstractEntityPersister -  Update (0): update teams set sport_id=?,team_name=? where id=?
[DEBUG] 2024-11-27 16:52:21.599 [main] AbstractEntityPersister -  Delete (0): delete from teams where id=?
[DEBUG] 2024-11-27 16:52:21.599 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:52:21.599 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.FavoriteTeam)] with identifierForTableGroup [com.radams.entity.FavoriteTeam] for NavigablePath [com.radams.entity.FavoriteTeam] 
[DEBUG] 2024-11-27 16:52:21.599 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@335b3d6] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team] for NavigablePath [com.radams.entity.FavoriteTeam.team] 
[DEBUG] 2024-11-27 16:52:21.600 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:52:21.600 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3a5ce4b8] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team.sport] for NavigablePath [com.radams.entity.FavoriteTeam.team.sport] 
[DEBUG] 2024-11-27 16:52:21.600 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:52:21.600 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65262308] with identifierForTableGroup [com.radams.entity.FavoriteTeam.user] for NavigablePath [com.radams.entity.FavoriteTeam.user] 
[DEBUG] 2024-11-27 16:52:21.600 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:52:21.600 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.FavoriteTeam]
 |  +-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.team]
 |  \-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.user]

[DEBUG] 2024-11-27 16:52:21.600 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ft1 : com.radams.entity.FavoriteTeam) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.FavoriteTeam.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.FavoriteTeam.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.FavoriteTeam.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:52:21.600 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:52:21.600 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 16:52:21.601 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (team_id,user_id) values (?,?)
[DEBUG] 2024-11-27 16:52:21.601 [main] AbstractEntityPersister -  Update (0): update favorite_teams set team_id=?,user_id=? where id=?
[DEBUG] 2024-11-27 16:52:21.601 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 16:52:21.601 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:52:21.601 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 16:52:21.601 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:52:21.602 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5d22604e] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:52:21.603 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:52:21.609 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 16:52:21.609 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : teams as t1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:52:21.609 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:52:21.609 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 16:52:21.609 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 16:52:21.609 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 16:52:21.610 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 16:52:21.610 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:52:21.610 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 16:52:21.610 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:52:21.610 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6d2db15b] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:52:21.610 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:52:21.610 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@749ad37c] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:52:21.610 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:52:21.610 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@591e5fd4] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:52:21.611 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 16:52:21.611 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
                  primaryTableReference : teams as t1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:52:21.611 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 16:52:21.611 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 16:52:21.611 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 16:52:21.611 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 16:52:21.612 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 16:52:21.612 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:52:21.612 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@398f0516] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:52:21.612 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:52:21.613 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6dbb3d7d] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:52:21.613 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:52:21.613 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a3a49e5] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:52:21.613 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:52:21.613 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c1b82cd] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 16:52:21.614 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 16:52:21.615 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:52:21.615 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:52:21.615 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:52:21.615 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@69de72ec] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:52:21.615 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:52:21.615 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@21c99abf] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 16:52:21.615 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 16:52:21.615 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:52:21.615 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:52:21.638 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 16:52:21.639 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 16:52:21.642 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 16:52:21.643 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 16:52:21.643 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bc2e16] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@fd69983]
[DEBUG] 2024-11-27 16:52:21.644 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 16:52:21.644 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 16:52:21.645 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:52:21.645 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 16:52:21.647 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@42238078
[DEBUG] 2024-11-27 16:52:21.647 [main] SessionFactoryRegistry - Registering SessionFactory: c34042e4-49b0-4d1a-b489-ea225e03a734 (<unnamed>)
[DEBUG] 2024-11-27 16:52:21.647 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 16:52:21.647 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 16:52:21.688 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 16:52:21.776 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:52:21.776 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport(85260270543885))] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 16:52:21.785 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3275a47f
[DEBUG] 2024-11-27 16:52:21.785 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.radams.entity.Sport(85260270543885).sportName) 
[DEBUG] 2024-11-27 16:52:21.790 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport(85260270543885)]
 |  +-BasicFetch [com.radams.entity.Sport(85260270543885).sportName]
 |  \-SelectEagerCollectionFetch [com.radams.entity.Sport(85260270543885).teams]

[DEBUG] 2024-11-27 16:52:21.790 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport(85260270543885)) {
          primaryTableReference : sports as s1_0
        }
      }
    }

[DEBUG] 2024-11-27 16:52:21.797 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2024-11-27 16:52:21.806 [main] results - Initializer list:
	  com.radams.entity.Sport(85260270543885).teams -> SelectEagerCollectionInitializer(com.radams.entity.Sport(85260270543885).teams)@1151617540 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport(85260270543885) -> EntityResultInitializer(com.radams.entity.Sport(85260270543885))@906637574 (SingleTableEntityPersister(com.radams.entity.Sport))

[DEBUG] 2024-11-27 16:52:21.810 [main] SQL - select s1_0.id,s1_0.name from sports s1_0 where s1_0.name like ? escape ''
[DEBUG] 2024-11-27 16:52:21.821 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:52:21.822 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport(85260270543885)): 1
[DEBUG] 2024-11-27 16:52:21.822 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : com.radams.entity.Sport(85260270543885).teams#1
[DEBUG] 2024-11-27 16:52:21.823 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport(85260270543885)#1] : 1525186016
[DEBUG] 2024-11-27 16:52:21.827 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 16:52:21.830 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport(85260270543885)#1
[DEBUG] 2024-11-27 16:52:21.830 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ff0706c
[DEBUG] 2024-11-27 16:52:21.830 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:52:21.830 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport(85260270543885)): 2
[DEBUG] 2024-11-27 16:52:21.830 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : com.radams.entity.Sport(85260270543885).teams#2
[DEBUG] 2024-11-27 16:52:21.830 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport(85260270543885)#2] : 757788974
[DEBUG] 2024-11-27 16:52:21.830 [main] results - Extracted JDBC value [1] - [NFL]
[DEBUG] 2024-11-27 16:52:21.830 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport(85260270543885)#2
[DEBUG] 2024-11-27 16:52:21.830 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ff0706c
[DEBUG] 2024-11-27 16:52:21.833 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:52:21.839 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.sport -> EntitySelectFetchInitializer(com.radams.entity.Sport.teams.{element}.sport)@921500150 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@273401463)
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@684660636 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@199076007)
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@826884252 (PluralAttribute(com.radams.entity.Sport.teams))

[DEBUG] 2024-11-27 16:52:21.839 [main] SQL - select t1_0.sport_id,t1_0.id,t1_0.team_name from teams t1_0 where t1_0.sport_id=?
[DEBUG] 2024-11-27 16:52:21.840 [main] results - Extracted JDBC value [1] - [2]
[DEBUG] 2024-11-27 16:52:21.840 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 2
[DEBUG] 2024-11-27 16:52:21.840 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:52:21.840 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-27 16:52:21.840 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:52:21.840 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#2] : 1371539709
[DEBUG] 2024-11-27 16:52:21.840 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:52:21.840 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#2] - using loading instance
[DEBUG] 2024-11-27 16:52:21.842 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1628801015
[DEBUG] 2024-11-27 16:52:21.842 [main] results - Extracted JDBC value [2] - [Packers]
[DEBUG] 2024-11-27 16:52:21.842 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#2
[DEBUG] 2024-11-27 16:52:21.842 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1628801015
[DEBUG] 2024-11-27 16:52:21.842 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@4af84a76
[DEBUG] 2024-11-27 16:52:21.842 [main] results - Extracted JDBC value [1] - [4]
[DEBUG] 2024-11-27 16:52:21.842 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 4
[DEBUG] 2024-11-27 16:52:21.842 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:52:21.842 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-27 16:52:21.842 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:52:21.842 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#4] : 190838539
[DEBUG] 2024-11-27 16:52:21.842 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:52:21.842 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#2] - using loading instance
[DEBUG] 2024-11-27 16:52:21.842 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#2]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@1628801015
[DEBUG] 2024-11-27 16:52:21.842 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1628801015
[DEBUG] 2024-11-27 16:52:21.842 [main] results - Extracted JDBC value [2] - [Falcons]
[DEBUG] 2024-11-27 16:52:21.843 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#4
[DEBUG] 2024-11-27 16:52:21.843 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1628801015
[DEBUG] 2024-11-27 16:52:21.843 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@4af84a76
[DEBUG] 2024-11-27 16:52:21.843 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-27 16:52:21.844 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:52:21.844 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:52:21.845 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.sport -> EntitySelectFetchInitializer(com.radams.entity.Sport.teams.{element}.sport)@1462452338 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@273401463)
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@841660110 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@199076007)
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1534365740 (PluralAttribute(com.radams.entity.Sport.teams))

[DEBUG] 2024-11-27 16:52:21.845 [main] SQL - select t1_0.sport_id,t1_0.id,t1_0.team_name from teams t1_0 where t1_0.sport_id=?
[DEBUG] 2024-11-27 16:52:21.846 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 16:52:21.846 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 16:52:21.846 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:52:21.846 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:52:21.846 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:52:21.846 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 2013063878
[DEBUG] 2024-11-27 16:52:21.846 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:52:21.846 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#1] - using loading instance
[DEBUG] 2024-11-27 16:52:21.846 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@807240950
[DEBUG] 2024-11-27 16:52:21.846 [main] results - Extracted JDBC value [2] - [Hawks]
[DEBUG] 2024-11-27 16:52:21.846 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-27 16:52:21.846 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@807240950
[DEBUG] 2024-11-27 16:52:21.846 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@563c3aca
[DEBUG] 2024-11-27 16:52:21.846 [main] results - Extracted JDBC value [1] - [3]
[DEBUG] 2024-11-27 16:52:21.846 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 16:52:21.846 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:52:21.846 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:52:21.846 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:52:21.846 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#3] : 1407280813
[DEBUG] 2024-11-27 16:52:21.846 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:52:21.847 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#1] - using loading instance
[DEBUG] 2024-11-27 16:52:21.847 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@807240950
[DEBUG] 2024-11-27 16:52:21.847 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@807240950
[DEBUG] 2024-11-27 16:52:21.847 [main] results - Extracted JDBC value [2] - [Bulls]
[DEBUG] 2024-11-27 16:52:21.847 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#3
[DEBUG] 2024-11-27 16:52:21.847 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@807240950
[DEBUG] 2024-11-27 16:52:21.847 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@563c3aca
[DEBUG] 2024-11-27 16:52:21.847 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 16:52:21.847 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:52:21.848 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:52:21.848 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:53:14.079 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-27 16:53:14.083 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-27 16:53:14.100 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-27 16:53:14.101 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-27 16:53:14.136 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-27 16:53:14.141 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-27 16:53:14.300 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-27 16:53:14.309 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-27 16:53:14.310 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-27 16:53:14.310 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:53:14.310 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-27 16:53:14.311 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-27 16:53:14.311 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-27 16:53:14.311 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-27 16:53:14.312 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:53:14.313 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-27 16:53:14.313 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-27 16:53:14.313 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-27 16:53:14.314 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-27 16:53:14.319 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-27 16:53:14.320 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-27 16:53:14.391 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2024-11-27 16:53:14.391 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2024-11-27 16:53:14.391 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2024-11-27 16:53:14.391 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@41fe8e5f
[DEBUG] 2024-11-27 16:53:14.391 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@41fe8e5f
[DEBUG] 2024-11-27 16:53:14.391 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2024-11-27 16:53:14.391 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2024-11-27 16:53:14.391 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:53:14.392 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-27 16:53:14.392 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:53:14.392 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:53:14.392 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-27 16:53:14.392 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:53:14.392 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:53:14.392 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-27 16:53:14.392 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:53:14.392 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-27 16:53:14.392 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-27 16:53:14.392 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:53:14.393 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-27 16:53:14.393 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-27 16:53:14.393 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-27 16:53:14.393 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:53:14.393 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:53:14.393 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-27 16:53:14.393 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:53:14.393 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:53:14.393 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-27 16:53:14.393 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:53:14.393 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:53:14.394 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-27 16:53:14.394 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:53:14.394 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:53:14.394 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-27 16:53:14.394 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:53:14.394 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:53:14.394 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-27 16:53:14.394 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:53:14.394 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-27 16:53:14.394 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:53:14.395 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-27 16:53:14.395 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:53:14.395 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:53:14.395 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-27 16:53:14.395 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-27 16:53:14.395 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:53:14.395 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-27 16:53:14.395 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-27 16:53:14.395 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:53:14.395 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:53:14.395 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-27 16:53:14.396 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-27 16:53:14.396 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-27 16:53:14.396 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-27 16:53:14.396 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:53:14.396 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-27 16:53:14.396 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:53:14.396 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-27 16:53:14.396 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-27 16:53:14.396 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-27 16:53:14.396 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-27 16:53:14.396 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-27 16:53:14.397 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-27 16:53:14.397 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-27 16:53:14.397 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:53:14.397 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-27 16:53:14.397 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:53:14.397 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-27 16:53:14.397 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:53:14.397 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-27 16:53:14.398 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:53:14.398 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-27 16:53:14.398 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:53:14.398 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-27 16:53:14.398 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-27 16:53:14.398 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-27 16:53:14.398 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:53:14.398 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-27 16:53:14.398 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-27 16:53:14.398 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-27 16:53:14.398 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-27 16:53:14.399 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:53:14.399 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-27 16:53:14.399 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-27 16:53:14.399 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-27 16:53:14.399 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:53:14.399 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-27 16:53:14.399 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:53:14.399 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-27 16:53:14.399 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:53:14.399 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:53:14.399 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-27 16:53:14.400 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:53:14.400 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:53:14.400 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-27 16:53:14.400 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-27 16:53:14.400 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-27 16:53:14.400 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:53:14.400 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-27 16:53:14.400 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:53:14.400 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:53:14.400 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-27 16:53:14.400 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-27 16:53:14.400 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-27 16:53:14.401 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:53:14.401 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-27 16:53:14.401 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:53:14.401 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:53:14.401 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-27 16:53:14.401 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:53:14.401 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-27 16:53:14.401 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:53:14.401 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-27 16:53:14.401 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:53:14.401 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-27 16:53:14.401 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:53:14.402 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-27 16:53:14.402 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:53:14.402 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-27 16:53:14.402 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-27 16:53:14.402 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-27 16:53:14.406 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@10643593
[DEBUG] 2024-11-27 16:53:14.406 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@10643593
[DEBUG] 2024-11-27 16:53:14.407 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1c7f96b1
[DEBUG] 2024-11-27 16:53:14.407 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7979b8b7
[DEBUG] 2024-11-27 16:53:14.407 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a04fea7
[DEBUG] 2024-11-27 16:53:14.407 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1bc49bc5
[DEBUG] 2024-11-27 16:53:14.407 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-27 16:53:14.407 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-27 16:53:14.407 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-27 16:53:14.407 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-27 16:53:14.407 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@24e83d19
[INFO ] 2024-11-27 16:53:14.427 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-27 16:53:14.427 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-27 16:53:14.427 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-27 16:53:14.489 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-27 16:53:14.557 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-27 16:53:14.557 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-27 16:53:14.557 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-27 16:53:14.590 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-27 16:53:14.590 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-27 16:53:14.594 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-27 16:53:14.594 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-27 16:53:14.604 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29b40b3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d247660)
[DEBUG] 2024-11-27 16:53:14.605 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@656f62dc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f)
[DEBUG] 2024-11-27 16:53:14.605 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a)
[DEBUG] 2024-11-27 16:53:14.605 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@513b52af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5a8c93)
[DEBUG] 2024-11-27 16:53:14.605 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bed3315) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892)
[DEBUG] 2024-11-27 16:53:14.605 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4)
[DEBUG] 2024-11-27 16:53:14.605 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c7350b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434)
[DEBUG] 2024-11-27 16:53:14.605 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bc4ef12) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50448409)
[DEBUG] 2024-11-27 16:53:14.605 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5634a861) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b0dc227)
[DEBUG] 2024-11-27 16:53:14.606 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-27 16:53:14.606 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:53:14.607 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-27 16:53:14.608 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:53:14.608 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-27 16:53:14.610 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6b63e6ad
[DEBUG] 2024-11-27 16:53:14.610 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1c7f96b1`
[DEBUG] 2024-11-27 16:53:14.614 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:53:14.614 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:53:14.614 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-27 16:53:14.616 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:53:14.616 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:53:14.616 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-27 16:53:14.616 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:53:14.617 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:53:14.617 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-27 16:53:14.617 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:53:14.617 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:53:14.617 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-27 16:53:14.618 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bc2e16] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48e8c32a]
[DEBUG] 2024-11-27 16:53:14.644 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-27 16:53:14.660 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-27 16:53:14.666 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-27 16:53:14.670 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-27 16:53:14.676 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:53:14.691 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:53:14.691 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:53:14.691 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:53:14.693 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:53:14.696 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-27 16:53:14.698 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:53:14.701 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-27 16:53:14.702 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:53:14.704 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:53:14.709 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:53:14.709 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:53:14.716 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-27 16:53:14.718 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:53:14.718 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:53:14.719 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-27 16:53:14.719 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:53:14.720 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:53:14.722 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:53:14.723 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-27 16:53:14.723 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-27 16:53:14.724 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-27 16:53:14.724 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-27 16:53:14.724 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-27 16:53:14.724 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-27 16:53:14.724 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-27 16:53:14.724 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:53:14.728 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:53:14.728 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-27 16:53:14.728 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-27 16:53:14.728 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:53:14.729 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:53:14.729 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:53:14.729 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:53:14.729 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:53:14.729 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-27 16:53:14.730 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:53:14.730 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-27 16:53:14.730 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:53:14.730 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:53:14.730 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-27 16:53:14.730 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-27 16:53:14.730 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-27 16:53:14.730 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-27 16:53:14.730 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-27 16:53:14.730 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-27 16:53:14.731 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:53:14.731 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:53:14.731 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-27 16:53:14.731 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:53:14.731 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:53:14.731 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-27 16:53:14.732 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:53:14.732 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-27 16:53:14.732 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:53:14.732 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-27 16:53:14.732 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:53:14.733 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:53:14.733 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-27 16:53:14.733 [main] EntityBinder - Bind entity com.radams.entity.Team on table teams
[DEBUG] 2024-11-27 16:53:14.733 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:53:14.736 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:53:14.736 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:53:14.737 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:53:14.737 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:53:14.737 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-27 16:53:14.737 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:53:14.737 [main] BasicValue - Skipping column re-registration: teams.id
[DEBUG] 2024-11-27 16:53:14.737 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:53:14.737 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:53:14.737 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-27 16:53:14.738 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:53:14.740 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-27 16:53:14.740 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-27 16:53:14.740 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-27 16:53:14.740 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-27 16:53:14.740 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-27 16:53:14.740 [main] BasicValue - Skipping column re-registration: teams.team_name
[DEBUG] 2024-11-27 16:53:14.740 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-27 16:53:14.740 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:53:14.741 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:53:14.741 [main] EntityBinder - Import with entity name FavoriteTeam
[DEBUG] 2024-11-27 16:53:14.741 [main] EntityBinder - Bind entity com.radams.entity.FavoriteTeam on table favorite_teams
[DEBUG] 2024-11-27 16:53:14.741 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-27 16:53:14.742 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:53:14.742 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:53:14.742 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:53:14.742 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-27 16:53:14.742 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.FavoriteTeam:id]
[DEBUG] 2024-11-27 16:53:14.742 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-27 16:53:14.742 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-27 16:53:14.742 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-27 16:53:14.743 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-27 16:53:14.743 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='team_id')
[DEBUG] 2024-11-27 16:53:14.743 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:53:14.743 [main] PropertyBinder - Building property team
[DEBUG] 2024-11-27 16:53:14.743 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-27 16:53:14.743 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-27 16:53:14.744 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-27 16:53:14.744 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-27 16:53:14.745 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:53:14.745 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-27 16:53:14.746 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:53:14.746 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-27 16:53:14.746 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:53:14.746 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-27 16:53:14.746 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-27 16:53:14.749 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-27 16:53:14.749 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-27 16:53:14.750 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2024-11-27 16:53:14.750 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-27 16:53:14.750 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:53:14.751 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-27 16:53:14.752 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-27 16:53:14.753 [main] TableBinder - Retrieving property com.radams.entity.FavoriteTeam.user
[DEBUG] 2024-11-27 16:53:14.753 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:53:14.753 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:53:14.753 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-27 16:53:14.753 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> teams
[DEBUG] 2024-11-27 16:53:14.754 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-27 16:53:14.754 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-27 16:53:14.754 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:53:14.755 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:53:14.755 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:53:14.762 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Team
[DEBUG] 2024-11-27 16:53:14.762 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-27 16:53:14.762 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:53:14.970 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-27 16:53:14.999 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:53:14.999 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.SportDaoTest,getByPropertyLike, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25a5c8e, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-27 16:53:15.002 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-27 16:53:15.007 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:53:15.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-27 16:53:15.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-27 16:53:15.035 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-27 16:53:15.036 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-27 16:53:15.037 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@25699aa7] under count; prior registration was null
[DEBUG] 2024-11-27 16:53:15.037 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@693f2213] under every; prior registration was null
[DEBUG] 2024-11-27 16:53:15.037 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@514377fc] under any; prior registration was null
[DEBUG] 2024-11-27 16:53:15.037 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-27 16:53:15.038 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-27 16:53:15.038 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-27 16:53:15.038 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-27 16:53:15.038 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-27 16:53:15.038 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-27 16:53:15.038 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-27 16:53:15.038 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-27 16:53:15.038 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-27 16:53:15.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-27 16:53:15.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-27 16:53:15.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-27 16:53:15.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-27 16:53:15.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-27 16:53:15.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-27 16:53:15.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-27 16:53:15.039 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-27 16:53:15.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59b492ec] under sinh; prior registration was null
[DEBUG] 2024-11-27 16:53:15.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55c1ced9] under cosh; prior registration was null
[DEBUG] 2024-11-27 16:53:15.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49cc9b2a] under tanh; prior registration was null
[DEBUG] 2024-11-27 16:53:15.040 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398] under pi; prior registration was null
[DEBUG] 2024-11-27 16:53:15.041 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6] under log; prior registration was null
[DEBUG] 2024-11-27 16:53:15.041 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-27 16:53:15.041 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-27 16:53:15.041 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-27 16:53:15.041 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-27 16:53:15.042 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-27 16:53:15.042 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-27 16:53:15.042 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-27 16:53:15.042 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-27 16:53:15.043 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-27 16:53:15.043 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-27 16:53:15.043 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-27 16:53:15.043 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-27 16:53:15.044 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@33d230ce] under position; prior registration was null
[DEBUG] 2024-11-27 16:53:15.046 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7caf1e5] under overlay; prior registration was null
[DEBUG] 2024-11-27 16:53:15.046 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@681de87f] under trim; prior registration was null
[DEBUG] 2024-11-27 16:53:15.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4e974b9e] under cast; prior registration was null
[DEBUG] 2024-11-27 16:53:15.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@370c7cc5] under collate; prior registration was null
[DEBUG] 2024-11-27 16:53:15.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@a056b26] under extract; prior registration was null
[DEBUG] 2024-11-27 16:53:15.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-27 16:53:15.047 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-27 16:53:15.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4bce62b] under ifnull; prior registration was null
[DEBUG] 2024-11-27 16:53:15.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-27 16:53:15.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-27 16:53:15.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5c82031b] under pad; prior registration was null
[DEBUG] 2024-11-27 16:53:15.048 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@661e1399] under str; prior registration was null
[DEBUG] 2024-11-27 16:53:15.049 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@53d30d23] under format; prior registration was null
[DEBUG] 2024-11-27 16:53:15.050 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@59e7564b] under timestampadd; prior registration was null
[DEBUG] 2024-11-27 16:53:15.050 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1471b98d] under timestampdiff; prior registration was null
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23564dd2] under current_date; prior registration was null
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54895681] under current_time; prior registration was null
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2dd0a0d0] under current_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bf570c] under local_date; prior registration was null
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1796b2d4] under local_time; prior registration was null
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@935d3f9] under local_datetime; prior registration was null
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@214b342f] under offset_datetime; prior registration was null
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5db0003d] under instant; prior registration was null
[DEBUG] 2024-11-27 16:53:15.051 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-27 16:53:15.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7de147e9] under sql; prior registration was null
[DEBUG] 2024-11-27 16:53:15.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-27 16:53:15.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-27 16:53:15.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-27 16:53:15.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-27 16:53:15.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c5ca0b6
[DEBUG] 2024-11-27 16:53:15.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-27 16:53:15.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-27 16:53:15.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-27 16:53:15.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-27 16:53:15.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-27 16:53:15.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-27 16:53:15.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-27 16:53:15.052 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-27 16:53:15.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@8eb6f9a] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-27 16:53:15.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@29170a47] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-27 16:53:15.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-27 16:53:15.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-27 16:53:15.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-27 16:53:15.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-27 16:53:15.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-27 16:53:15.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-27 16:53:15.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-27 16:53:15.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-27 16:53:15.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-27 16:53:15.053 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-27 16:53:15.053 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-27 16:53:15.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-27 16:53:15.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-27 16:53:15.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-27 16:53:15.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-27 16:53:15.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-27 16:53:15.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-27 16:53:15.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-27 16:53:15.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-27 16:53:15.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-27 16:53:15.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-27 16:53:15.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-27 16:53:15.054 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-27 16:53:15.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-27 16:53:15.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-27 16:53:15.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-27 16:53:15.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-27 16:53:15.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-27 16:53:15.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-27 16:53:15.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-27 16:53:15.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-27 16:53:15.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-27 16:53:15.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-27 16:53:15.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a8f8555] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@33d230ce
[DEBUG] 2024-11-27 16:53:15.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-27 16:53:15.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-27 16:53:15.055 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-27 16:53:15.058 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@759a678a] under trunc; prior registration was null
[DEBUG] 2024-11-27 16:53:15.058 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-27 16:53:15.058 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-27 16:53:15.058 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cdbe5ec] under bitand; prior registration was null
[DEBUG] 2024-11-27 16:53:15.058 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14b8a751] under bitor; prior registration was null
[DEBUG] 2024-11-27 16:53:15.058 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7345f97d] under bitxor; prior registration was null
[DEBUG] 2024-11-27 16:53:15.058 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@554566a8] under bitnot; prior registration was null
[DEBUG] 2024-11-27 16:53:15.058 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-27 16:53:15.058 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-27 16:53:15.058 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-27 16:53:15.058 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-27 16:53:15.058 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-27 16:53:15.058 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@66020d69] under format; prior registration was org.hibernate.dialect.function.FormatFunction@53d30d23
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1796b2d4
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@935d3f9
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-27 16:53:15.059 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3751acd7] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11826398
[DEBUG] 2024-11-27 16:53:15.060 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b832551] under chr; prior registration was null
[DEBUG] 2024-11-27 16:53:15.060 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-27 16:53:15.060 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@150d6eaf] under sysdate; prior registration was null
[DEBUG] 2024-11-27 16:53:15.060 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-27 16:53:15.060 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-27 16:53:15.060 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-27 16:53:15.060 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-27 16:53:15.060 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-27 16:53:15.060 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-27 16:53:15.061 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@611c3eae] under rank; prior registration was null
[DEBUG] 2024-11-27 16:53:15.061 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@13e00016] under dense_rank; prior registration was null
[DEBUG] 2024-11-27 16:53:15.061 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7b3cbe6e] under percent_rank; prior registration was null
[DEBUG] 2024-11-27 16:53:15.061 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@177ede17] under cume_dist; prior registration was null
[DEBUG] 2024-11-27 16:53:15.062 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7b5ac347] under listagg; prior registration was null
[DEBUG] 2024-11-27 16:53:15.065 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.065 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.065 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:53:15.065 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:53:15.065 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-27 16:53:15.065 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-27 16:53:15.065 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-27 16:53:15.066 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:53:15.067 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:53:15.068 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-27 16:53:15.069 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-27 16:53:15.070 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-27 16:53:15.070 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-27 16:53:15.070 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-27 16:53:15.070 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-27 16:53:15.070 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-27 16:53:15.070 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-27 16:53:15.070 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-27 16:53:15.070 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-27 16:53:15.070 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.070 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.070 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-27 16:53:15.070 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-27 16:53:15.070 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-27 16:53:15.073 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-27 16:53:15.170 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-27 16:53:15.171 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-27 16:53:15.259 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:53:15.262 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:53:15.264 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-27 16:53:15.264 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-27 16:53:15.390 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-27 16:53:15.393 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:53:15.414 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:53:15.414 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:53:15.414 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:53:15.414 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:53:15.414 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.FavoriteTeam] is safe
[DEBUG] 2024-11-27 16:53:15.414 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:53:15.428 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.FavoriteTeam]: private accessor [team]
[DEBUG] 2024-11-27 16:53:15.428 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:53:15.428 [main] interceptor - To-one property `com.radams.entity.FavoriteTeam#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-27 16:53:15.429 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-27 16:53:15.429 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-27 16:53:15.441 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-27 16:53:15.441 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-27 16:53:15.441 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-27 16:53:15.450 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-27 16:53:15.460 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:53:15.461 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:53:15.461 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:53:15.462 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:53:15.462 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:53:15.462 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:53:15.483 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-27 16:53:15.483 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-27 16:53:15.485 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:53:15.485 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.team]
[DEBUG] 2024-11-27 16:53:15.486 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.FavoriteTeam.user]
[DEBUG] 2024-11-27 16:53:15.486 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.FavoriteTeam) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:53:15.486 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:53:15.486 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-27 16:53:15.486 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-27 16:53:15.486 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:53:15.486 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:53:15.486 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-27 16:53:15.486 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-27 16:53:15.486 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-27 16:53:15.486 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:53:15.486 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-27 16:53:15.536 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:53:15.537 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-27 16:53:15.544 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4fafd27e] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-27 16:53:15.545 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:53:15.553 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  \-BasicFetch [com.radams.entity.Team.teamName]

[DEBUG] 2024-11-27 16:53:15.561 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:53:15.568 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-27 16:53:15.568 [main] AbstractEntityPersister -  Version select: select id from teams where id=?
[DEBUG] 2024-11-27 16:53:15.568 [main] AbstractEntityPersister -  Insert (0): insert into teams (sport_id,team_name) values (?,?)
[DEBUG] 2024-11-27 16:53:15.568 [main] AbstractEntityPersister -  Update (0): update teams set sport_id=?,team_name=? where id=?
[DEBUG] 2024-11-27 16:53:15.568 [main] AbstractEntityPersister -  Delete (0): delete from teams where id=?
[DEBUG] 2024-11-27 16:53:15.568 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:53:15.568 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.FavoriteTeam)] with identifierForTableGroup [com.radams.entity.FavoriteTeam] for NavigablePath [com.radams.entity.FavoriteTeam] 
[DEBUG] 2024-11-27 16:53:15.568 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@335b3d6] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team] for NavigablePath [com.radams.entity.FavoriteTeam.team] 
[DEBUG] 2024-11-27 16:53:15.568 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:53:15.569 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3a5ce4b8] with identifierForTableGroup [com.radams.entity.FavoriteTeam.team.sport] for NavigablePath [com.radams.entity.FavoriteTeam.team.sport] 
[DEBUG] 2024-11-27 16:53:15.569 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:53:15.569 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65262308] with identifierForTableGroup [com.radams.entity.FavoriteTeam.user] for NavigablePath [com.radams.entity.FavoriteTeam.user] 
[DEBUG] 2024-11-27 16:53:15.569 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:53:15.569 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.FavoriteTeam]
 |  +-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.team]
 |  \-EntityFetchJoinedImpl [com.radams.entity.FavoriteTeam.user]

[DEBUG] 2024-11-27 16:53:15.569 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ft1 : com.radams.entity.FavoriteTeam) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.FavoriteTeam.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.FavoriteTeam.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.FavoriteTeam.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:53:15.569 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.FavoriteTeam
[DEBUG] 2024-11-27 16:53:15.569 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-27 16:53:15.569 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (team_id,user_id) values (?,?)
[DEBUG] 2024-11-27 16:53:15.570 [main] AbstractEntityPersister -  Update (0): update favorite_teams set team_id=?,user_id=? where id=?
[DEBUG] 2024-11-27 16:53:15.570 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-27 16:53:15.570 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:53:15.570 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 16:53:15.571 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:53:15.572 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5d22604e] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:53:15.572 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:53:15.578 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-27 16:53:15.578 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : teams as t1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:53:15.578 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-27 16:53:15.578 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-27 16:53:15.578 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-27 16:53:15.578 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-27 16:53:15.579 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-27 16:53:15.579 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-27 16:53:15.579 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-27 16:53:15.579 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:53:15.579 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6d2db15b] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:53:15.579 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:53:15.579 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@749ad37c] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:53:15.579 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:53:15.579 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@591e5fd4] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:53:15.580 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-27 16:53:15.580 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
                  primaryTableReference : teams as t1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:53:15.580 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-27 16:53:15.580 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-27 16:53:15.580 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-27 16:53:15.581 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-27 16:53:15.581 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-27 16:53:15.581 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-27 16:53:15.581 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@398f0516] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-27 16:53:15.581 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-27 16:53:15.582 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6dbb3d7d] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team] 
[DEBUG] 2024-11-27 16:53:15.582 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:53:15.582 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a3a49e5] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.team.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.team.sport] 
[DEBUG] 2024-11-27 16:53:15.582 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:53:15.582 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c1b82cd] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-27 16:53:15.583 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-27 16:53:15.584 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (t1 : com.radams.entity.User.favoriteTeams.{element}.team) {
              primaryTableReference : teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.team.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:53:15.584 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-27 16:53:15.584 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-27 16:53:15.584 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@69de72ec] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-27 16:53:15.584 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-27 16:53:15.584 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@21c99abf] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-27 16:53:15.584 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-27 16:53:15.584 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-27 16:53:15.584 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-27 16:53:15.607 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-27 16:53:15.608 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-27 16:53:15.611 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-27 16:53:15.611 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-27 16:53:15.612 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bc2e16] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@fd69983]
[DEBUG] 2024-11-27 16:53:15.612 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-27 16:53:15.612 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-27 16:53:15.613 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-27 16:53:15.613 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-27 16:53:15.615 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@42238078
[DEBUG] 2024-11-27 16:53:15.615 [main] SessionFactoryRegistry - Registering SessionFactory: 6ff5f54d-e40d-447c-8af9-ca973b3938e9 (<unnamed>)
[DEBUG] 2024-11-27 16:53:15.615 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-27 16:53:15.615 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-27 16:53:15.659 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-27 16:53:15.747 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-27 16:53:15.747 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport(85314240036285))] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-27 16:53:15.755 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3275a47f
[DEBUG] 2024-11-27 16:53:15.755 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.radams.entity.Sport(85314240036285).sportName) 
[DEBUG] 2024-11-27 16:53:15.760 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport(85314240036285)]
 |  +-BasicFetch [com.radams.entity.Sport(85314240036285).sportName]
 |  \-SelectEagerCollectionFetch [com.radams.entity.Sport(85314240036285).teams]

[DEBUG] 2024-11-27 16:53:15.760 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport(85314240036285)) {
          primaryTableReference : sports as s1_0
        }
      }
    }

[DEBUG] 2024-11-27 16:53:15.767 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2024-11-27 16:53:15.776 [main] results - Initializer list:
	  com.radams.entity.Sport(85314240036285) -> EntityResultInitializer(com.radams.entity.Sport(85314240036285))@1151617540 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport(85314240036285).teams -> SelectEagerCollectionInitializer(com.radams.entity.Sport(85314240036285).teams)@1516501617 (PluralAttribute(com.radams.entity.Sport.teams))

[DEBUG] 2024-11-27 16:53:15.780 [main] SQL - select s1_0.id,s1_0.name from sports s1_0 where s1_0.name like ? escape ''
[DEBUG] 2024-11-27 16:53:15.792 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:53:15.792 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport(85314240036285)): 1
[DEBUG] 2024-11-27 16:53:15.793 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : com.radams.entity.Sport(85314240036285).teams#1
[DEBUG] 2024-11-27 16:53:15.794 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport(85314240036285)#1] : 1525186016
[DEBUG] 2024-11-27 16:53:15.798 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-27 16:53:15.801 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport(85314240036285)#1
[DEBUG] 2024-11-27 16:53:15.801 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ff0706c
[DEBUG] 2024-11-27 16:53:15.801 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:53:15.801 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport(85314240036285)): 2
[DEBUG] 2024-11-27 16:53:15.801 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : com.radams.entity.Sport(85314240036285).teams#2
[DEBUG] 2024-11-27 16:53:15.801 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport(85314240036285)#2] : 757788974
[DEBUG] 2024-11-27 16:53:15.801 [main] results - Extracted JDBC value [1] - [NFL]
[DEBUG] 2024-11-27 16:53:15.801 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport(85314240036285)#2
[DEBUG] 2024-11-27 16:53:15.801 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ff0706c
[DEBUG] 2024-11-27 16:53:15.803 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:53:15.810 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.sport -> EntitySelectFetchInitializer(com.radams.entity.Sport.teams.{element}.sport)@921500150 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@273401463)
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@684660636 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@199076007)
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@826884252 (PluralAttribute(com.radams.entity.Sport.teams))

[DEBUG] 2024-11-27 16:53:15.811 [main] SQL - select t1_0.sport_id,t1_0.id,t1_0.team_name from teams t1_0 where t1_0.sport_id=?
[DEBUG] 2024-11-27 16:53:15.812 [main] results - Extracted JDBC value [1] - [2]
[DEBUG] 2024-11-27 16:53:15.812 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 2
[DEBUG] 2024-11-27 16:53:15.812 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:53:15.812 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-27 16:53:15.812 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:53:15.812 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#2] : 1371539709
[DEBUG] 2024-11-27 16:53:15.812 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:53:15.812 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#2] - using loading instance
[DEBUG] 2024-11-27 16:53:15.813 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1628801015
[DEBUG] 2024-11-27 16:53:15.813 [main] results - Extracted JDBC value [2] - [Packers]
[DEBUG] 2024-11-27 16:53:15.813 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#2
[DEBUG] 2024-11-27 16:53:15.813 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1628801015
[DEBUG] 2024-11-27 16:53:15.813 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@4af84a76
[DEBUG] 2024-11-27 16:53:15.814 [main] results - Extracted JDBC value [1] - [4]
[DEBUG] 2024-11-27 16:53:15.814 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 4
[DEBUG] 2024-11-27 16:53:15.814 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:53:15.814 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-27 16:53:15.814 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:53:15.814 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#4] : 190838539
[DEBUG] 2024-11-27 16:53:15.814 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-27 16:53:15.814 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#2] - using loading instance
[DEBUG] 2024-11-27 16:53:15.814 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#2]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@1628801015
[DEBUG] 2024-11-27 16:53:15.814 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1628801015
[DEBUG] 2024-11-27 16:53:15.814 [main] results - Extracted JDBC value [2] - [Falcons]
[DEBUG] 2024-11-27 16:53:15.814 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#4
[DEBUG] 2024-11-27 16:53:15.814 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1628801015
[DEBUG] 2024-11-27 16:53:15.814 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@4af84a76
[DEBUG] 2024-11-27 16:53:15.815 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-27 16:53:15.815 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:53:15.816 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-27 16:53:15.816 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.sport -> EntitySelectFetchInitializer(com.radams.entity.Sport.teams.{element}.sport)@1462452338 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@273401463)
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@841660110 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@199076007)
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1534365740 (PluralAttribute(com.radams.entity.Sport.teams))

[DEBUG] 2024-11-27 16:53:15.816 [main] SQL - select t1_0.sport_id,t1_0.id,t1_0.team_name from teams t1_0 where t1_0.sport_id=?
[DEBUG] 2024-11-27 16:53:15.817 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2024-11-27 16:53:15.817 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-27 16:53:15.817 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:53:15.817 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:53:15.817 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:53:15.817 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 2013063878
[DEBUG] 2024-11-27 16:53:15.817 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:53:15.817 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#1] - using loading instance
[DEBUG] 2024-11-27 16:53:15.817 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@807240950
[DEBUG] 2024-11-27 16:53:15.817 [main] results - Extracted JDBC value [2] - [Hawks]
[DEBUG] 2024-11-27 16:53:15.817 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-27 16:53:15.817 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@807240950
[DEBUG] 2024-11-27 16:53:15.817 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@563c3aca
[DEBUG] 2024-11-27 16:53:15.817 [main] results - Extracted JDBC value [1] - [3]
[DEBUG] 2024-11-27 16:53:15.817 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 3
[DEBUG] 2024-11-27 16:53:15.817 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:53:15.817 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-27 16:53:15.817 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:53:15.817 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#3] : 1407280813
[DEBUG] 2024-11-27 16:53:15.817 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-27 16:53:15.817 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [com.radams.entity.Sport.teams.{element}.sport#1] - using loading instance
[DEBUG] 2024-11-27 16:53:15.818 [main] collection - (SetInitializer) Found existing loading collection entry [com.radams.entity.Sport.teams#1]; using loading collection instance - org.hibernate.collection.spi.PersistentSet@807240950
[DEBUG] 2024-11-27 16:53:15.818 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@807240950
[DEBUG] 2024-11-27 16:53:15.818 [main] results - Extracted JDBC value [2] - [Bulls]
[DEBUG] 2024-11-27 16:53:15.818 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#3
[DEBUG] 2024-11-27 16:53:15.818 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#1] -> org.hibernate.collection.spi.PersistentSet@807240950
[DEBUG] 2024-11-27 16:53:15.818 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@563c3aca
[DEBUG] 2024-11-27 16:53:15.818 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-27 16:53:15.818 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:53:15.818 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-27 16:53:15.818 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
