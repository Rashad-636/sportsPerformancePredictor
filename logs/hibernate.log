[DEBUG] 2024-11-25 16:33:02.280 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 16:33:02.287 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-25 16:33:02.317 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-25 16:33:02.319 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-25 16:33:02.370 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 16:33:02.375 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 16:33:02.546 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-25 16:33:02.549 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-25 16:33:02.549 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-25 16:33:02.550 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:33:02.550 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:33:02.550 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-25 16:33:02.551 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-25 16:33:02.551 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-25 16:33:02.552 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:33:02.553 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-25 16:33:02.553 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-25 16:33:02.553 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:33:02.554 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-25 16:33:02.561 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-25 16:33:02.561 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-25 16:33:02.655 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:33:02.655 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:33:02.655 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:33:02.655 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 16:33:02.655 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 16:33:02.655 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 16:33:02.655 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 16:33:02.655 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 16:33:02.655 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 16:33:02.655 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:33:02.656 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:33:02.656 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:33:02.656 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:33:02.656 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:33:02.656 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:33:02.656 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 16:33:02.656 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 16:33:02.656 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-25 16:33:02.656 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 16:33:02.656 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 16:33:02.656 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-25 16:33:02.656 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-25 16:33:02.657 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:33:02.657 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:33:02.657 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:33:02.657 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:33:02.657 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:33:02.657 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:33:02.657 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:33:02.657 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:33:02.657 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:33:02.657 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:33:02.657 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:33:02.657 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:33:02.657 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:33:02.657 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:33:02.657 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:33:02.658 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 16:33:02.658 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 16:33:02.658 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 16:33:02.658 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 16:33:02.658 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:33:02.658 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:33:02.658 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:33:02.658 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-25 16:33:02.658 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 16:33:02.658 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 16:33:02.658 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-25 16:33:02.658 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:33:02.658 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:33:02.659 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:33:02.659 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-25 16:33:02.659 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-25 16:33:02.659 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-25 16:33:02.659 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 16:33:02.659 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 16:33:02.659 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 16:33:02.659 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 16:33:02.659 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-25 16:33:02.659 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-25 16:33:02.659 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-25 16:33:02.659 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-25 16:33:02.659 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-25 16:33:02.659 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-25 16:33:02.660 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 16:33:02.660 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 16:33:02.660 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 16:33:02.660 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 16:33:02.660 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 16:33:02.660 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 16:33:02.660 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 16:33:02.660 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 16:33:02.660 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 16:33:02.660 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 16:33:02.660 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-25 16:33:02.661 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-25 16:33:02.661 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 16:33:02.661 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 16:33:02.661 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-25 16:33:02.661 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-25 16:33:02.661 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-25 16:33:02.661 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 16:33:02.661 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 16:33:02.661 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-25 16:33:02.661 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-25 16:33:02.662 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 16:33:02.662 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 16:33:02.662 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 16:33:02.662 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 16:33:02.662 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:33:02.662 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:33:02.662 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:33:02.662 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:33:02.662 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:33:02.662 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:33:02.662 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-25 16:33:02.662 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-25 16:33:02.663 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 16:33:02.663 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 16:33:02.663 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:33:02.663 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:33:02.663 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:33:02.663 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-25 16:33:02.663 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-25 16:33:02.663 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 16:33:02.663 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 16:33:02.663 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:33:02.663 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:33:02.663 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:33:02.663 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 16:33:02.664 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 16:33:02.664 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 16:33:02.664 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 16:33:02.664 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 16:33:02.664 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 16:33:02.664 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 16:33:02.664 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 16:33:02.664 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-25 16:33:02.664 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-25 16:33:02.664 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-25 16:33:02.664 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-25 16:33:02.669 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-25 16:33:02.669 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-25 16:33:02.670 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@491f8831
[DEBUG] 2024-11-25 16:33:02.671 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@691541bc
[DEBUG] 2024-11-25 16:33:02.671 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b733ef7
[DEBUG] 2024-11-25 16:33:02.671 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43a4a9e5
[DEBUG] 2024-11-25 16:33:02.671 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@764fffa0
[DEBUG] 2024-11-25 16:33:02.671 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35145874
[DEBUG] 2024-11-25 16:33:02.671 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77524ca7
[DEBUG] 2024-11-25 16:33:02.671 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11df2829
[DEBUG] 2024-11-25 16:33:02.671 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18e4674d
[INFO ] 2024-11-25 16:33:02.695 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-25 16:33:02.695 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-25 16:33:02.695 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-25 16:33:02.790 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-25 16:33:02.860 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-25 16:33:02.860 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-25 16:33:02.860 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-25 16:33:02.902 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-25 16:33:02.903 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-25 16:33:02.909 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-25 16:33:02.909 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-25 16:33:02.922 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eaf8427) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c)
[DEBUG] 2024-11-25 16:33:02.922 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d6039df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae)
[DEBUG] 2024-11-25 16:33:02.922 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e00016) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3cbe6e)
[DEBUG] 2024-11-25 16:33:02.922 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@177ede17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17176b18)
[DEBUG] 2024-11-25 16:33:02.922 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e4395c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab53860)
[DEBUG] 2024-11-25 16:33:02.923 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5ac347) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b9389f)
[DEBUG] 2024-11-25 16:33:02.923 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b2c5ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41f785e3)
[DEBUG] 2024-11-25 16:33:02.923 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9a3661) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727986ad)
[DEBUG] 2024-11-25 16:33:02.923 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1600a8a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b25ef1c)
[DEBUG] 2024-11-25 16:33:02.924 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-25 16:33:02.924 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:33:02.925 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:33:02.927 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:33:02.927 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:33:02.929 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@383cdd4d
[DEBUG] 2024-11-25 16:33:02.930 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@491f8831`
[DEBUG] 2024-11-25 16:33:02.934 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:33:02.934 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:33:02.934 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:33:02.937 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:33:02.937 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:33:02.937 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:33:02.937 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:33:02.937 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:33:02.937 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:33:02.938 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:33:02.938 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:33:02.938 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:33:02.939 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71369e1a]
[DEBUG] 2024-11-25 16:33:02.972 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-25 16:33:02.998 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-25 16:33:03.005 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-25 16:33:03.010 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-25 16:33:03.019 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:33:03.045 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:33:03.046 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:33:03.046 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:33:03.048 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:33:03.051 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-25 16:33:03.054 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:33:03.056 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-25 16:33:03.057 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:33:03.060 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:33:03.065 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:33:03.065 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:33:03.074 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-25 16:33:03.075 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:33:03.076 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:33:03.076 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:33:03.077 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:33:03.077 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:33:03.080 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:33:03.081 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-25 16:33:03.082 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-25 16:33:03.082 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-25 16:33:03.082 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-25 16:33:03.082 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-25 16:33:03.082 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-25 16:33:03.082 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-25 16:33:03.083 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:33:03.087 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:33:03.088 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-25 16:33:03.088 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-25 16:33:03.088 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:33:03.089 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:33:03.089 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:33:03.089 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:33:03.089 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:33:03.089 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-25 16:33:03.089 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:33:03.089 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-25 16:33:03.089 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:33:03.089 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:33:03.090 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-25 16:33:03.090 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-25 16:33:03.090 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-25 16:33:03.090 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-25 16:33:03.090 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-25 16:33:03.090 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-25 16:33:03.090 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:33:03.090 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:33:03.090 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-25 16:33:03.091 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:33:03.091 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:33:03.091 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:33:03.091 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:33:03.091 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:33:03.091 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:33:03.091 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-25 16:33:03.091 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:33:03.092 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-25 16:33:03.092 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-25 16:33:03.092 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-25 16:33:03.093 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:33:03.095 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:33:03.095 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:33:03.096 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:33:03.096 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:33:03.096 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-25 16:33:03.096 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:33:03.096 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-25 16:33:03.096 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:33:03.096 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:33:03.096 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-25 16:33:03.096 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:33:03.099 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-25 16:33:03.099 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-25 16:33:03.099 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-25 16:33:03.099 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-25 16:33:03.099 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-25 16:33:03.099 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-25 16:33:03.099 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-25 16:33:03.099 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-25 16:33:03.099 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:33:03.100 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-25 16:33:03.100 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:33:03.101 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:33:03.101 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-25 16:33:03.102 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:33:03.102 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-25 16:33:03.102 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:33:03.102 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-25 16:33:03.105 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-25 16:33:03.106 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-25 16:33:03.106 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-25 16:33:03.106 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:33:03.108 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-25 16:33:03.109 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-25 16:33:03.110 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-25 16:33:03.110 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:33:03.111 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:33:03.111 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-25 16:33:03.111 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-25 16:33:03.111 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-25 16:33:03.111 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:33:03.111 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:33:03.111 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:33:03.120 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:33:03.121 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:33:03.296 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-25 16:33:03.338 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:33:03.338 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter8898362684818703783.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire9805300855645347388tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_08396851454139017650tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter8898362684818703783.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d7d8911, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-25 16:33:03.342 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-25 16:33:03.347 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:33:03.392 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-25 16:33:03.392 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-25 16:33:03.393 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-25 16:33:03.394 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-25 16:33:03.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@347b370c] under count; prior registration was null
[DEBUG] 2024-11-25 16:33:03.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@72a33316] under every; prior registration was null
[DEBUG] 2024-11-25 16:33:03.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@57fce8b] under any; prior registration was null
[DEBUG] 2024-11-25 16:33:03.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-25 16:33:03.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-25 16:33:03.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-25 16:33:03.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-25 16:33:03.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-25 16:33:03.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-25 16:33:03.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-25 16:33:03.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-25 16:33:03.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-25 16:33:03.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-25 16:33:03.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-25 16:33:03.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-25 16:33:03.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-25 16:33:03.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-25 16:33:03.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-25 16:33:03.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-25 16:33:03.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-25 16:33:03.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56f2c9e8] under sinh; prior registration was null
[DEBUG] 2024-11-25 16:33:03.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@457692cb] under cosh; prior registration was null
[DEBUG] 2024-11-25 16:33:03.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350342e0] under tanh; prior registration was null
[DEBUG] 2024-11-25 16:33:03.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d] under pi; prior registration was null
[DEBUG] 2024-11-25 16:33:03.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289] under log; prior registration was null
[DEBUG] 2024-11-25 16:33:03.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-25 16:33:03.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-25 16:33:03.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-25 16:33:03.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-25 16:33:03.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-25 16:33:03.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-25 16:33:03.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-25 16:33:03.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-25 16:33:03.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-25 16:33:03.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-25 16:33:03.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-25 16:33:03.400 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-25 16:33:03.401 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a] under position; prior registration was null
[DEBUG] 2024-11-25 16:33:03.403 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6fa2a006] under overlay; prior registration was null
[DEBUG] 2024-11-25 16:33:03.403 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@39695803] under trim; prior registration was null
[DEBUG] 2024-11-25 16:33:03.404 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@57b711b6] under cast; prior registration was null
[DEBUG] 2024-11-25 16:33:03.404 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2db461b5] under collate; prior registration was null
[DEBUG] 2024-11-25 16:33:03.405 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@55881f40] under extract; prior registration was null
[DEBUG] 2024-11-25 16:33:03.405 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-25 16:33:03.406 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-25 16:33:03.406 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11d1735e] under ifnull; prior registration was null
[DEBUG] 2024-11-25 16:33:03.406 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-25 16:33:03.406 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-25 16:33:03.407 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6282f1eb] under pad; prior registration was null
[DEBUG] 2024-11-25 16:33:03.407 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@64ed18ec] under str; prior registration was null
[DEBUG] 2024-11-25 16:33:03.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@25589735] under format; prior registration was null
[DEBUG] 2024-11-25 16:33:03.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7dddfc35] under timestampadd; prior registration was null
[DEBUG] 2024-11-25 16:33:03.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2336cd91] under timestampdiff; prior registration was null
[DEBUG] 2024-11-25 16:33:03.410 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-25 16:33:03.410 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-25 16:33:03.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c1e40d9] under current_date; prior registration was null
[DEBUG] 2024-11-25 16:33:03.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b50c21] under current_time; prior registration was null
[DEBUG] 2024-11-25 16:33:03.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e0fdc83] under current_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:33:03.410 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-25 16:33:03.411 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-25 16:33:03.411 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-25 16:33:03.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5dacf18d] under local_date; prior registration was null
[DEBUG] 2024-11-25 16:33:03.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@432a6a69] under local_time; prior registration was null
[DEBUG] 2024-11-25 16:33:03.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f52a229] under local_datetime; prior registration was null
[DEBUG] 2024-11-25 16:33:03.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fe98084] under offset_datetime; prior registration was null
[DEBUG] 2024-11-25 16:33:03.411 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-25 16:33:03.411 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-25 16:33:03.411 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-25 16:33:03.411 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-25 16:33:03.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f33e6d] under instant; prior registration was null
[DEBUG] 2024-11-25 16:33:03.411 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-25 16:33:03.412 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a1cb94] under sql; prior registration was null
[DEBUG] 2024-11-25 16:33:03.412 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-25 16:33:03.412 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-25 16:33:03.412 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-25 16:33:03.412 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-25 16:33:03.412 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289
[DEBUG] 2024-11-25 16:33:03.412 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-25 16:33:03.412 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-25 16:33:03.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-25 16:33:03.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-25 16:33:03.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-25 16:33:03.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-25 16:33:03.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-25 16:33:03.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-25 16:33:03.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@49bb808f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-25 16:33:03.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@563ada5] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-25 16:33:03.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-25 16:33:03.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-25 16:33:03.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-25 16:33:03.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-25 16:33:03.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-25 16:33:03.413 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:33:03.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-25 16:33:03.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-25 16:33:03.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-25 16:33:03.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-25 16:33:03.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-25 16:33:03.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-25 16:33:03.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-25 16:33:03.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-25 16:33:03.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-25 16:33:03.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-25 16:33:03.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12548f9a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a
[DEBUG] 2024-11-25 16:33:03.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-25 16:33:03.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-25 16:33:03.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-25 16:33:03.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2838eb] under trunc; prior registration was null
[DEBUG] 2024-11-25 16:33:03.418 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-25 16:33:03.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-25 16:33:03.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb5d334] under bitand; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45dc7be] under bitor; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under bitxor; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under bitnot; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4d664323] under format; prior registration was org.hibernate.dialect.function.FormatFunction@25589735
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-25 16:33:03.419 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-25 16:33:03.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@432a6a69
[DEBUG] 2024-11-25 16:33:03.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f52a229
[DEBUG] 2024-11-25 16:33:03.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-25 16:33:03.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ec0d06] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d
[DEBUG] 2024-11-25 16:33:03.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2676d96a] under chr; prior registration was null
[DEBUG] 2024-11-25 16:33:03.420 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-25 16:33:03.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under sysdate; prior registration was null
[DEBUG] 2024-11-25 16:33:03.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-25 16:33:03.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-25 16:33:03.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-25 16:33:03.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-25 16:33:03.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-25 16:33:03.420 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-25 16:33:03.421 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@77a9ac36] under rank; prior registration was null
[DEBUG] 2024-11-25 16:33:03.421 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3c743d40] under dense_rank; prior registration was null
[DEBUG] 2024-11-25 16:33:03.421 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5aac6f9f] under percent_rank; prior registration was null
[DEBUG] 2024-11-25 16:33:03.421 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2444c3df] under cume_dist; prior registration was null
[DEBUG] 2024-11-25 16:33:03.422 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@38848217] under listagg; prior registration was null
[DEBUG] 2024-11-25 16:33:03.425 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.425 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.425 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:33:03.425 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:33:03.425 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-25 16:33:03.425 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-25 16:33:03.425 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.425 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.425 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:33:03.425 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-25 16:33:03.425 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-25 16:33:03.425 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:33:03.425 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-25 16:33:03.425 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-25 16:33:03.426 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-25 16:33:03.427 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:33:03.428 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:33:03.429 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-25 16:33:03.430 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-25 16:33:03.430 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-25 16:33:03.430 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-25 16:33:03.430 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-25 16:33:03.430 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-25 16:33:03.430 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-25 16:33:03.430 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-25 16:33:03.430 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.430 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.430 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-25 16:33:03.430 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-25 16:33:03.430 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-25 16:33:03.433 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-25 16:33:03.535 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:33:03.536 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-25 16:33:03.642 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:33:03.645 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:33:03.648 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:33:03.648 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:33:03.648 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:33:03.648 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:33:03.807 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-25 16:33:03.811 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:33:03.811 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:33:03.838 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:33:03.838 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:33:03.853 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-25 16:33:03.853 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:33:03.853 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:33:03.862 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-25 16:33:03.877 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:33:03.878 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:33:03.878 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:33:03.879 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:33:03.879 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:33:03.879 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:33:03.905 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-25 16:33:03.905 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-25 16:33:03.909 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-25 16:33:03.910 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:33:03.910 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:33:03.910 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-25 16:33:03.910 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-25 16:33:03.910 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:33:03.910 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:33:03.910 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-25 16:33:03.910 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-25 16:33:03.910 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:33:03.910 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:33:03.910 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:33:03.978 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:33:03.979 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-25 16:33:03.988 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d01ea33] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-25 16:33:03.989 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:33:03.994 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c3fcbe7] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-25 16:33:03.994 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:33:03.999 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-25 16:33:04.007 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:33:04.016 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-25 16:33:04.016 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-25 16:33:04.016 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:33:04.016 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-25 16:33:04.016 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-25 16:33:04.016 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:33:04.016 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:33:04.017 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:33:04.018 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3ae87e38] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:33:04.019 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:33:04.025 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e9cb95] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:33:04.025 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:33:04.027 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:33:04.027 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:33:04.027 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:33:04.027 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-25 16:33:04.027 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:33:04.027 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-25 16:33:04.027 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-25 16:33:04.027 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:33:04.027 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-25 16:33:04.027 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:33:04.027 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@21a0795f] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:33:04.027 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:33:04.027 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2ec156fb] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:33:04.028 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:33:04.028 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-25 16:33:04.028 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:33:04.028 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-25 16:33:04.028 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-25 16:33:04.028 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-25 16:33:04.028 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-25 16:33:04.028 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-25 16:33:04.029 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:33:04.029 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1bf52f10] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:33:04.029 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:33:04.030 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@301e5d23] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:33:04.030 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:33:04.030 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74787609] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-25 16:33:04.031 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-25 16:33:04.032 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:33:04.032 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:33:04.032 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:33:04.032 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@355b53cc] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:33:04.032 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:33:04.032 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2568611c] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-25 16:33:04.032 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bda7a5b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:33:04.032 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:33:04.032 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-25 16:33:04.032 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:33:04.032 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:33:04.056 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-25 16:33:04.056 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-25 16:33:04.059 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-25 16:33:04.059 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-25 16:33:04.060 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@121dac1a]
[DEBUG] 2024-11-25 16:33:04.061 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-25 16:33:04.061 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-25 16:33:04.061 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:33:04.061 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-25 16:33:04.063 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3acc65f0
[DEBUG] 2024-11-25 16:33:04.063 [main] SessionFactoryRegistry - Registering SessionFactory: 3405ec60-3085-434d-b030-30e650df8674 (<unnamed>)
[DEBUG] 2024-11-25 16:33:04.063 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-25 16:33:04.064 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-25 16:33:04.100 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-25 16:33:04.115 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:33:04.132 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@656020492 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@609630217 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1104693947 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@636370090 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1072476278 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-25 16:33:04.136 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:33:04.152 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:33:04.224 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:33:04.224 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1685759068 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@755146854 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1925300085 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1135131957 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1873943005 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:33:04.224 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:33:04.227 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:33:04.227 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:33:04.227 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:33:04.227 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:33:04.227 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:33:04.227 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:33:04.228 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:33:04.228 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:33:04.229 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 879095289
[DEBUG] 2024-11-25 16:33:04.233 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1981113966
[DEBUG] 2024-11-25 16:33:04.235 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1981113966
[DEBUG] 2024-11-25 16:33:04.235 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:33:04.238 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:33:04.238 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ba27ce6
[DEBUG] 2024-11-25 16:33:04.240 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:33:04.241 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:33:04.242 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:33:04.242 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:33:04.250 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:33:04.250 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:33:04.251 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:33:04.253 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:33:04.256 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-25 16:33:04.256 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-25 16:33:04.256 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:33:04.257 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-25 16:33:04.263 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-25 16:33:04.266 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:33:04.266 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:33:04.266 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:33:04.267 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1421436947 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@725418930 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1412165323 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@858760910 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@751413576 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:33:04.267 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:33:04.267 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:33:04.330 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:33:04.330 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:33:04.331 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 16:33:04.333 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:33:04.337 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-25 16:33:04.337 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 16:33:04.338 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 16:33:04.340 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 16:33:04.340 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:33:04.341 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-25 16:33:04.341 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 16:33:04.342 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 16:33:04.342 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:33:04.342 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:33:04.342 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:33:04.342 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-25 16:33:04.342 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-25 16:33:04.342 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 16:33:04.342 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:33:04.342 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-25 16:33:04.343 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-25 16:33:04.345 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:33:04.345 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:33:04.346 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:33:04.346 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1067780644 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1476664081 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1478007685 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1226973575 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1581377197 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:33:04.346 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:33:04.347 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:33:04.347 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:33:04.347 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-25 16:33:04.347 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-25 16:33:04.347 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-25 16:33:04.347 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-25 16:33:04.347 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-25 16:33:04.347 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-25 16:33:04.347 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 1359899539
[DEBUG] 2024-11-25 16:33:04.348 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 1249789597
[DEBUG] 2024-11-25 16:33:04.348 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1754201778
[DEBUG] 2024-11-25 16:33:04.348 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1754201778
[DEBUG] 2024-11-25 16:33:04.348 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-25 16:33:04.348 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-25 16:33:04.348 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1754201778
[DEBUG] 2024-11-25 16:33:04.348 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-25 16:33:04.348 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-25 16:33:04.348 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@131c5bd
[DEBUG] 2024-11-25 16:33:04.348 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-25 16:33:04.348 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:33:04.420 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:33:04.420 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@2064513681 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1680837503 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@857865061 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1920110923 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1715414246 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:33:04.421 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:33:04.422 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:33:04.422 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:33:04.422 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:33:04.422 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:33:04.422 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:33:04.422 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:33:04.423 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:33:04.423 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:33:04.423 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1267115606
[DEBUG] 2024-11-25 16:33:04.423 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@286772348
[DEBUG] 2024-11-25 16:33:04.423 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@286772348
[DEBUG] 2024-11-25 16:33:04.423 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:33:04.423 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:33:04.423 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4797023d
[DEBUG] 2024-11-25 16:33:04.423 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:33:04.423 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:33:04.423 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:33:04.423 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:33:04.425 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:33:04.425 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:33:04.426 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:33:04.426 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3e170abe] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:33:04.426 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:33:04.426 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@712e4b18] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:33:04.426 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:33:04.426 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:33:04.426 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:33:04.426 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:33:04.427 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@667957103 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@563383249 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@576811632 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1661987799 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1170391958 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:33:04.427 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:33:04.427 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:33:04.428 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:33:04.428 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:33:04.428 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:33:04.428 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:33:04.428 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:33:04.428 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:33:04.428 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:33:04.428 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1475886210
[DEBUG] 2024-11-25 16:33:04.428 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2053115425
[DEBUG] 2024-11-25 16:33:04.428 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2053115425
[DEBUG] 2024-11-25 16:33:04.428 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:33:04.428 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:33:04.428 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69d1ad64
[DEBUG] 2024-11-25 16:33:04.428 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:33:04.428 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:33:04.429 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:33:04.429 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:33:04.429 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:33:04.430 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-25 16:33:04.430 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-25 16:33:04.430 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 16:33:04.430 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:33:04.430 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-25 16:33:04.432 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-25 16:33:04.434 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:33:04.434 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:33:04.435 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:33:04.435 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@118186765 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1927406983 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1345757830 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1937867829 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@802062915 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:33:04.435 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:33:04.436 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:33:04.436 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:33:04.436 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:33:04.436 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:33:04.436 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:33:04.436 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:33:04.436 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:33:04.436 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:33:04.436 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 915231178
[DEBUG] 2024-11-25 16:33:04.436 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@708090483
[DEBUG] 2024-11-25 16:33:04.436 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@708090483
[DEBUG] 2024-11-25 16:33:04.437 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-25 16:33:04.437 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:33:04.437 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ad6895a
[DEBUG] 2024-11-25 16:33:04.437 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:33:04.437 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:33:04.561 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:33:04.561 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1050768030 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1767304024 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@2147434909 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1630007174 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1411863742 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:33:04.561 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:33:04.563 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:33:04.563 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:33:04.563 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:33:04.563 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:33:04.563 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:33:04.563 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:33:04.563 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:33:04.563 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:33:04.563 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1814984081
[DEBUG] 2024-11-25 16:33:04.563 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@133321775
[DEBUG] 2024-11-25 16:33:04.563 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@133321775
[DEBUG] 2024-11-25 16:33:04.563 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:33:04.563 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:33:04.563 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3dad8bde
[DEBUG] 2024-11-25 16:33:04.563 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:33:04.563 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:33:04.564 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:33:04.564 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@807377568 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@797107151 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@977574204 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1801848529 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@660626311 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:33:04.564 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:33:04.565 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:33:04.565 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:33:04.565 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:33:04.565 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:33:04.565 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:33:04.565 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:33:04.565 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:33:04.565 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:33:04.565 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1191220798
[DEBUG] 2024-11-25 16:33:04.565 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@356324579
[DEBUG] 2024-11-25 16:33:04.565 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@356324579
[DEBUG] 2024-11-25 16:33:04.565 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:33:04.565 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:33:04.565 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3b17759c
[DEBUG] 2024-11-25 16:33:04.565 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:33:04.565 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:35:38.621 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 16:35:38.624 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-25 16:35:38.643 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-25 16:35:38.644 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-25 16:35:38.684 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 16:35:38.689 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 16:35:38.845 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-25 16:35:38.847 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-25 16:35:38.847 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-25 16:35:38.848 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:35:38.848 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:35:38.848 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-25 16:35:38.849 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-25 16:35:38.849 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-25 16:35:38.850 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:35:38.850 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-25 16:35:38.851 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-25 16:35:38.851 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:35:38.851 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-25 16:35:38.857 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-25 16:35:38.858 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-25 16:35:38.933 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-25 16:35:38.933 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-25 16:35:38.933 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-25 16:35:38.933 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-25 16:35:38.933 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-25 16:35:38.933 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-25 16:35:38.934 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-25 16:35:38.934 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-25 16:35:38.934 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-25 16:35:38.934 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-25 16:35:38.934 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-25 16:35:38.934 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-25 16:35:38.934 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-25 16:35:38.934 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-25 16:35:38.934 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-25 16:35:38.934 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-25 16:35:38.934 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-25 16:35:38.935 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-25 16:35:38.935 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-25 16:35:38.935 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-25 16:35:38.935 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-25 16:35:38.935 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-25 16:35:38.935 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-25 16:35:38.935 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-25 16:35:38.936 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-25 16:35:38.936 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-25 16:35:38.936 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-25 16:35:38.936 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-25 16:35:38.936 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-25 16:35:38.936 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-25 16:35:38.936 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-25 16:35:38.937 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-25 16:35:38.937 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-25 16:35:38.937 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-25 16:35:38.937 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-25 16:35:38.937 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-25 16:35:38.937 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-25 16:35:38.937 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-25 16:35:38.937 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-25 16:35:38.938 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-25 16:35:38.938 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-25 16:35:38.938 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-25 16:35:38.938 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-25 16:35:38.938 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-25 16:35:38.938 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-25 16:35:38.938 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-25 16:35:38.939 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-25 16:35:38.939 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-25 16:35:38.939 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-25 16:35:38.939 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-25 16:35:38.939 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-25 16:35:38.939 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-25 16:35:38.939 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-25 16:35:38.940 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-25 16:35:38.940 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-25 16:35:38.940 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-25 16:35:38.940 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-25 16:35:38.940 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-25 16:35:38.940 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-25 16:35:38.940 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-25 16:35:38.940 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-25 16:35:38.941 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-25 16:35:38.941 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-25 16:35:38.941 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-25 16:35:38.941 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-25 16:35:38.941 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-25 16:35:38.941 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-25 16:35:38.941 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-25 16:35:38.942 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-25 16:35:38.942 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-25 16:35:38.942 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-25 16:35:38.942 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-25 16:35:38.942 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-25 16:35:38.942 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-25 16:35:38.942 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-25 16:35:38.942 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-25 16:35:38.942 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-25 16:35:38.942 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-25 16:35:38.942 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-25 16:35:38.942 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-25 16:35:38.942 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-25 16:35:38.943 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-25 16:35:38.943 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-25 16:35:38.943 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-25 16:35:38.943 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-25 16:35:38.943 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-25 16:35:38.943 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-25 16:35:38.943 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-25 16:35:38.943 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-25 16:35:38.943 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-25 16:35:38.944 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-25 16:35:38.944 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-25 16:35:38.944 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-25 16:35:38.944 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-25 16:35:38.944 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-25 16:35:38.944 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-25 16:35:38.944 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-25 16:35:38.944 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-25 16:35:38.944 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-25 16:35:38.944 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-25 16:35:38.945 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-25 16:35:38.945 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-25 16:35:38.945 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-25 16:35:38.945 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-25 16:35:38.945 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-25 16:35:38.945 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-25 16:35:38.946 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-25 16:35:38.946 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-25 16:35:38.946 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-25 16:35:38.946 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-25 16:35:38.946 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-25 16:35:38.946 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-25 16:35:38.946 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-25 16:35:38.947 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-25 16:35:38.947 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-25 16:35:38.947 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-25 16:35:38.947 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-25 16:35:38.947 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-25 16:35:38.947 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-25 16:35:38.947 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2024-11-25 16:35:38.947 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2024-11-25 16:35:38.951 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-25 16:35:38.951 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-25 16:35:38.952 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1bc49bc5
[DEBUG] 2024-11-25 16:35:38.952 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-25 16:35:38.952 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-25 16:35:38.952 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-25 16:35:38.952 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-25 16:35:38.952 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@24e83d19
[DEBUG] 2024-11-25 16:35:38.953 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5c080ef3
[DEBUG] 2024-11-25 16:35:38.953 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@188cbcde
[DEBUG] 2024-11-25 16:35:38.953 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ee6291f
[INFO ] 2024-11-25 16:35:38.972 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-25 16:35:38.972 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-25 16:35:38.972 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-25 16:35:39.041 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-25 16:35:39.105 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-25 16:35:39.105 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-25 16:35:39.105 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-25 16:35:39.137 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-25 16:35:39.138 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-25 16:35:39.142 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-25 16:35:39.142 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-25 16:35:39.154 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e)
[DEBUG] 2024-11-25 16:35:39.154 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@513b52af)
[DEBUG] 2024-11-25 16:35:39.154 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a8c93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bed3315)
[DEBUG] 2024-11-25 16:35:39.154 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24)
[DEBUG] 2024-11-25 16:35:39.154 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c7350b0)
[DEBUG] 2024-11-25 16:35:39.155 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bc4ef12)
[DEBUG] 2024-11-25 16:35:39.155 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50448409) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5634a861)
[DEBUG] 2024-11-25 16:35:39.155 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b0dc227) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37ad042b)
[DEBUG] 2024-11-25 16:35:39.155 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@43bdaa1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30b975ad)
[DEBUG] 2024-11-25 16:35:39.156 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-25 16:35:39.156 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:35:39.157 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:35:39.158 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:35:39.158 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:35:39.160 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@52bf7bf6
[DEBUG] 2024-11-25 16:35:39.160 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1bc49bc5`
[DEBUG] 2024-11-25 16:35:39.164 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:35:39.164 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:35:39.164 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:35:39.166 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:35:39.166 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:35:39.166 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:35:39.166 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:35:39.167 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:35:39.167 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:35:39.167 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:35:39.167 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:35:39.167 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:35:39.168 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@411a5965]
[DEBUG] 2024-11-25 16:35:39.198 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-25 16:35:39.218 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-25 16:35:39.223 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-25 16:35:39.228 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-25 16:35:39.234 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:35:39.247 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:35:39.248 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:35:39.248 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:35:39.250 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:35:39.252 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-25 16:35:39.255 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:35:39.257 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-25 16:35:39.258 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:35:39.260 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:35:39.265 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:35:39.265 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:35:39.272 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-25 16:35:39.273 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:35:39.273 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:35:39.274 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:35:39.274 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:35:39.275 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:35:39.276 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:35:39.277 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-25 16:35:39.278 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-25 16:35:39.278 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-25 16:35:39.278 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-25 16:35:39.278 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-25 16:35:39.278 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-25 16:35:39.278 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-25 16:35:39.279 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:35:39.282 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:35:39.283 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-25 16:35:39.283 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-25 16:35:39.283 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:35:39.284 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:35:39.284 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:35:39.284 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:35:39.284 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:35:39.285 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-25 16:35:39.285 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:35:39.285 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-25 16:35:39.285 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:35:39.285 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:35:39.285 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-25 16:35:39.285 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-25 16:35:39.285 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-25 16:35:39.286 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-25 16:35:39.286 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-25 16:35:39.286 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-25 16:35:39.286 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:35:39.286 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:35:39.286 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-25 16:35:39.286 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:35:39.287 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:35:39.287 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:35:39.287 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:35:39.287 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:35:39.287 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:35:39.287 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-25 16:35:39.287 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:35:39.288 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-25 16:35:39.289 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-25 16:35:39.289 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-25 16:35:39.289 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:35:39.292 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:35:39.292 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:35:39.293 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:35:39.293 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:35:39.293 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-25 16:35:39.293 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:35:39.293 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-25 16:35:39.293 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:35:39.293 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:35:39.293 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-25 16:35:39.294 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:35:39.296 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-25 16:35:39.296 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-25 16:35:39.296 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-25 16:35:39.296 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-25 16:35:39.296 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-25 16:35:39.296 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-25 16:35:39.296 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-25 16:35:39.296 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-25 16:35:39.296 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:35:39.297 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-25 16:35:39.297 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:35:39.298 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:35:39.298 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-25 16:35:39.299 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:35:39.299 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-25 16:35:39.299 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:35:39.299 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-25 16:35:39.302 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-25 16:35:39.302 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-25 16:35:39.302 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-25 16:35:39.303 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:35:39.304 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-25 16:35:39.305 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-25 16:35:39.305 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-25 16:35:39.306 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:35:39.306 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:35:39.306 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-25 16:35:39.306 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-25 16:35:39.306 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-25 16:35:39.306 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:35:39.307 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:35:39.307 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:35:39.314 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:35:39.314 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:35:39.559 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-25 16:35:39.588 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:35:39.589 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.UserDaoTest,getByIdSuccess, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@18a98913, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-25 16:35:39.591 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-25 16:35:39.595 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:35:39.627 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-25 16:35:39.627 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-25 16:35:39.627 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-25 16:35:39.627 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-25 16:35:39.628 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2b441e56] under count; prior registration was null
[DEBUG] 2024-11-25 16:35:39.629 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25699aa7] under every; prior registration was null
[DEBUG] 2024-11-25 16:35:39.629 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5a47730c] under any; prior registration was null
[DEBUG] 2024-11-25 16:35:39.629 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-25 16:35:39.629 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-25 16:35:39.629 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-25 16:35:39.629 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-25 16:35:39.629 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-25 16:35:39.629 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-25 16:35:39.629 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-25 16:35:39.629 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-25 16:35:39.630 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-25 16:35:39.630 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-25 16:35:39.630 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-25 16:35:39.630 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-25 16:35:39.630 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-25 16:35:39.630 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-25 16:35:39.630 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-25 16:35:39.630 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-25 16:35:39.630 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-25 16:35:39.632 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7ac48f05] under sinh; prior registration was null
[DEBUG] 2024-11-25 16:35:39.632 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7af1d072] under cosh; prior registration was null
[DEBUG] 2024-11-25 16:35:39.632 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ffd9f8] under tanh; prior registration was null
[DEBUG] 2024-11-25 16:35:39.632 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642c6461] under pi; prior registration was null
[DEBUG] 2024-11-25 16:35:39.632 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ace6346] under log; prior registration was null
[DEBUG] 2024-11-25 16:35:39.632 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-25 16:35:39.632 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-25 16:35:39.632 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-25 16:35:39.632 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-25 16:35:39.632 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-25 16:35:39.633 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-25 16:35:39.633 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-25 16:35:39.633 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-25 16:35:39.633 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-25 16:35:39.633 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-25 16:35:39.633 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-25 16:35:39.633 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-25 16:35:39.633 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1a88c4f5] under position; prior registration was null
[DEBUG] 2024-11-25 16:35:39.635 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@a316f6b] under overlay; prior registration was null
[DEBUG] 2024-11-25 16:35:39.635 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@4f5c30b1] under trim; prior registration was null
[DEBUG] 2024-11-25 16:35:39.635 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@38087342] under cast; prior registration was null
[DEBUG] 2024-11-25 16:35:39.635 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@681de87f] under collate; prior registration was null
[DEBUG] 2024-11-25 16:35:39.636 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5a4464c5] under extract; prior registration was null
[DEBUG] 2024-11-25 16:35:39.636 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-25 16:35:39.636 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-25 16:35:39.637 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@370c7cc5] under ifnull; prior registration was null
[DEBUG] 2024-11-25 16:35:39.637 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-25 16:35:39.637 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-25 16:35:39.637 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@a056b26] under pad; prior registration was null
[DEBUG] 2024-11-25 16:35:39.638 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4bce62b] under str; prior registration was null
[DEBUG] 2024-11-25 16:35:39.639 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@74c121d4] under format; prior registration was null
[DEBUG] 2024-11-25 16:35:39.639 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@424f02b8] under timestampadd; prior registration was null
[DEBUG] 2024-11-25 16:35:39.640 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1216eb3f] under timestampdiff; prior registration was null
[DEBUG] 2024-11-25 16:35:39.640 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-25 16:35:39.640 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-25 16:35:39.640 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1510b9a2] under current_date; prior registration was null
[DEBUG] 2024-11-25 16:35:39.640 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76a6f045] under current_time; prior registration was null
[DEBUG] 2024-11-25 16:35:39.640 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@633ddc0c] under current_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:35:39.641 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-25 16:35:39.641 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-25 16:35:39.641 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-25 16:35:39.641 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4bcdd11] under local_date; prior registration was null
[DEBUG] 2024-11-25 16:35:39.641 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1471b98d] under local_time; prior registration was null
[DEBUG] 2024-11-25 16:35:39.641 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5514579e] under local_datetime; prior registration was null
[DEBUG] 2024-11-25 16:35:39.641 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58c42c8c] under offset_datetime; prior registration was null
[DEBUG] 2024-11-25 16:35:39.641 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-25 16:35:39.641 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-25 16:35:39.641 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-25 16:35:39.641 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-25 16:35:39.641 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3af236d0] under instant; prior registration was null
[DEBUG] 2024-11-25 16:35:39.641 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-25 16:35:39.641 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6bf570c] under sql; prior registration was null
[DEBUG] 2024-11-25 16:35:39.642 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-25 16:35:39.642 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-25 16:35:39.642 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-25 16:35:39.642 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-25 16:35:39.642 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ace6346
[DEBUG] 2024-11-25 16:35:39.642 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-25 16:35:39.642 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-25 16:35:39.642 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-25 16:35:39.642 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-25 16:35:39.642 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-25 16:35:39.642 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-25 16:35:39.643 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-25 16:35:39.643 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-25 16:35:39.643 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5db0003d] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-25 16:35:39.643 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7f12094d] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-25 16:35:39.643 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-25 16:35:39.643 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-25 16:35:39.644 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-25 16:35:39.644 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-25 16:35:39.644 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-25 16:35:39.644 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-25 16:35:39.644 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-25 16:35:39.644 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-25 16:35:39.644 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-25 16:35:39.644 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-25 16:35:39.644 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-25 16:35:39.644 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-25 16:35:39.644 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-25 16:35:39.644 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-25 16:35:39.644 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-25 16:35:39.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-25 16:35:39.646 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-25 16:35:39.646 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-25 16:35:39.646 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@589fb74d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1a88c4f5
[DEBUG] 2024-11-25 16:35:39.646 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-25 16:35:39.646 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-25 16:35:39.646 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-25 16:35:39.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@733f1395] under trunc; prior registration was null
[DEBUG] 2024-11-25 16:35:39.649 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-25 16:35:39.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-25 16:35:39.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@21dea711] under bitand; prior registration was null
[DEBUG] 2024-11-25 16:35:39.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7772d266] under bitor; prior registration was null
[DEBUG] 2024-11-25 16:35:39.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a21c74] under bitxor; prior registration was null
[DEBUG] 2024-11-25 16:35:39.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b8a144e] under bitnot; prior registration was null
[DEBUG] 2024-11-25 16:35:39.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-25 16:35:39.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-25 16:35:39.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-25 16:35:39.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-25 16:35:39.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5fb8dc01] under format; prior registration was org.hibernate.dialect.function.FormatFunction@74c121d4
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1471b98d
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5514579e
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e38c472] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642c6461
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ee92e7d] under chr; prior registration was null
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@759a678a] under sysdate; prior registration was null
[DEBUG] 2024-11-25 16:35:39.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-25 16:35:39.651 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-25 16:35:39.651 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-25 16:35:39.651 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-25 16:35:39.651 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-25 16:35:39.651 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-25 16:35:39.652 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@591f6f83] under rank; prior registration was null
[DEBUG] 2024-11-25 16:35:39.652 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2b44605c] under dense_rank; prior registration was null
[DEBUG] 2024-11-25 16:35:39.652 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@55421b8d] under percent_rank; prior registration was null
[DEBUG] 2024-11-25 16:35:39.652 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@24a04257] under cume_dist; prior registration was null
[DEBUG] 2024-11-25 16:35:39.652 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6d6039df] under listagg; prior registration was null
[DEBUG] 2024-11-25 16:35:39.655 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.655 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.655 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:35:39.655 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:35:39.655 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-25 16:35:39.655 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-25 16:35:39.655 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.655 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.655 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:35:39.655 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-25 16:35:39.655 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-25 16:35:39.655 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:35:39.655 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-25 16:35:39.655 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-25 16:35:39.655 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-25 16:35:39.656 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-25 16:35:39.657 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-25 16:35:39.658 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-25 16:35:39.659 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-25 16:35:39.660 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-25 16:35:39.660 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-25 16:35:39.660 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-25 16:35:39.660 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-25 16:35:39.660 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-25 16:35:39.660 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.660 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.660 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-25 16:35:39.660 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-25 16:35:39.660 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-25 16:35:39.662 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-25 16:35:39.746 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:35:39.747 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-25 16:35:39.812 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:35:39.814 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:35:39.817 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:35:39.817 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:35:39.817 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:35:39.817 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:35:39.948 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-25 16:35:39.952 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:35:39.952 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:35:39.977 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:35:39.977 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:35:39.994 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-25 16:35:39.995 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:35:39.995 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:35:40.007 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-25 16:35:40.017 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:35:40.018 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:35:40.018 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:35:40.018 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:35:40.018 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:35:40.018 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:35:40.040 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-25 16:35:40.040 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-25 16:35:40.042 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-25 16:35:40.042 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:35:40.043 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:35:40.043 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-25 16:35:40.043 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-25 16:35:40.043 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:35:40.043 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:35:40.043 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-25 16:35:40.043 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-25 16:35:40.043 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:35:40.043 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:35:40.043 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:35:40.094 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:35:40.096 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-25 16:35:40.104 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@21c34bf8] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-25 16:35:40.104 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:35:40.108 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6cd66f6a] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-25 16:35:40.108 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:35:40.111 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-25 16:35:40.120 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:35:40.127 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-25 16:35:40.128 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-25 16:35:40.128 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:35:40.128 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-25 16:35:40.128 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-25 16:35:40.128 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:35:40.128 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:35:40.128 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:35:40.130 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@478089b6] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:35:40.131 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:35:40.136 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@42dd7d82] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:35:40.136 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:35:40.138 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:35:40.138 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:35:40.138 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:35:40.138 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-25 16:35:40.138 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:35:40.138 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-25 16:35:40.138 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-25 16:35:40.138 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:35:40.138 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-25 16:35:40.138 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:35:40.138 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@29f8134] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:35:40.138 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:35:40.138 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77a9ac36] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:35:40.138 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:35:40.139 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-25 16:35:40.139 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:35:40.139 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-25 16:35:40.139 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-25 16:35:40.139 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-25 16:35:40.139 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-25 16:35:40.139 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-25 16:35:40.140 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:35:40.140 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1607d391] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:35:40.140 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:35:40.140 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@23bd2f6e] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:35:40.140 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:35:40.141 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1e95f584] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-25 16:35:40.142 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-25 16:35:40.142 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:35:40.142 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:35:40.142 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:35:40.142 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3eff6846] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:35:40.142 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:35:40.142 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6ae6d078] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-25 16:35:40.143 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6ca33187] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:35:40.143 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:35:40.143 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-25 16:35:40.143 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:35:40.143 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:35:40.166 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-25 16:35:40.166 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-25 16:35:40.168 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-25 16:35:40.169 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-25 16:35:40.169 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1ae9d0e4]
[DEBUG] 2024-11-25 16:35:40.170 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-25 16:35:40.170 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-25 16:35:40.171 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:35:40.171 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-25 16:35:40.172 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ad40184
[DEBUG] 2024-11-25 16:35:40.172 [main] SessionFactoryRegistry - Registering SessionFactory: 5dc1f252-0260-4407-ac68-2e2524c6fd4f (<unnamed>)
[DEBUG] 2024-11-25 16:35:40.172 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-25 16:35:40.172 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-25 16:35:40.215 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-25 16:35:40.228 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:35:40.243 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@1850630389 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@1926148075 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1706225206 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@686366573)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@1327842480 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1538086235 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1106002545)

[DEBUG] 2024-11-25 16:35:40.247 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:35:40.262 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:36:26.947 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 16:36:26.949 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-25 16:36:26.968 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-25 16:36:26.970 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-25 16:36:27.006 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 16:36:27.011 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 16:36:27.148 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-25 16:36:27.150 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-25 16:36:27.150 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-25 16:36:27.151 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:36:27.151 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:36:27.151 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-25 16:36:27.152 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-25 16:36:27.152 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-25 16:36:27.152 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:36:27.153 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-25 16:36:27.153 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-25 16:36:27.153 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:36:27.154 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-25 16:36:27.158 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-25 16:36:27.158 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-25 16:36:27.216 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:36:27.217 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:36:27.217 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:36:27.217 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 16:36:27.217 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 16:36:27.217 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 16:36:27.217 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 16:36:27.217 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 16:36:27.217 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 16:36:27.217 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:36:27.217 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:36:27.217 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:36:27.217 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:36:27.217 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:36:27.218 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:36:27.218 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 16:36:27.218 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 16:36:27.218 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-25 16:36:27.218 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 16:36:27.218 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 16:36:27.218 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-25 16:36:27.218 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-25 16:36:27.218 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:36:27.219 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:36:27.219 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:36:27.219 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:36:27.219 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:36:27.219 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:36:27.219 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:36:27.219 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:36:27.219 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:36:27.219 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:36:27.219 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:36:27.219 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:36:27.219 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:36:27.219 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:36:27.219 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:36:27.219 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 16:36:27.220 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 16:36:27.220 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 16:36:27.220 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 16:36:27.220 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:36:27.220 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:36:27.220 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:36:27.220 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-25 16:36:27.220 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 16:36:27.220 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 16:36:27.220 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-25 16:36:27.220 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:36:27.220 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:36:27.221 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:36:27.221 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-25 16:36:27.221 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-25 16:36:27.221 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-25 16:36:27.221 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 16:36:27.221 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 16:36:27.221 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 16:36:27.221 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 16:36:27.221 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-25 16:36:27.221 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-25 16:36:27.221 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-25 16:36:27.221 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-25 16:36:27.221 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-25 16:36:27.221 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-25 16:36:27.221 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 16:36:27.222 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 16:36:27.222 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 16:36:27.222 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 16:36:27.222 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 16:36:27.222 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 16:36:27.222 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 16:36:27.222 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 16:36:27.222 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 16:36:27.222 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 16:36:27.222 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-25 16:36:27.222 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-25 16:36:27.222 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 16:36:27.222 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 16:36:27.222 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-25 16:36:27.222 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-25 16:36:27.223 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-25 16:36:27.223 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 16:36:27.223 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 16:36:27.223 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-25 16:36:27.223 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-25 16:36:27.223 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 16:36:27.223 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 16:36:27.223 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 16:36:27.223 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 16:36:27.223 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:36:27.223 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:36:27.223 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:36:27.223 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:36:27.223 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:36:27.223 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:36:27.224 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-25 16:36:27.224 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-25 16:36:27.224 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 16:36:27.224 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 16:36:27.224 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:36:27.224 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:36:27.224 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:36:27.224 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-25 16:36:27.224 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-25 16:36:27.224 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 16:36:27.224 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 16:36:27.224 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:36:27.224 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:36:27.224 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:36:27.224 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 16:36:27.225 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 16:36:27.225 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 16:36:27.225 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 16:36:27.225 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 16:36:27.225 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 16:36:27.225 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 16:36:27.225 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 16:36:27.225 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-25 16:36:27.225 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-25 16:36:27.225 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-25 16:36:27.225 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-25 16:36:27.228 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-25 16:36:27.229 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-25 16:36:27.229 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@491f8831
[DEBUG] 2024-11-25 16:36:27.229 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@691541bc
[DEBUG] 2024-11-25 16:36:27.230 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b733ef7
[DEBUG] 2024-11-25 16:36:27.230 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43a4a9e5
[DEBUG] 2024-11-25 16:36:27.230 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@764fffa0
[DEBUG] 2024-11-25 16:36:27.230 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35145874
[DEBUG] 2024-11-25 16:36:27.230 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77524ca7
[DEBUG] 2024-11-25 16:36:27.230 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11df2829
[DEBUG] 2024-11-25 16:36:27.230 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18e4674d
[INFO ] 2024-11-25 16:36:27.248 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-25 16:36:27.248 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-25 16:36:27.248 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-25 16:36:27.308 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-25 16:36:27.362 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-25 16:36:27.362 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-25 16:36:27.362 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-25 16:36:27.390 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-25 16:36:27.391 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-25 16:36:27.395 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-25 16:36:27.395 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-25 16:36:27.405 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eaf8427) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c)
[DEBUG] 2024-11-25 16:36:27.405 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d6039df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae)
[DEBUG] 2024-11-25 16:36:27.405 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e00016) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3cbe6e)
[DEBUG] 2024-11-25 16:36:27.405 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@177ede17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17176b18)
[DEBUG] 2024-11-25 16:36:27.405 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e4395c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab53860)
[DEBUG] 2024-11-25 16:36:27.405 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5ac347) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b9389f)
[DEBUG] 2024-11-25 16:36:27.405 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b2c5ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41f785e3)
[DEBUG] 2024-11-25 16:36:27.405 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9a3661) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727986ad)
[DEBUG] 2024-11-25 16:36:27.406 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1600a8a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b25ef1c)
[DEBUG] 2024-11-25 16:36:27.406 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-25 16:36:27.407 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:36:27.407 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:36:27.408 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:36:27.408 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:36:27.410 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@383cdd4d
[DEBUG] 2024-11-25 16:36:27.410 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@491f8831`
[DEBUG] 2024-11-25 16:36:27.414 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:36:27.414 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:36:27.414 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:36:27.416 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:36:27.416 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:36:27.416 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:36:27.416 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:36:27.416 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:36:27.416 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:36:27.417 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:36:27.417 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:36:27.417 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:36:27.418 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71369e1a]
[DEBUG] 2024-11-25 16:36:27.441 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-25 16:36:27.457 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-25 16:36:27.462 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-25 16:36:27.468 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-25 16:36:27.474 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:36:27.487 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:36:27.488 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:36:27.488 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:36:27.489 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:36:27.492 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-25 16:36:27.495 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:36:27.497 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-25 16:36:27.498 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:36:27.500 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:36:27.505 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:36:27.505 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:36:27.512 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-25 16:36:27.513 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:36:27.514 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:36:27.514 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:36:27.515 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:36:27.515 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:36:27.517 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:36:27.518 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-25 16:36:27.519 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-25 16:36:27.519 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-25 16:36:27.519 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-25 16:36:27.519 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-25 16:36:27.519 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-25 16:36:27.519 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-25 16:36:27.519 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:36:27.522 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:36:27.523 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-25 16:36:27.523 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-25 16:36:27.523 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:36:27.524 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:36:27.524 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:36:27.524 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:36:27.524 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:36:27.524 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-25 16:36:27.524 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:36:27.524 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-25 16:36:27.525 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:36:27.525 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:36:27.525 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-25 16:36:27.525 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-25 16:36:27.525 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-25 16:36:27.525 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-25 16:36:27.525 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-25 16:36:27.525 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-25 16:36:27.525 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:36:27.526 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:36:27.526 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-25 16:36:27.526 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:36:27.526 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:36:27.526 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:36:27.526 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:36:27.526 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:36:27.526 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:36:27.527 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-25 16:36:27.527 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:36:27.527 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-25 16:36:27.528 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-25 16:36:27.528 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-25 16:36:27.528 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:36:27.530 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:36:27.530 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:36:27.530 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:36:27.530 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:36:27.530 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-25 16:36:27.531 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:36:27.531 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-25 16:36:27.531 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:36:27.531 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:36:27.531 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-25 16:36:27.531 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:36:27.533 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-25 16:36:27.534 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-25 16:36:27.534 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-25 16:36:27.534 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-25 16:36:27.534 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-25 16:36:27.534 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-25 16:36:27.534 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-25 16:36:27.534 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-25 16:36:27.534 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:36:27.534 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-25 16:36:27.535 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:36:27.536 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:36:27.536 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-25 16:36:27.537 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:36:27.537 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-25 16:36:27.537 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:36:27.537 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-25 16:36:27.540 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-25 16:36:27.540 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-25 16:36:27.540 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-25 16:36:27.541 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:36:27.542 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-25 16:36:27.543 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-25 16:36:27.544 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-25 16:36:27.544 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:36:27.544 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:36:27.544 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-25 16:36:27.544 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-25 16:36:27.545 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-25 16:36:27.545 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:36:27.545 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:36:27.545 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:36:27.553 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:36:27.553 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:36:27.679 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-25 16:36:27.707 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:36:27.707 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter12612902948563006297.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire16965097482774915787tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_010749318277472840804tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter12612902948563006297.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d7d8911, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-25 16:36:27.710 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-25 16:36:27.714 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:36:27.746 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-25 16:36:27.746 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-25 16:36:27.747 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-25 16:36:27.747 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-25 16:36:27.748 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@347b370c] under count; prior registration was null
[DEBUG] 2024-11-25 16:36:27.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@72a33316] under every; prior registration was null
[DEBUG] 2024-11-25 16:36:27.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@57fce8b] under any; prior registration was null
[DEBUG] 2024-11-25 16:36:27.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-25 16:36:27.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-25 16:36:27.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-25 16:36:27.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-25 16:36:27.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-25 16:36:27.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-25 16:36:27.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-25 16:36:27.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-25 16:36:27.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-25 16:36:27.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-25 16:36:27.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-25 16:36:27.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-25 16:36:27.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-25 16:36:27.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-25 16:36:27.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-25 16:36:27.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-25 16:36:27.751 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-25 16:36:27.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56f2c9e8] under sinh; prior registration was null
[DEBUG] 2024-11-25 16:36:27.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@457692cb] under cosh; prior registration was null
[DEBUG] 2024-11-25 16:36:27.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350342e0] under tanh; prior registration was null
[DEBUG] 2024-11-25 16:36:27.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d] under pi; prior registration was null
[DEBUG] 2024-11-25 16:36:27.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289] under log; prior registration was null
[DEBUG] 2024-11-25 16:36:27.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-25 16:36:27.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-25 16:36:27.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-25 16:36:27.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-25 16:36:27.753 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-25 16:36:27.753 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-25 16:36:27.753 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-25 16:36:27.753 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-25 16:36:27.753 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-25 16:36:27.753 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-25 16:36:27.753 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-25 16:36:27.753 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-25 16:36:27.753 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a] under position; prior registration was null
[DEBUG] 2024-11-25 16:36:27.755 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6fa2a006] under overlay; prior registration was null
[DEBUG] 2024-11-25 16:36:27.755 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@39695803] under trim; prior registration was null
[DEBUG] 2024-11-25 16:36:27.756 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@57b711b6] under cast; prior registration was null
[DEBUG] 2024-11-25 16:36:27.756 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2db461b5] under collate; prior registration was null
[DEBUG] 2024-11-25 16:36:27.756 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@55881f40] under extract; prior registration was null
[DEBUG] 2024-11-25 16:36:27.756 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-25 16:36:27.757 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-25 16:36:27.757 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11d1735e] under ifnull; prior registration was null
[DEBUG] 2024-11-25 16:36:27.757 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-25 16:36:27.757 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-25 16:36:27.757 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6282f1eb] under pad; prior registration was null
[DEBUG] 2024-11-25 16:36:27.757 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@64ed18ec] under str; prior registration was null
[DEBUG] 2024-11-25 16:36:27.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@25589735] under format; prior registration was null
[DEBUG] 2024-11-25 16:36:27.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7dddfc35] under timestampadd; prior registration was null
[DEBUG] 2024-11-25 16:36:27.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2336cd91] under timestampdiff; prior registration was null
[DEBUG] 2024-11-25 16:36:27.759 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c1e40d9] under current_date; prior registration was null
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b50c21] under current_time; prior registration was null
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e0fdc83] under current_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5dacf18d] under local_date; prior registration was null
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@432a6a69] under local_time; prior registration was null
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f52a229] under local_datetime; prior registration was null
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fe98084] under offset_datetime; prior registration was null
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f33e6d] under instant; prior registration was null
[DEBUG] 2024-11-25 16:36:27.760 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-25 16:36:27.761 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a1cb94] under sql; prior registration was null
[DEBUG] 2024-11-25 16:36:27.761 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-25 16:36:27.761 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-25 16:36:27.761 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-25 16:36:27.761 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-25 16:36:27.761 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289
[DEBUG] 2024-11-25 16:36:27.761 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-25 16:36:27.761 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-25 16:36:27.761 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-25 16:36:27.761 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-25 16:36:27.761 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-25 16:36:27.761 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-25 16:36:27.761 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-25 16:36:27.761 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@49bb808f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@563ada5] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-25 16:36:27.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12548f9a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a
[DEBUG] 2024-11-25 16:36:27.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-25 16:36:27.764 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-25 16:36:27.764 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-25 16:36:27.766 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2838eb] under trunc; prior registration was null
[DEBUG] 2024-11-25 16:36:27.766 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-25 16:36:27.766 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-25 16:36:27.766 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb5d334] under bitand; prior registration was null
[DEBUG] 2024-11-25 16:36:27.767 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45dc7be] under bitor; prior registration was null
[DEBUG] 2024-11-25 16:36:27.767 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under bitxor; prior registration was null
[DEBUG] 2024-11-25 16:36:27.767 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under bitnot; prior registration was null
[DEBUG] 2024-11-25 16:36:27.767 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-25 16:36:27.767 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-25 16:36:27.767 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-25 16:36:27.767 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-25 16:36:27.767 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-25 16:36:27.767 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-25 16:36:27.767 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-25 16:36:27.767 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-25 16:36:27.767 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-25 16:36:27.767 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-25 16:36:27.767 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-25 16:36:27.767 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4d664323] under format; prior registration was org.hibernate.dialect.function.FormatFunction@25589735
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@432a6a69
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f52a229
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ec0d06] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2676d96a] under chr; prior registration was null
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under sysdate; prior registration was null
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-25 16:36:27.768 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-25 16:36:27.769 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@77a9ac36] under rank; prior registration was null
[DEBUG] 2024-11-25 16:36:27.769 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3c743d40] under dense_rank; prior registration was null
[DEBUG] 2024-11-25 16:36:27.769 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5aac6f9f] under percent_rank; prior registration was null
[DEBUG] 2024-11-25 16:36:27.770 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2444c3df] under cume_dist; prior registration was null
[DEBUG] 2024-11-25 16:36:27.770 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@38848217] under listagg; prior registration was null
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.773 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:36:27.774 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-25 16:36:27.775 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-25 16:36:27.776 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-25 16:36:27.777 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-25 16:36:27.777 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-25 16:36:27.777 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-25 16:36:27.777 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-25 16:36:27.777 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-25 16:36:27.777 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-25 16:36:27.777 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.777 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.777 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-25 16:36:27.777 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-25 16:36:27.777 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-25 16:36:27.779 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-25 16:36:27.866 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:36:27.867 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-25 16:36:27.971 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:36:27.974 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:36:27.976 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:36:27.977 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:36:27.977 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:36:27.977 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:36:28.102 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-25 16:36:28.105 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:36:28.105 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:36:28.133 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:36:28.133 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:36:28.149 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-25 16:36:28.149 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:36:28.149 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:36:28.159 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-25 16:36:28.172 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:36:28.173 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:36:28.173 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:36:28.173 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:36:28.173 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:36:28.173 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:36:28.196 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-25 16:36:28.196 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-25 16:36:28.198 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-25 16:36:28.198 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:36:28.198 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:36:28.198 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-25 16:36:28.199 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-25 16:36:28.199 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:36:28.199 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:36:28.199 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-25 16:36:28.199 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-25 16:36:28.199 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:36:28.199 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:36:28.199 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:36:28.249 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:36:28.251 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-25 16:36:28.258 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d01ea33] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-25 16:36:28.259 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:36:28.262 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c3fcbe7] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-25 16:36:28.262 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:36:28.266 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-25 16:36:28.273 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:36:28.280 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-25 16:36:28.280 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-25 16:36:28.280 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:36:28.280 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-25 16:36:28.280 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-25 16:36:28.280 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:36:28.280 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:36:28.281 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:36:28.282 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3ae87e38] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:36:28.283 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:36:28.288 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e9cb95] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:36:28.288 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:36:28.289 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:36:28.289 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:36:28.289 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:36:28.289 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-25 16:36:28.289 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:36:28.289 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-25 16:36:28.289 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-25 16:36:28.289 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:36:28.289 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-25 16:36:28.289 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:36:28.289 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@21a0795f] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:36:28.290 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:36:28.290 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2ec156fb] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:36:28.290 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:36:28.290 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-25 16:36:28.290 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:36:28.290 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-25 16:36:28.290 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-25 16:36:28.290 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-25 16:36:28.290 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-25 16:36:28.290 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-25 16:36:28.291 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:36:28.291 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1bf52f10] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:36:28.291 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:36:28.291 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@301e5d23] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:36:28.291 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:36:28.292 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74787609] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-25 16:36:28.293 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-25 16:36:28.293 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:36:28.293 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:36:28.293 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:36:28.293 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@355b53cc] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:36:28.293 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:36:28.293 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2568611c] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-25 16:36:28.294 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bda7a5b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:36:28.294 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:36:28.294 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-25 16:36:28.294 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:36:28.294 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:36:28.314 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-25 16:36:28.314 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-25 16:36:28.317 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-25 16:36:28.317 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-25 16:36:28.318 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@121dac1a]
[DEBUG] 2024-11-25 16:36:28.318 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-25 16:36:28.318 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-25 16:36:28.319 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:36:28.319 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-25 16:36:28.320 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3acc65f0
[DEBUG] 2024-11-25 16:36:28.320 [main] SessionFactoryRegistry - Registering SessionFactory: e1f77361-1b53-4711-8c3e-1a6b0d357a61 (<unnamed>)
[DEBUG] 2024-11-25 16:36:28.320 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-25 16:36:28.320 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-25 16:36:28.347 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-25 16:36:28.359 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:36:28.375 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@656020492 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@609630217 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1104693947 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@636370090 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1072476278 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-25 16:36:28.379 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:36:28.394 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:36:28.466 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:36:28.467 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1685759068 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@755146854 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1925300085 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1135131957 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1873943005 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:36:28.467 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:36:28.470 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:36:28.470 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:36:28.470 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:36:28.470 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:36:28.470 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:36:28.470 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:36:28.471 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:36:28.471 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:36:28.472 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 879095289
[DEBUG] 2024-11-25 16:36:28.477 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1981113966
[DEBUG] 2024-11-25 16:36:28.479 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1981113966
[DEBUG] 2024-11-25 16:36:28.480 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:36:28.486 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:36:28.486 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ba27ce6
[DEBUG] 2024-11-25 16:36:28.489 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:36:28.490 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:36:28.492 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:36:28.492 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:36:28.501 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:36:28.502 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:36:28.502 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:36:28.505 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:36:28.508 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-25 16:36:28.508 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-25 16:36:28.508 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:36:28.509 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-25 16:36:28.515 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-25 16:36:28.518 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:36:28.518 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:36:28.519 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:36:28.519 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1421436947 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@725418930 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1412165323 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@858760910 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@751413576 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:36:28.519 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:36:28.520 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:36:28.582 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:36:28.582 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:36:28.583 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 16:36:28.585 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:36:28.589 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-25 16:36:28.589 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 16:36:28.591 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 16:36:28.593 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 16:36:28.593 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:36:28.594 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-25 16:36:28.595 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 16:36:28.595 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 16:36:28.595 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:36:28.595 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:36:28.595 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:36:28.595 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-25 16:36:28.596 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-25 16:36:28.596 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 16:36:28.596 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:36:28.596 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-25 16:36:28.596 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-25 16:36:28.598 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:36:28.598 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:36:28.599 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:36:28.599 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1067780644 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1476664081 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1478007685 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1226973575 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1581377197 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:36:28.599 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:36:28.600 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:36:28.600 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:36:28.600 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-25 16:36:28.600 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-25 16:36:28.600 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-25 16:36:28.600 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-25 16:36:28.600 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-25 16:36:28.600 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-25 16:36:28.600 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 1359899539
[DEBUG] 2024-11-25 16:36:28.601 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 1249789597
[DEBUG] 2024-11-25 16:36:28.601 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1754201778
[DEBUG] 2024-11-25 16:36:28.601 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1754201778
[DEBUG] 2024-11-25 16:36:28.601 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-25 16:36:28.601 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-25 16:36:28.601 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1754201778
[DEBUG] 2024-11-25 16:36:28.602 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-25 16:36:28.602 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-25 16:36:28.602 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@131c5bd
[DEBUG] 2024-11-25 16:36:28.602 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-25 16:36:28.602 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:36:28.669 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:36:28.669 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@2064513681 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1680837503 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@857865061 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1920110923 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1715414246 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:36:28.670 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:36:28.671 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:36:28.671 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:36:28.671 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:36:28.671 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:36:28.671 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:36:28.671 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:36:28.671 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:36:28.671 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:36:28.671 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1267115606
[DEBUG] 2024-11-25 16:36:28.671 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@286772348
[DEBUG] 2024-11-25 16:36:28.671 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@286772348
[DEBUG] 2024-11-25 16:36:28.671 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:36:28.672 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:36:28.672 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4797023d
[DEBUG] 2024-11-25 16:36:28.672 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:36:28.672 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:36:28.672 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:36:28.672 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:36:28.674 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:36:28.674 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:36:28.674 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:36:28.674 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3e170abe] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:36:28.674 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:36:28.675 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@712e4b18] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:36:28.675 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:36:28.675 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:36:28.675 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:36:28.675 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:36:28.675 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@667957103 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@563383249 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@576811632 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1661987799 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1170391958 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:36:28.675 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:36:28.676 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:36:28.676 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:36:28.676 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:36:28.676 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:36:28.676 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:36:28.676 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:36:28.676 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:36:28.676 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:36:28.676 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1475886210
[DEBUG] 2024-11-25 16:36:28.676 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2053115425
[DEBUG] 2024-11-25 16:36:28.677 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2053115425
[DEBUG] 2024-11-25 16:36:28.677 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:36:28.677 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:36:28.677 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69d1ad64
[DEBUG] 2024-11-25 16:36:28.677 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:36:28.677 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:36:28.677 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:36:28.677 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:36:28.677 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:36:28.678 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-25 16:36:28.678 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-25 16:36:28.678 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 16:36:28.678 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:36:28.678 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-25 16:36:28.680 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-25 16:36:28.683 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:36:28.683 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:36:28.683 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:36:28.683 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@118186765 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1927406983 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1345757830 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1937867829 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@802062915 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:36:28.683 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:36:28.684 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:36:28.684 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:36:28.684 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:36:28.684 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:36:28.684 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:36:28.684 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:36:28.684 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:36:28.684 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:36:28.684 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 915231178
[DEBUG] 2024-11-25 16:36:28.684 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@708090483
[DEBUG] 2024-11-25 16:36:28.684 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@708090483
[DEBUG] 2024-11-25 16:36:28.685 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-25 16:36:28.685 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:36:28.685 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ad6895a
[DEBUG] 2024-11-25 16:36:28.685 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:36:28.685 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:36:28.809 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:36:28.809 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1050768030 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1767304024 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@2147434909 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1630007174 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1411863742 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:36:28.809 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:36:28.810 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:36:28.811 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:36:28.811 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:36:28.811 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:36:28.811 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:36:28.811 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:36:28.811 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:36:28.811 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:36:28.811 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1814984081
[DEBUG] 2024-11-25 16:36:28.811 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@133321775
[DEBUG] 2024-11-25 16:36:28.811 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@133321775
[DEBUG] 2024-11-25 16:36:28.811 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:36:28.811 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:36:28.811 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3dad8bde
[DEBUG] 2024-11-25 16:36:28.811 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:36:28.811 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:36:28.812 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:36:28.812 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@807377568 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@958575255)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@797107151 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@977574204 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1801848529 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@660626311 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1460372957)

[DEBUG] 2024-11-25 16:36:28.812 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:36:28.812 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:36:28.812 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:36:28.812 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:36:28.812 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:36:28.812 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:36:28.813 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:36:28.813 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:36:28.813 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:36:28.813 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1191220798
[DEBUG] 2024-11-25 16:36:28.813 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@356324579
[DEBUG] 2024-11-25 16:36:28.813 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@356324579
[DEBUG] 2024-11-25 16:36:28.813 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:36:28.813 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:36:28.813 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3b17759c
[DEBUG] 2024-11-25 16:36:28.813 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:36:28.813 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:00.788 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 16:37:00.792 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-25 16:37:00.814 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-25 16:37:00.815 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-25 16:37:00.857 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 16:37:00.862 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 16:37:01.026 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-25 16:37:01.028 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-25 16:37:01.028 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-25 16:37:01.029 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:37:01.029 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:37:01.029 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-25 16:37:01.030 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-25 16:37:01.030 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-25 16:37:01.031 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:37:01.031 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-25 16:37:01.032 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-25 16:37:01.032 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:37:01.033 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-25 16:37:01.040 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-25 16:37:01.041 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-25 16:37:01.124 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-25 16:37:01.125 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-25 16:37:01.125 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-25 16:37:01.125 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-25 16:37:01.125 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-25 16:37:01.125 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-25 16:37:01.125 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-25 16:37:01.125 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-25 16:37:01.125 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-25 16:37:01.125 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-25 16:37:01.126 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-25 16:37:01.126 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-25 16:37:01.126 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-25 16:37:01.126 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-25 16:37:01.126 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-25 16:37:01.126 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-25 16:37:01.126 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-25 16:37:01.126 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-25 16:37:01.127 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-25 16:37:01.127 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-25 16:37:01.127 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-25 16:37:01.127 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-25 16:37:01.127 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-25 16:37:01.127 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-25 16:37:01.127 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-25 16:37:01.127 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-25 16:37:01.127 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-25 16:37:01.127 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-25 16:37:01.127 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-25 16:37:01.128 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-25 16:37:01.128 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-25 16:37:01.128 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-25 16:37:01.128 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-25 16:37:01.128 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-25 16:37:01.128 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-25 16:37:01.128 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-25 16:37:01.128 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-25 16:37:01.128 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-25 16:37:01.129 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-25 16:37:01.129 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-25 16:37:01.129 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-25 16:37:01.129 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-25 16:37:01.129 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-25 16:37:01.129 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-25 16:37:01.129 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-25 16:37:01.129 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-25 16:37:01.129 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-25 16:37:01.129 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-25 16:37:01.129 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-25 16:37:01.130 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-25 16:37:01.130 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-25 16:37:01.130 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-25 16:37:01.130 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-25 16:37:01.130 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-25 16:37:01.130 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-25 16:37:01.130 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-25 16:37:01.130 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-25 16:37:01.130 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-25 16:37:01.130 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-25 16:37:01.130 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-25 16:37:01.130 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-25 16:37:01.131 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-25 16:37:01.131 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-25 16:37:01.131 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-25 16:37:01.131 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-25 16:37:01.131 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-25 16:37:01.131 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-25 16:37:01.131 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-25 16:37:01.131 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-25 16:37:01.132 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-25 16:37:01.132 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-25 16:37:01.132 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-25 16:37:01.132 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-25 16:37:01.132 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-25 16:37:01.132 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-25 16:37:01.132 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-25 16:37:01.133 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-25 16:37:01.133 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-25 16:37:01.133 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-25 16:37:01.133 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-25 16:37:01.133 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-25 16:37:01.133 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-25 16:37:01.133 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-25 16:37:01.133 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-25 16:37:01.133 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-25 16:37:01.133 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-25 16:37:01.134 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-25 16:37:01.134 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-25 16:37:01.134 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-25 16:37:01.134 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-25 16:37:01.134 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-25 16:37:01.134 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-25 16:37:01.134 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-25 16:37:01.135 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-25 16:37:01.135 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-25 16:37:01.135 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-25 16:37:01.135 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-25 16:37:01.135 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-25 16:37:01.135 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-25 16:37:01.135 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-25 16:37:01.135 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-25 16:37:01.135 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-25 16:37:01.135 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-25 16:37:01.136 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-25 16:37:01.136 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-25 16:37:01.136 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-25 16:37:01.136 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-25 16:37:01.136 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-25 16:37:01.136 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-25 16:37:01.136 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-25 16:37:01.137 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-25 16:37:01.137 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-25 16:37:01.137 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-25 16:37:01.137 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-25 16:37:01.137 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-25 16:37:01.137 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-25 16:37:01.137 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-25 16:37:01.137 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-25 16:37:01.137 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-25 16:37:01.137 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2024-11-25 16:37:01.137 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2024-11-25 16:37:01.142 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-25 16:37:01.142 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-25 16:37:01.143 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1bc49bc5
[DEBUG] 2024-11-25 16:37:01.143 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-25 16:37:01.143 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-25 16:37:01.144 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-25 16:37:01.144 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-25 16:37:01.144 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@24e83d19
[DEBUG] 2024-11-25 16:37:01.144 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5c080ef3
[DEBUG] 2024-11-25 16:37:01.144 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@188cbcde
[DEBUG] 2024-11-25 16:37:01.144 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ee6291f
[INFO ] 2024-11-25 16:37:01.168 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-25 16:37:01.168 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-25 16:37:01.168 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-25 16:37:01.245 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-25 16:37:01.316 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-25 16:37:01.316 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-25 16:37:01.316 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-25 16:37:01.350 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-25 16:37:01.351 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-25 16:37:01.356 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-25 16:37:01.356 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-25 16:37:01.369 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e)
[DEBUG] 2024-11-25 16:37:01.369 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@513b52af)
[DEBUG] 2024-11-25 16:37:01.370 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a8c93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bed3315)
[DEBUG] 2024-11-25 16:37:01.370 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24)
[DEBUG] 2024-11-25 16:37:01.370 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c7350b0)
[DEBUG] 2024-11-25 16:37:01.370 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bc4ef12)
[DEBUG] 2024-11-25 16:37:01.370 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50448409) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5634a861)
[DEBUG] 2024-11-25 16:37:01.370 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b0dc227) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37ad042b)
[DEBUG] 2024-11-25 16:37:01.370 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@43bdaa1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30b975ad)
[DEBUG] 2024-11-25 16:37:01.371 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-25 16:37:01.371 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:37:01.372 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:37:01.373 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:37:01.373 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:37:01.376 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@52bf7bf6
[DEBUG] 2024-11-25 16:37:01.376 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1bc49bc5`
[DEBUG] 2024-11-25 16:37:01.380 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:37:01.380 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:37:01.380 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:37:01.383 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:37:01.383 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:37:01.383 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:37:01.383 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:37:01.383 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:37:01.383 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:37:01.384 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:37:01.384 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:37:01.384 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:37:01.385 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@411a5965]
[DEBUG] 2024-11-25 16:37:01.416 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-25 16:37:01.435 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-25 16:37:01.441 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-25 16:37:01.446 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-25 16:37:01.452 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:37:01.468 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:01.468 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:37:01.468 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:37:01.470 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:37:01.473 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-25 16:37:01.476 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:37:01.479 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-25 16:37:01.479 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:37:01.482 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:37:01.488 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:01.488 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:01.496 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-25 16:37:01.497 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:01.498 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:37:01.498 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:37:01.499 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:01.499 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:01.502 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:01.503 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-25 16:37:01.503 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-25 16:37:01.504 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-25 16:37:01.504 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-25 16:37:01.504 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-25 16:37:01.504 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-25 16:37:01.504 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-25 16:37:01.504 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:37:01.508 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:01.509 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-25 16:37:01.509 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-25 16:37:01.509 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:37:01.510 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:01.510 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:37:01.510 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:01.510 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:37:01.511 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-25 16:37:01.511 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:37:01.511 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-25 16:37:01.511 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:37:01.511 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:37:01.511 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-25 16:37:01.511 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-25 16:37:01.511 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-25 16:37:01.511 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-25 16:37:01.512 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-25 16:37:01.512 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-25 16:37:01.512 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:01.512 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:01.512 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-25 16:37:01.512 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:01.513 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:37:01.513 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:37:01.513 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:01.513 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:01.513 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:01.513 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-25 16:37:01.513 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:37:01.514 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:01.514 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-25 16:37:01.514 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-25 16:37:01.515 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:37:01.518 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:01.519 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:37:01.519 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:01.519 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:37:01.519 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-25 16:37:01.519 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:37:01.519 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-25 16:37:01.519 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:37:01.519 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:37:01.519 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-25 16:37:01.520 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:01.522 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-25 16:37:01.522 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-25 16:37:01.522 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-25 16:37:01.522 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-25 16:37:01.522 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-25 16:37:01.522 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-25 16:37:01.522 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-25 16:37:01.523 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-25 16:37:01.523 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:01.523 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-25 16:37:01.523 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:37:01.524 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:37:01.524 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-25 16:37:01.525 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:37:01.525 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-25 16:37:01.525 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:37:01.526 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-25 16:37:01.530 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-25 16:37:01.530 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-25 16:37:01.531 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-25 16:37:01.531 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:01.532 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-25 16:37:01.533 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-25 16:37:01.534 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-25 16:37:01.534 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:01.534 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:01.535 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-25 16:37:01.535 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-25 16:37:01.535 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-25 16:37:01.535 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:01.535 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:01.535 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:37:01.543 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:01.543 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:37:01.785 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-25 16:37:01.819 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:37:01.819 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.UserDaoTest,getByIdSuccess, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@18a98913, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-25 16:37:01.823 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-25 16:37:01.829 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:37:01.862 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-25 16:37:01.862 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-25 16:37:01.863 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-25 16:37:01.863 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-25 16:37:01.864 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3a109ff7] under count; prior registration was null
[DEBUG] 2024-11-25 16:37:01.864 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@15369d73] under every; prior registration was null
[DEBUG] 2024-11-25 16:37:01.864 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1cde374] under any; prior registration was null
[DEBUG] 2024-11-25 16:37:01.865 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-25 16:37:01.865 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-25 16:37:01.865 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-25 16:37:01.865 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-25 16:37:01.865 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-25 16:37:01.865 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-25 16:37:01.865 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-25 16:37:01.865 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-25 16:37:01.865 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-25 16:37:01.865 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-25 16:37:01.865 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-25 16:37:01.865 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-25 16:37:01.865 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-25 16:37:01.866 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-25 16:37:01.866 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-25 16:37:01.866 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-25 16:37:01.866 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-25 16:37:01.867 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ffd9f8] under sinh; prior registration was null
[DEBUG] 2024-11-25 16:37:01.868 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642c6461] under cosh; prior registration was null
[DEBUG] 2024-11-25 16:37:01.868 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ace6346] under tanh; prior registration was null
[DEBUG] 2024-11-25 16:37:01.868 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e48462d] under pi; prior registration was null
[DEBUG] 2024-11-25 16:37:01.868 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17216605] under log; prior registration was null
[DEBUG] 2024-11-25 16:37:01.868 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-25 16:37:01.868 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-25 16:37:01.868 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-25 16:37:01.868 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-25 16:37:01.868 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-25 16:37:01.869 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-25 16:37:01.869 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-25 16:37:01.869 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-25 16:37:01.869 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-25 16:37:01.869 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-25 16:37:01.869 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-25 16:37:01.869 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-25 16:37:01.869 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1144a02b] under position; prior registration was null
[DEBUG] 2024-11-25 16:37:01.871 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@410fc508] under overlay; prior registration was null
[DEBUG] 2024-11-25 16:37:01.871 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5d7f8467] under trim; prior registration was null
[DEBUG] 2024-11-25 16:37:01.872 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2eb1c615] under cast; prior registration was null
[DEBUG] 2024-11-25 16:37:01.872 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2674d4f6] under collate; prior registration was null
[DEBUG] 2024-11-25 16:37:01.872 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7ab63838] under extract; prior registration was null
[DEBUG] 2024-11-25 16:37:01.873 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-25 16:37:01.873 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-25 16:37:01.873 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2a04ab05] under ifnull; prior registration was null
[DEBUG] 2024-11-25 16:37:01.874 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-25 16:37:01.874 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-25 16:37:01.874 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@250967f1] under pad; prior registration was null
[DEBUG] 2024-11-25 16:37:01.875 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@15a8cebd] under str; prior registration was null
[DEBUG] 2024-11-25 16:37:01.876 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@661e1399] under format; prior registration was null
[DEBUG] 2024-11-25 16:37:01.876 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3cc3f13e] under timestampadd; prior registration was null
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@482ba4b1] under timestampdiff; prior registration was null
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@633ddc0c] under current_date; prior registration was null
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4bcdd11] under current_time; prior registration was null
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1471b98d] under current_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5514579e] under local_date; prior registration was null
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58c42c8c] under local_time; prior registration was null
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3af236d0] under local_datetime; prior registration was null
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23564dd2] under offset_datetime; prior registration was null
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-25 16:37:01.877 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-25 16:37:01.878 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54895681] under instant; prior registration was null
[DEBUG] 2024-11-25 16:37:01.878 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-25 16:37:01.878 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@935d3f9] under sql; prior registration was null
[DEBUG] 2024-11-25 16:37:01.878 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-25 16:37:01.879 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-25 16:37:01.879 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-25 16:37:01.879 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-25 16:37:01.879 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17216605
[DEBUG] 2024-11-25 16:37:01.879 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-25 16:37:01.879 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-25 16:37:01.879 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-25 16:37:01.879 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-25 16:37:01.879 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-25 16:37:01.879 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-25 16:37:01.879 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-25 16:37:01.880 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-25 16:37:01.880 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@589fb74d] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-25 16:37:01.880 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@200d1a3d] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-25 16:37:01.880 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-25 16:37:01.880 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-25 16:37:01.880 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-25 16:37:01.880 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-25 16:37:01.881 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-25 16:37:01.881 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-25 16:37:01.881 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-25 16:37:01.881 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-25 16:37:01.881 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-25 16:37:01.881 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-25 16:37:01.881 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-25 16:37:01.881 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-25 16:37:01.881 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-25 16:37:01.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-25 16:37:01.883 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-25 16:37:01.883 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-25 16:37:01.883 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-25 16:37:01.883 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7de147e9] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1144a02b
[DEBUG] 2024-11-25 16:37:01.883 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-25 16:37:01.883 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-25 16:37:01.883 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-25 16:37:01.886 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7772d266] under trunc; prior registration was null
[DEBUG] 2024-11-25 16:37:01.886 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-25 16:37:01.886 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-25 16:37:01.886 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a21c74] under bitand; prior registration was null
[DEBUG] 2024-11-25 16:37:01.886 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b8a144e] under bitor; prior registration was null
[DEBUG] 2024-11-25 16:37:01.886 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fb8dc01] under bitxor; prior registration was null
[DEBUG] 2024-11-25 16:37:01.886 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e38c472] under bitnot; prior registration was null
[DEBUG] 2024-11-25 16:37:01.886 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-25 16:37:01.886 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-25 16:37:01.886 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-25 16:37:01.886 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2ee92e7d] under format; prior registration was org.hibernate.dialect.function.FormatFunction@661e1399
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@58c42c8c
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3af236d0
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@759a678a] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e48462d
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cdbe5ec] under chr; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14b8a751] under sysdate; prior registration was null
[DEBUG] 2024-11-25 16:37:01.887 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-25 16:37:01.888 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-25 16:37:01.888 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-25 16:37:01.888 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-25 16:37:01.888 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-25 16:37:01.888 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-25 16:37:01.889 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@55421b8d] under rank; prior registration was null
[DEBUG] 2024-11-25 16:37:01.889 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@24a04257] under dense_rank; prior registration was null
[DEBUG] 2024-11-25 16:37:01.889 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6615237] under percent_rank; prior registration was null
[DEBUG] 2024-11-25 16:37:01.889 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@eaf8427] under cume_dist; prior registration was null
[DEBUG] 2024-11-25 16:37:01.890 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@13e00016] under listagg; prior registration was null
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:37:01.893 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-25 16:37:01.894 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-25 16:37:01.895 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-25 16:37:01.896 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-25 16:37:01.897 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-25 16:37:01.900 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-25 16:37:01.993 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:37:01.993 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-25 16:37:02.078 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:02.081 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:02.084 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:02.084 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:02.084 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:37:02.084 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:02.225 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-25 16:37:02.229 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:02.229 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:02.253 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:37:02.253 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:02.270 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-25 16:37:02.271 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:37:02.271 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:37:02.281 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-25 16:37:02.294 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:02.295 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:02.295 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:02.295 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:02.295 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:02.295 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:02.319 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-25 16:37:02.319 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-25 16:37:02.323 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-25 16:37:02.323 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:37:02.323 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:37:02.323 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-25 16:37:02.324 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-25 16:37:02.324 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:37:02.324 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:37:02.324 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-25 16:37:02.324 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-25 16:37:02.324 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:37:02.324 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:37:02.324 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:37:02.384 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:37:02.385 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-25 16:37:02.393 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@23d0944b] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-25 16:37:02.394 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:37:02.398 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@578b2dec] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-25 16:37:02.398 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:37:02.402 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-25 16:37:02.411 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:02.421 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:02.422 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-25 16:37:02.422 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:37:02.422 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-25 16:37:02.422 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-25 16:37:02.422 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:37:02.422 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:37:02.423 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:37:02.424 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3b01897f] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:37:02.425 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:37:02.430 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@fb5d334] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:37:02.430 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:37:02.432 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:37:02.432 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:02.432 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:02.432 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-25 16:37:02.432 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:37:02.432 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-25 16:37:02.432 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-25 16:37:02.432 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:37:02.432 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-25 16:37:02.432 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:37:02.432 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3c743d40] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:37:02.433 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:37:02.433 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5aac6f9f] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:37:02.433 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:37:02.433 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-25 16:37:02.433 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:02.433 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-25 16:37:02.433 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-25 16:37:02.433 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-25 16:37:02.433 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-25 16:37:02.433 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-25 16:37:02.434 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:37:02.435 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@65262308] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:37:02.435 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:37:02.435 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2430cf17] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:37:02.435 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:37:02.436 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@bf4e48e] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-25 16:37:02.437 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-25 16:37:02.437 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:02.437 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:02.437 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:37:02.437 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6ca33187] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:37:02.437 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:37:02.437 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1a67f8b4] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-25 16:37:02.437 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5f1f0ee6] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:37:02.437 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:37:02.438 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-25 16:37:02.438 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:02.438 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:02.461 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-25 16:37:02.461 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-25 16:37:02.464 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-25 16:37:02.464 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-25 16:37:02.465 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@294c44b7]
[DEBUG] 2024-11-25 16:37:02.466 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-25 16:37:02.466 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-25 16:37:02.466 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:37:02.466 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-25 16:37:02.468 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3d3b272a
[DEBUG] 2024-11-25 16:37:02.468 [main] SessionFactoryRegistry - Registering SessionFactory: fcc0dfc5-3b38-4594-b6b1-cc8adb461300 (<unnamed>)
[DEBUG] 2024-11-25 16:37:02.468 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-25 16:37:02.468 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-25 16:37:02.513 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-25 16:37:02.526 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:37:02.539 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@1003412230 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@686366573 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@382992974 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@300041864)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@1106002545 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1890212065 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@357532288)

[DEBUG] 2024-11-25 16:37:02.543 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:37:02.556 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:02.558 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:37:02.558 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@2121705071 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@1914928104 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@96858414 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@300041864)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@603456365 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1760992419 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@357532288)

[DEBUG] 2024-11-25 16:37:02.558 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:37:02.559 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:08.824 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 16:37:08.827 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-25 16:37:08.850 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-25 16:37:08.852 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-25 16:37:08.893 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 16:37:08.898 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 16:37:09.060 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-25 16:37:09.063 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-25 16:37:09.064 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-25 16:37:09.064 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:37:09.064 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:37:09.064 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-25 16:37:09.065 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-25 16:37:09.066 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-25 16:37:09.067 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:37:09.067 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-25 16:37:09.067 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-25 16:37:09.068 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:37:09.068 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-25 16:37:09.074 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-25 16:37:09.075 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-25 16:37:09.154 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-25 16:37:09.155 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-25 16:37:09.155 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2024-11-25 16:37:09.155 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-25 16:37:09.155 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2024-11-25 16:37:09.155 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-25 16:37:09.155 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2024-11-25 16:37:09.155 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-25 16:37:09.155 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2024-11-25 16:37:09.155 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-25 16:37:09.155 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-25 16:37:09.155 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2024-11-25 16:37:09.156 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-25 16:37:09.156 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-25 16:37:09.156 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2024-11-25 16:37:09.156 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-25 16:37:09.156 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2024-11-25 16:37:09.156 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2024-11-25 16:37:09.156 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-25 16:37:09.156 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2024-11-25 16:37:09.156 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2024-11-25 16:37:09.157 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2024-11-25 16:37:09.157 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-25 16:37:09.157 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-25 16:37:09.157 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2024-11-25 16:37:09.157 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-25 16:37:09.157 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-25 16:37:09.157 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2024-11-25 16:37:09.157 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-25 16:37:09.157 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-25 16:37:09.157 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2024-11-25 16:37:09.157 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-25 16:37:09.158 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-25 16:37:09.158 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2024-11-25 16:37:09.158 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-25 16:37:09.158 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-25 16:37:09.158 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2024-11-25 16:37:09.158 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-25 16:37:09.158 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2024-11-25 16:37:09.158 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-25 16:37:09.159 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2024-11-25 16:37:09.159 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-25 16:37:09.159 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-25 16:37:09.159 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2024-11-25 16:37:09.159 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2024-11-25 16:37:09.159 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-25 16:37:09.159 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2024-11-25 16:37:09.159 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2024-11-25 16:37:09.159 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-25 16:37:09.159 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-25 16:37:09.159 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2024-11-25 16:37:09.160 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2024-11-25 16:37:09.160 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2024-11-25 16:37:09.160 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2024-11-25 16:37:09.160 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-25 16:37:09.160 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2024-11-25 16:37:09.160 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-25 16:37:09.160 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2024-11-25 16:37:09.160 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2024-11-25 16:37:09.160 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2024-11-25 16:37:09.160 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2024-11-25 16:37:09.161 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2024-11-25 16:37:09.161 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2024-11-25 16:37:09.161 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2024-11-25 16:37:09.161 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-25 16:37:09.161 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2024-11-25 16:37:09.161 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-25 16:37:09.162 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2024-11-25 16:37:09.162 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-25 16:37:09.162 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2024-11-25 16:37:09.162 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-25 16:37:09.162 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2024-11-25 16:37:09.162 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-25 16:37:09.162 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2024-11-25 16:37:09.162 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2024-11-25 16:37:09.162 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2024-11-25 16:37:09.162 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-25 16:37:09.162 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2024-11-25 16:37:09.163 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2024-11-25 16:37:09.163 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2024-11-25 16:37:09.163 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2024-11-25 16:37:09.163 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-25 16:37:09.163 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2024-11-25 16:37:09.163 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2024-11-25 16:37:09.163 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2024-11-25 16:37:09.163 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-25 16:37:09.163 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2024-11-25 16:37:09.164 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-25 16:37:09.164 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2024-11-25 16:37:09.164 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-25 16:37:09.164 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-25 16:37:09.164 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2024-11-25 16:37:09.164 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-25 16:37:09.165 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-25 16:37:09.165 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2024-11-25 16:37:09.165 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2024-11-25 16:37:09.165 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2024-11-25 16:37:09.165 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-25 16:37:09.165 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2024-11-25 16:37:09.165 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-25 16:37:09.166 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-25 16:37:09.166 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2024-11-25 16:37:09.166 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2024-11-25 16:37:09.166 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2024-11-25 16:37:09.166 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-25 16:37:09.166 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2024-11-25 16:37:09.166 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-25 16:37:09.166 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-25 16:37:09.166 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2024-11-25 16:37:09.167 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-25 16:37:09.167 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2024-11-25 16:37:09.167 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-25 16:37:09.167 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2024-11-25 16:37:09.167 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-25 16:37:09.167 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2024-11-25 16:37:09.167 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-25 16:37:09.167 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2024-11-25 16:37:09.167 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-25 16:37:09.167 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2024-11-25 16:37:09.168 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2024-11-25 16:37:09.168 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2024-11-25 16:37:09.171 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-25 16:37:09.171 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79fd6f95
[DEBUG] 2024-11-25 16:37:09.172 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1bc49bc5
[DEBUG] 2024-11-25 16:37:09.172 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b6e5c12
[DEBUG] 2024-11-25 16:37:09.172 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4f66ffc8
[DEBUG] 2024-11-25 16:37:09.173 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@124ac145
[DEBUG] 2024-11-25 16:37:09.173 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2def7a7a
[DEBUG] 2024-11-25 16:37:09.173 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@24e83d19
[DEBUG] 2024-11-25 16:37:09.173 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5c080ef3
[DEBUG] 2024-11-25 16:37:09.173 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@188cbcde
[DEBUG] 2024-11-25 16:37:09.173 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ee6291f
[INFO ] 2024-11-25 16:37:09.192 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-25 16:37:09.192 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-25 16:37:09.192 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-25 16:37:09.260 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-25 16:37:09.326 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-25 16:37:09.326 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-25 16:37:09.326 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-25 16:37:09.359 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-25 16:37:09.360 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-25 16:37:09.365 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-25 16:37:09.365 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-25 16:37:09.377 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49d30c6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1115433e)
[DEBUG] 2024-11-25 16:37:09.377 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fdca00a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@513b52af)
[DEBUG] 2024-11-25 16:37:09.377 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a8c93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bed3315)
[DEBUG] 2024-11-25 16:37:09.377 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@119b0892) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a3e8e24)
[DEBUG] 2024-11-25 16:37:09.377 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed4a7e4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c7350b0)
[DEBUG] 2024-11-25 16:37:09.378 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55651434) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bc4ef12)
[DEBUG] 2024-11-25 16:37:09.378 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50448409) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5634a861)
[DEBUG] 2024-11-25 16:37:09.378 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b0dc227) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37ad042b)
[DEBUG] 2024-11-25 16:37:09.378 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@43bdaa1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30b975ad)
[DEBUG] 2024-11-25 16:37:09.379 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-25 16:37:09.379 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:37:09.379 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:37:09.381 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:37:09.381 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:37:09.383 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@52bf7bf6
[DEBUG] 2024-11-25 16:37:09.383 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1bc49bc5`
[DEBUG] 2024-11-25 16:37:09.388 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:37:09.388 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:37:09.388 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:37:09.390 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:37:09.390 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:37:09.390 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:37:09.390 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:37:09.391 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:37:09.391 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:37:09.391 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:37:09.391 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:37:09.391 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:37:09.392 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@411a5965]
[DEBUG] 2024-11-25 16:37:09.424 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-25 16:37:09.442 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-25 16:37:09.447 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-25 16:37:09.451 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-25 16:37:09.457 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:37:09.472 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:09.472 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:37:09.472 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:37:09.474 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:37:09.476 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-25 16:37:09.479 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:37:09.482 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-25 16:37:09.483 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:37:09.486 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:37:09.490 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:09.491 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:09.497 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-25 16:37:09.499 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:09.499 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:37:09.499 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:37:09.500 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:09.500 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:09.502 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:09.503 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-25 16:37:09.504 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-25 16:37:09.504 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-25 16:37:09.504 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-25 16:37:09.504 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-25 16:37:09.504 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-25 16:37:09.504 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-25 16:37:09.505 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:37:09.509 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:09.510 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-25 16:37:09.510 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-25 16:37:09.510 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:37:09.512 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:09.512 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:37:09.512 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:09.512 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:37:09.512 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-25 16:37:09.512 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:37:09.512 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-25 16:37:09.513 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:37:09.513 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:37:09.513 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-25 16:37:09.513 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-25 16:37:09.513 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-25 16:37:09.513 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-25 16:37:09.513 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-25 16:37:09.513 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-25 16:37:09.514 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:09.514 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:09.514 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-25 16:37:09.514 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:09.514 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:37:09.515 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:37:09.515 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:09.515 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:09.515 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:09.515 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-25 16:37:09.515 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:37:09.516 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:09.517 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-25 16:37:09.517 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-25 16:37:09.518 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:37:09.522 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:09.522 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:37:09.523 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:09.523 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:37:09.523 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-25 16:37:09.523 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:37:09.523 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-25 16:37:09.523 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:37:09.523 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:37:09.523 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-25 16:37:09.524 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:09.526 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-25 16:37:09.526 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-25 16:37:09.526 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-25 16:37:09.526 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-25 16:37:09.526 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-25 16:37:09.526 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-25 16:37:09.526 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-25 16:37:09.526 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-25 16:37:09.527 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:09.527 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-25 16:37:09.527 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:37:09.528 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:37:09.528 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-25 16:37:09.529 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:37:09.529 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-25 16:37:09.529 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:37:09.530 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-25 16:37:09.533 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-25 16:37:09.533 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-25 16:37:09.533 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-25 16:37:09.533 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:09.535 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-25 16:37:09.536 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-25 16:37:09.537 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-25 16:37:09.538 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:09.538 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:09.538 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-25 16:37:09.538 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-25 16:37:09.538 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-25 16:37:09.539 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:09.539 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:09.539 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:37:09.546 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:09.546 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:37:09.763 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-25 16:37:09.794 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:37:09.794 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.radams.entity.UserDaoTest,getByIdSuccess, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@18a98913, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-25 16:37:09.797 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-25 16:37:09.801 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:37:09.831 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-25 16:37:09.831 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-25 16:37:09.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-25 16:37:09.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-25 16:37:09.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3a109ff7] under count; prior registration was null
[DEBUG] 2024-11-25 16:37:09.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@15369d73] under every; prior registration was null
[DEBUG] 2024-11-25 16:37:09.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1cde374] under any; prior registration was null
[DEBUG] 2024-11-25 16:37:09.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-25 16:37:09.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-25 16:37:09.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-25 16:37:09.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-25 16:37:09.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-25 16:37:09.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-25 16:37:09.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-25 16:37:09.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-25 16:37:09.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-25 16:37:09.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-25 16:37:09.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-25 16:37:09.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-25 16:37:09.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-25 16:37:09.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-25 16:37:09.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-25 16:37:09.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-25 16:37:09.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-25 16:37:09.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ffd9f8] under sinh; prior registration was null
[DEBUG] 2024-11-25 16:37:09.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@642c6461] under cosh; prior registration was null
[DEBUG] 2024-11-25 16:37:09.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ace6346] under tanh; prior registration was null
[DEBUG] 2024-11-25 16:37:09.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e48462d] under pi; prior registration was null
[DEBUG] 2024-11-25 16:37:09.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17216605] under log; prior registration was null
[DEBUG] 2024-11-25 16:37:09.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-25 16:37:09.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-25 16:37:09.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-25 16:37:09.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-25 16:37:09.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-25 16:37:09.838 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-25 16:37:09.838 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-25 16:37:09.838 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-25 16:37:09.838 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-25 16:37:09.838 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-25 16:37:09.838 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-25 16:37:09.838 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-25 16:37:09.838 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1144a02b] under position; prior registration was null
[DEBUG] 2024-11-25 16:37:09.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@410fc508] under overlay; prior registration was null
[DEBUG] 2024-11-25 16:37:09.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5d7f8467] under trim; prior registration was null
[DEBUG] 2024-11-25 16:37:09.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2eb1c615] under cast; prior registration was null
[DEBUG] 2024-11-25 16:37:09.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2674d4f6] under collate; prior registration was null
[DEBUG] 2024-11-25 16:37:09.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7ab63838] under extract; prior registration was null
[DEBUG] 2024-11-25 16:37:09.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-25 16:37:09.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-25 16:37:09.843 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2a04ab05] under ifnull; prior registration was null
[DEBUG] 2024-11-25 16:37:09.843 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-25 16:37:09.843 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-25 16:37:09.844 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@250967f1] under pad; prior registration was null
[DEBUG] 2024-11-25 16:37:09.844 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@15a8cebd] under str; prior registration was null
[DEBUG] 2024-11-25 16:37:09.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@661e1399] under format; prior registration was null
[DEBUG] 2024-11-25 16:37:09.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3cc3f13e] under timestampadd; prior registration was null
[DEBUG] 2024-11-25 16:37:09.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@482ba4b1] under timestampdiff; prior registration was null
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@633ddc0c] under current_date; prior registration was null
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4bcdd11] under current_time; prior registration was null
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1471b98d] under current_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5514579e] under local_date; prior registration was null
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@58c42c8c] under local_time; prior registration was null
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3af236d0] under local_datetime; prior registration was null
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23564dd2] under offset_datetime; prior registration was null
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54895681] under instant; prior registration was null
[DEBUG] 2024-11-25 16:37:09.847 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-25 16:37:09.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@935d3f9] under sql; prior registration was null
[DEBUG] 2024-11-25 16:37:09.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-25 16:37:09.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-25 16:37:09.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-25 16:37:09.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-25 16:37:09.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17216605
[DEBUG] 2024-11-25 16:37:09.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-25 16:37:09.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-25 16:37:09.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-25 16:37:09.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-25 16:37:09.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-25 16:37:09.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-25 16:37:09.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-25 16:37:09.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-25 16:37:09.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@589fb74d] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-25 16:37:09.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@200d1a3d] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-25 16:37:09.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-25 16:37:09.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-25 16:37:09.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-25 16:37:09.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-25 16:37:09.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-25 16:37:09.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-25 16:37:09.851 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-25 16:37:09.851 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-25 16:37:09.851 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-25 16:37:09.851 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-25 16:37:09.851 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-25 16:37:09.851 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-25 16:37:09.851 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-25 16:37:09.851 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-25 16:37:09.851 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-25 16:37:09.851 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-25 16:37:09.851 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-25 16:37:09.851 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-25 16:37:09.851 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-25 16:37:09.851 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7de147e9] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1144a02b
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-25 16:37:09.852 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-25 16:37:09.855 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7772d266] under trunc; prior registration was null
[DEBUG] 2024-11-25 16:37:09.855 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-25 16:37:09.855 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-25 16:37:09.855 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a21c74] under bitand; prior registration was null
[DEBUG] 2024-11-25 16:37:09.855 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b8a144e] under bitor; prior registration was null
[DEBUG] 2024-11-25 16:37:09.855 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fb8dc01] under bitxor; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e38c472] under bitnot; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2ee92e7d] under format; prior registration was org.hibernate.dialect.function.FormatFunction@661e1399
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@58c42c8c
[DEBUG] 2024-11-25 16:37:09.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3af236d0
[DEBUG] 2024-11-25 16:37:09.857 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-25 16:37:09.857 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@759a678a] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e48462d
[DEBUG] 2024-11-25 16:37:09.857 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cdbe5ec] under chr; prior registration was null
[DEBUG] 2024-11-25 16:37:09.857 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-25 16:37:09.857 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14b8a751] under sysdate; prior registration was null
[DEBUG] 2024-11-25 16:37:09.857 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-25 16:37:09.857 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-25 16:37:09.857 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-25 16:37:09.857 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-25 16:37:09.857 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-25 16:37:09.857 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-25 16:37:09.858 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@55421b8d] under rank; prior registration was null
[DEBUG] 2024-11-25 16:37:09.858 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@24a04257] under dense_rank; prior registration was null
[DEBUG] 2024-11-25 16:37:09.858 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6615237] under percent_rank; prior registration was null
[DEBUG] 2024-11-25 16:37:09.858 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@eaf8427] under cume_dist; prior registration was null
[DEBUG] 2024-11-25 16:37:09.858 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@13e00016] under listagg; prior registration was null
[DEBUG] 2024-11-25 16:37:09.869 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.869 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.869 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:37:09.869 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:37:09.869 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-25 16:37:09.869 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-25 16:37:09.869 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.869 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.869 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:37:09.870 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.871 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-25 16:37:09.872 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-25 16:37:09.873 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-25 16:37:09.876 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-25 16:37:09.962 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:37:09.963 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-25 16:37:10.036 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:10.038 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:10.040 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:10.040 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:10.040 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:37:10.040 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:10.167 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-25 16:37:10.171 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:10.171 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:10.194 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:37:10.195 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:10.212 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-25 16:37:10.213 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:37:10.213 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:37:10.224 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-25 16:37:10.237 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:10.238 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:10.238 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:10.238 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:10.238 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:10.238 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:10.261 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-25 16:37:10.262 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-25 16:37:10.264 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-25 16:37:10.265 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:37:10.265 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:37:10.265 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-25 16:37:10.265 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-25 16:37:10.265 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:37:10.265 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:37:10.265 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-25 16:37:10.265 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-25 16:37:10.265 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:37:10.265 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:37:10.265 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:37:10.320 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:37:10.322 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-25 16:37:10.330 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@23d0944b] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-25 16:37:10.331 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:37:10.335 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@578b2dec] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-25 16:37:10.335 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:37:10.340 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-25 16:37:10.348 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:10.356 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:10.356 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-25 16:37:10.356 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:37:10.356 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-25 16:37:10.356 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-25 16:37:10.356 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:37:10.356 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:37:10.357 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:37:10.358 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3b01897f] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:37:10.359 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:37:10.364 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@fb5d334] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:37:10.365 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:37:10.366 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:37:10.366 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:10.366 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:10.366 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-25 16:37:10.366 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:37:10.366 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-25 16:37:10.366 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-25 16:37:10.367 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:37:10.367 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-25 16:37:10.367 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:37:10.367 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3c743d40] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:37:10.367 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:37:10.367 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5aac6f9f] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:37:10.367 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:37:10.367 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-25 16:37:10.367 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:10.368 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-25 16:37:10.368 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-25 16:37:10.368 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-25 16:37:10.368 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-25 16:37:10.368 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-25 16:37:10.369 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:37:10.369 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@65262308] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:37:10.369 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:37:10.369 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2430cf17] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:37:10.369 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:37:10.370 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@bf4e48e] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-25 16:37:10.371 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-25 16:37:10.371 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:10.371 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:10.371 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:37:10.371 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6ca33187] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:37:10.371 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:37:10.371 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1a67f8b4] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-25 16:37:10.371 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5f1f0ee6] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:37:10.372 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:37:10.372 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-25 16:37:10.372 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:10.372 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:10.396 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-25 16:37:10.396 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-25 16:37:10.398 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-25 16:37:10.399 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-25 16:37:10.399 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57c00115] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@294c44b7]
[DEBUG] 2024-11-25 16:37:10.400 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-25 16:37:10.400 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-25 16:37:10.400 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:37:10.400 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-25 16:37:10.402 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3d3b272a
[DEBUG] 2024-11-25 16:37:10.402 [main] SessionFactoryRegistry - Registering SessionFactory: c0e1a11e-e538-413d-875c-d9435a3a0e77 (<unnamed>)
[DEBUG] 2024-11-25 16:37:10.402 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-25 16:37:10.402 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-25 16:37:10.446 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-25 16:37:10.459 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:37:10.474 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@1003412230 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@686366573 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@382992974 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@300041864)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@1106002545 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1890212065 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@357532288)

[DEBUG] 2024-11-25 16:37:10.478 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:37:10.493 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:10.495 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:37:10.496 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@2121705071 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@1914928104 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@96858414 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@300041864)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@603456365 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1760992419 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@357532288)

[DEBUG] 2024-11-25 16:37:10.496 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:37:10.497 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:30.786 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 16:37:30.788 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-25 16:37:30.805 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-25 16:37:30.807 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-25 16:37:30.839 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 16:37:30.843 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 16:37:30.993 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-25 16:37:30.996 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-25 16:37:30.997 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-25 16:37:30.997 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:37:30.997 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:37:30.997 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-25 16:37:30.998 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-25 16:37:30.998 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-25 16:37:30.999 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:37:30.999 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-25 16:37:30.999 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-25 16:37:31.000 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:37:31.000 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-25 16:37:31.005 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-25 16:37:31.005 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-25 16:37:31.063 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:37:31.063 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:37:31.064 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:37:31.064 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 16:37:31.064 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 16:37:31.064 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 16:37:31.064 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 16:37:31.064 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 16:37:31.064 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 16:37:31.064 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:37:31.064 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:37:31.064 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:37:31.064 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:37:31.064 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:37:31.065 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:37:31.065 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 16:37:31.065 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 16:37:31.065 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-25 16:37:31.065 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 16:37:31.065 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 16:37:31.065 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-25 16:37:31.065 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-25 16:37:31.065 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:37:31.065 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:37:31.065 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:37:31.065 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:37:31.066 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:37:31.066 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:37:31.066 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:37:31.066 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:37:31.066 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:37:31.066 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:37:31.066 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:37:31.066 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:37:31.066 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:37:31.066 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:37:31.066 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:37:31.066 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 16:37:31.066 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 16:37:31.067 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 16:37:31.067 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 16:37:31.067 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:37:31.067 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:37:31.067 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:37:31.067 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-25 16:37:31.068 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 16:37:31.068 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 16:37:31.068 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-25 16:37:31.068 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:37:31.068 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:37:31.068 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:37:31.068 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-25 16:37:31.068 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-25 16:37:31.068 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-25 16:37:31.068 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 16:37:31.069 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 16:37:31.069 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 16:37:31.069 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 16:37:31.069 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-25 16:37:31.069 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-25 16:37:31.069 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-25 16:37:31.069 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-25 16:37:31.069 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-25 16:37:31.069 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-25 16:37:31.069 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 16:37:31.069 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 16:37:31.069 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 16:37:31.070 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-25 16:37:31.071 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-25 16:37:31.071 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 16:37:31.071 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 16:37:31.071 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 16:37:31.071 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 16:37:31.071 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:37:31.071 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:37:31.071 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:37:31.071 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:37:31.071 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:37:31.072 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:37:31.072 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-25 16:37:31.072 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-25 16:37:31.072 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 16:37:31.072 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 16:37:31.072 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:37:31.072 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:37:31.072 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:37:31.072 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-25 16:37:31.072 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-25 16:37:31.072 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 16:37:31.073 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 16:37:31.073 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:37:31.073 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:37:31.073 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:37:31.073 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 16:37:31.073 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 16:37:31.073 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 16:37:31.073 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 16:37:31.073 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 16:37:31.073 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 16:37:31.073 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 16:37:31.073 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 16:37:31.073 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-25 16:37:31.073 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-25 16:37:31.074 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-25 16:37:31.074 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-25 16:37:31.077 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-25 16:37:31.077 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-25 16:37:31.078 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@491f8831
[DEBUG] 2024-11-25 16:37:31.078 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@691541bc
[DEBUG] 2024-11-25 16:37:31.078 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b733ef7
[DEBUG] 2024-11-25 16:37:31.078 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43a4a9e5
[DEBUG] 2024-11-25 16:37:31.078 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@764fffa0
[DEBUG] 2024-11-25 16:37:31.078 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35145874
[DEBUG] 2024-11-25 16:37:31.078 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77524ca7
[DEBUG] 2024-11-25 16:37:31.078 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11df2829
[DEBUG] 2024-11-25 16:37:31.078 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18e4674d
[INFO ] 2024-11-25 16:37:31.096 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-25 16:37:31.097 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-25 16:37:31.097 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-25 16:37:31.159 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-25 16:37:31.213 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-25 16:37:31.213 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-25 16:37:31.213 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-25 16:37:31.244 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-25 16:37:31.245 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-25 16:37:31.249 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-25 16:37:31.249 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-25 16:37:31.259 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eaf8427) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c)
[DEBUG] 2024-11-25 16:37:31.259 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d6039df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae)
[DEBUG] 2024-11-25 16:37:31.259 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e00016) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3cbe6e)
[DEBUG] 2024-11-25 16:37:31.259 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@177ede17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17176b18)
[DEBUG] 2024-11-25 16:37:31.259 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e4395c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab53860)
[DEBUG] 2024-11-25 16:37:31.259 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5ac347) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b9389f)
[DEBUG] 2024-11-25 16:37:31.259 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b2c5ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41f785e3)
[DEBUG] 2024-11-25 16:37:31.260 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9a3661) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727986ad)
[DEBUG] 2024-11-25 16:37:31.260 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1600a8a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b25ef1c)
[DEBUG] 2024-11-25 16:37:31.261 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-25 16:37:31.261 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:37:31.261 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:37:31.262 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:37:31.263 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:37:31.265 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@383cdd4d
[DEBUG] 2024-11-25 16:37:31.265 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@491f8831`
[DEBUG] 2024-11-25 16:37:31.269 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:37:31.269 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:37:31.269 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:37:31.272 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:37:31.272 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:37:31.272 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:37:31.272 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:37:31.272 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:37:31.272 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:37:31.273 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:37:31.273 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:37:31.273 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:37:31.274 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71369e1a]
[DEBUG] 2024-11-25 16:37:31.297 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-25 16:37:31.312 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-25 16:37:31.318 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-25 16:37:31.322 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-25 16:37:31.329 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:37:31.344 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:31.345 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:37:31.345 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:37:31.347 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:37:31.350 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-25 16:37:31.353 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:37:31.356 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-25 16:37:31.356 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:37:31.359 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:37:31.365 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:31.366 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:31.374 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-25 16:37:31.376 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:31.376 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:37:31.377 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:37:31.378 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:31.378 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:31.380 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:31.381 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-25 16:37:31.382 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-25 16:37:31.382 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-25 16:37:31.382 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-25 16:37:31.382 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-25 16:37:31.382 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-25 16:37:31.383 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-25 16:37:31.383 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:37:31.387 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:31.387 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-25 16:37:31.388 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-25 16:37:31.388 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:37:31.389 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:31.389 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:37:31.389 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:31.389 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:37:31.389 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-25 16:37:31.389 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:37:31.389 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-25 16:37:31.389 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:37:31.390 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:37:31.390 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-25 16:37:31.390 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-25 16:37:31.390 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-25 16:37:31.390 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-25 16:37:31.390 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-25 16:37:31.390 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-25 16:37:31.390 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:31.391 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:31.391 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-25 16:37:31.391 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:31.391 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:37:31.391 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:37:31.391 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:31.392 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:37:31.392 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:31.392 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-25 16:37:31.392 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:37:31.393 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:31.393 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-25 16:37:31.393 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-25 16:37:31.393 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:37:31.397 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:31.397 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:37:31.397 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:31.397 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:37:31.397 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-25 16:37:31.397 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:37:31.397 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-25 16:37:31.397 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:37:31.397 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:37:31.398 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-25 16:37:31.398 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:31.400 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-25 16:37:31.400 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-25 16:37:31.400 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-25 16:37:31.401 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-25 16:37:31.401 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-25 16:37:31.401 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-25 16:37:31.401 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-25 16:37:31.401 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-25 16:37:31.401 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:37:31.401 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-25 16:37:31.402 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:37:31.403 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:37:31.403 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-25 16:37:31.404 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:37:31.404 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-25 16:37:31.404 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:37:31.404 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-25 16:37:31.408 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-25 16:37:31.408 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-25 16:37:31.408 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-25 16:37:31.408 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:31.409 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-25 16:37:31.411 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-25 16:37:31.412 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-25 16:37:31.412 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:31.412 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:31.412 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-25 16:37:31.412 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-25 16:37:31.412 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-25 16:37:31.413 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:31.413 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:31.413 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:37:31.421 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:31.421 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:37:31.557 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-25 16:37:31.589 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:37:31.589 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter9100087656236982232.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire12012937837961009673tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_011120067309466463072tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter9100087656236982232.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d7d8911, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-25 16:37:31.592 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-25 16:37:31.596 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:37:31.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-25 16:37:31.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-25 16:37:31.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-25 16:37:31.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-25 16:37:31.652 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@20184ade] under count; prior registration was null
[DEBUG] 2024-11-25 16:37:31.653 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@77204651] under every; prior registration was null
[DEBUG] 2024-11-25 16:37:31.653 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@51cca357] under any; prior registration was null
[DEBUG] 2024-11-25 16:37:31.653 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-25 16:37:31.653 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-25 16:37:31.653 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-25 16:37:31.653 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-25 16:37:31.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-25 16:37:31.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-25 16:37:31.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-25 16:37:31.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-25 16:37:31.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-25 16:37:31.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-25 16:37:31.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-25 16:37:31.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-25 16:37:31.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-25 16:37:31.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-25 16:37:31.655 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-25 16:37:31.655 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-25 16:37:31.655 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-25 16:37:31.656 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350342e0] under sinh; prior registration was null
[DEBUG] 2024-11-25 16:37:31.656 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d] under cosh; prior registration was null
[DEBUG] 2024-11-25 16:37:31.656 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289] under tanh; prior registration was null
[DEBUG] 2024-11-25 16:37:31.656 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cc56b32] under pi; prior registration was null
[DEBUG] 2024-11-25 16:37:31.656 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43fe2008] under log; prior registration was null
[DEBUG] 2024-11-25 16:37:31.657 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-25 16:37:31.657 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-25 16:37:31.657 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-25 16:37:31.657 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-25 16:37:31.657 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-25 16:37:31.657 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-25 16:37:31.657 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-25 16:37:31.657 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-25 16:37:31.657 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-25 16:37:31.658 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-25 16:37:31.658 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-25 16:37:31.658 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-25 16:37:31.658 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3de45b6c] under position; prior registration was null
[DEBUG] 2024-11-25 16:37:31.660 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2fdf7da2] under overlay; prior registration was null
[DEBUG] 2024-11-25 16:37:31.660 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@54d60fa1] under trim; prior registration was null
[DEBUG] 2024-11-25 16:37:31.661 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5c79c5ec] under cast; prior registration was null
[DEBUG] 2024-11-25 16:37:31.661 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@34eaf9c1] under collate; prior registration was null
[DEBUG] 2024-11-25 16:37:31.661 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@248b2b61] under extract; prior registration was null
[DEBUG] 2024-11-25 16:37:31.662 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-25 16:37:31.662 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-25 16:37:31.662 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4ca5cb99] under ifnull; prior registration was null
[DEBUG] 2024-11-25 16:37:31.663 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-25 16:37:31.663 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-25 16:37:31.663 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@70169464] under pad; prior registration was null
[DEBUG] 2024-11-25 16:37:31.663 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@590dea35] under str; prior registration was null
[DEBUG] 2024-11-25 16:37:31.664 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1bb172dd] under format; prior registration was null
[DEBUG] 2024-11-25 16:37:31.665 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6106dfb6] under timestampadd; prior registration was null
[DEBUG] 2024-11-25 16:37:31.665 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3593e074] under timestampdiff; prior registration was null
[DEBUG] 2024-11-25 16:37:31.665 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-25 16:37:31.665 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e0fdc83] under current_date; prior registration was null
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5dacf18d] under current_time; prior registration was null
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@432a6a69] under current_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f52a229] under local_date; prior registration was null
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fe98084] under local_time; prior registration was null
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f33e6d] under local_datetime; prior registration was null
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@151a6598] under offset_datetime; prior registration was null
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6fa3def8] under instant; prior registration was null
[DEBUG] 2024-11-25 16:37:31.666 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-25 16:37:31.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@37f41a81] under sql; prior registration was null
[DEBUG] 2024-11-25 16:37:31.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-25 16:37:31.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-25 16:37:31.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-25 16:37:31.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-25 16:37:31.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43fe2008
[DEBUG] 2024-11-25 16:37:31.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-25 16:37:31.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-25 16:37:31.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-25 16:37:31.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-25 16:37:31.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-25 16:37:31.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-25 16:37:31.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-25 16:37:31.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-25 16:37:31.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@12548f9a] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-25 16:37:31.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@156ff70f] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-25 16:37:31.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-25 16:37:31.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-25 16:37:31.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-25 16:37:31.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-25 16:37:31.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-25 16:37:31.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:37:31.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-25 16:37:31.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-25 16:37:31.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-25 16:37:31.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-25 16:37:31.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-25 16:37:31.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-25 16:37:31.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-25 16:37:31.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-25 16:37:31.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-25 16:37:31.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-25 16:37:31.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c5a2d5] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3de45b6c
[DEBUG] 2024-11-25 16:37:31.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-25 16:37:31.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-25 16:37:31.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-25 16:37:31.673 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@45dc7be] under trunc; prior registration was null
[DEBUG] 2024-11-25 16:37:31.673 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under bitand; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under bitor; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d664323] under bitxor; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ec0d06] under bitnot; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-25 16:37:31.674 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2676d96a] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1bb172dd
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3fe98084
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5f33e6d
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cc56b32
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6da646b8] under chr; prior registration was null
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a65e237] under sysdate; prior registration was null
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-25 16:37:31.675 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-25 16:37:31.676 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-25 16:37:31.676 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-25 16:37:31.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5aac6f9f] under rank; prior registration was null
[DEBUG] 2024-11-25 16:37:31.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2444c3df] under dense_rank; prior registration was null
[DEBUG] 2024-11-25 16:37:31.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1eb6037d] under percent_rank; prior registration was null
[DEBUG] 2024-11-25 16:37:31.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@335b3d6] under cume_dist; prior registration was null
[DEBUG] 2024-11-25 16:37:31.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@38826984] under listagg; prior registration was null
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.681 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-25 16:37:31.682 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-25 16:37:31.683 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.684 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-25 16:37:31.685 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-25 16:37:31.685 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:37:31.685 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-25 16:37:31.685 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-25 16:37:31.685 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-25 16:37:31.685 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-25 16:37:31.685 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-25 16:37:31.685 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-25 16:37:31.685 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-25 16:37:31.685 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-25 16:37:31.685 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.685 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.685 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-25 16:37:31.685 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-25 16:37:31.685 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-25 16:37:31.688 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-25 16:37:31.790 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:37:31.791 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-25 16:37:31.881 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:31.884 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:31.886 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:31.886 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:31.886 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:37:31.886 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:32.021 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-25 16:37:32.025 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:32.025 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:37:32.048 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:37:32.049 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:32.064 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-25 16:37:32.064 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:37:32.064 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:37:32.074 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-25 16:37:32.085 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:32.086 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:32.086 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:32.086 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:32.086 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:32.086 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:32.107 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-25 16:37:32.107 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-25 16:37:32.110 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-25 16:37:32.110 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:37:32.110 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:37:32.110 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-25 16:37:32.110 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-25 16:37:32.111 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:37:32.111 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:37:32.111 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-25 16:37:32.111 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-25 16:37:32.111 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:37:32.111 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:37:32.111 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:37:32.167 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:37:32.169 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-25 16:37:32.176 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4687366b] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-25 16:37:32.176 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:37:32.180 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@96dfcbb] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-25 16:37:32.180 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:37:32.184 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-25 16:37:32.192 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:32.199 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-25 16:37:32.199 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-25 16:37:32.199 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:37:32.199 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-25 16:37:32.199 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-25 16:37:32.199 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:37:32.199 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:37:32.200 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:37:32.201 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@50930bff] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:37:32.202 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:37:32.207 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7978550b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:37:32.207 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:37:32.208 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:37:32.208 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:32.209 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:37:32.209 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-25 16:37:32.209 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:37:32.209 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-25 16:37:32.209 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-25 16:37:32.209 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:37:32.209 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-25 16:37:32.209 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:37:32.209 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@56d742ad] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:37:32.209 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:37:32.209 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@75784062] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:37:32.209 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:37:32.209 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-25 16:37:32.210 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:32.210 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-25 16:37:32.210 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-25 16:37:32.210 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-25 16:37:32.210 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-25 16:37:32.210 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-25 16:37:32.211 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:37:32.211 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@4da9da6c] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:37:32.211 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:37:32.211 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64a8d575] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:37:32.211 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:37:32.212 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51fa09c7] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-25 16:37:32.213 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-25 16:37:32.213 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:32.213 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:37:32.213 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:37:32.213 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2bda7a5b] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:37:32.213 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:37:32.213 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@47374fa5] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-25 16:37:32.214 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@289da1bc] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:37:32.214 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:37:32.214 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-25 16:37:32.214 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:32.214 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:37:32.236 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-25 16:37:32.236 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-25 16:37:32.239 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-25 16:37:32.239 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-25 16:37:32.240 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@23dc70c1]
[DEBUG] 2024-11-25 16:37:32.241 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-25 16:37:32.241 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-25 16:37:32.241 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:37:32.241 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-25 16:37:32.243 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@29431f61
[DEBUG] 2024-11-25 16:37:32.243 [main] SessionFactoryRegistry - Registering SessionFactory: 94bd97c6-02a3-4087-9447-9edf35bbdf60 (<unnamed>)
[DEBUG] 2024-11-25 16:37:32.243 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-25 16:37:32.243 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-25 16:37:32.275 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-25 16:37:32.288 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:37:32.303 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@392189111 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@1409842139 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1484744244 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1300011842)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@102849021 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@686350055 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@2084023356)

[DEBUG] 2024-11-25 16:37:32.307 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:37:32.322 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:32.323 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:37:32.323 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@2113710566 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@125246542 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@289039926 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1300011842)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@1661349610 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@2074941685 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@2084023356)

[DEBUG] 2024-11-25 16:37:32.323 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:37:32.324 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:32.392 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:37:32.393 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1533375298 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1160651280 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@415297573 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1750040348 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1778465757 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-25 16:37:32.393 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:37:32.396 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:37:32.396 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:37:32.396 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:37:32.396 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:37:32.396 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:37:32.396 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:37:32.397 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:37:32.397 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:37:32.398 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 203715427
[DEBUG] 2024-11-25 16:37:32.400 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1294553325
[DEBUG] 2024-11-25 16:37:32.402 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1294553325
[DEBUG] 2024-11-25 16:37:32.402 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:37:32.405 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:37:32.405 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6655f3cd
[DEBUG] 2024-11-25 16:37:32.407 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:37:32.408 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:32.409 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:37:32.409 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:37:32.416 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:37:32.416 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:37:32.416 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:37:32.419 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:37:32.420 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-25 16:37:32.420 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-25 16:37:32.421 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:37:32.421 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-25 16:37:32.426 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-25 16:37:32.429 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:32.429 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:32.429 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:37:32.429 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1139305484 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@208427214 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1833726536 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@395229891 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@386284594 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-25 16:37:32.429 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:37:32.430 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:32.489 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:37:32.489 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:37:32.491 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 16:37:32.492 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:37:32.496 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-25 16:37:32.496 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 16:37:32.497 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 16:37:32.498 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 16:37:32.499 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:37:32.500 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-25 16:37:32.500 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 16:37:32.500 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 16:37:32.500 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:37:32.500 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:37:32.500 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:37:32.500 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-25 16:37:32.501 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-25 16:37:32.501 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 16:37:32.501 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:37:32.501 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-25 16:37:32.501 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-25 16:37:32.503 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:32.503 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:32.504 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:37:32.504 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1384781563 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@913564177 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1972176213 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1215858771 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1254584937 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-25 16:37:32.504 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:37:32.505 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:37:32.505 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:37:32.505 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-25 16:37:32.505 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-25 16:37:32.505 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-25 16:37:32.505 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-25 16:37:32.505 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-25 16:37:32.506 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-25 16:37:32.506 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 907314155
[DEBUG] 2024-11-25 16:37:32.506 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 1917593312
[DEBUG] 2024-11-25 16:37:32.506 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1616242841
[DEBUG] 2024-11-25 16:37:32.506 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1616242841
[DEBUG] 2024-11-25 16:37:32.506 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-25 16:37:32.507 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-25 16:37:32.507 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1616242841
[DEBUG] 2024-11-25 16:37:32.507 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-25 16:37:32.507 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-25 16:37:32.507 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@478cebdb
[DEBUG] 2024-11-25 16:37:32.507 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-25 16:37:32.507 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:32.582 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:37:32.583 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@551821075 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1874842251 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1067780644 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1476664081 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1478007685 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-25 16:37:32.583 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:37:32.585 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:37:32.585 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:37:32.585 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:37:32.585 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:37:32.585 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:37:32.585 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:37:32.585 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:37:32.585 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:37:32.585 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 949483950
[DEBUG] 2024-11-25 16:37:32.585 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1819701896
[DEBUG] 2024-11-25 16:37:32.585 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1819701896
[DEBUG] 2024-11-25 16:37:32.585 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:37:32.585 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:37:32.585 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@510e6b93
[DEBUG] 2024-11-25 16:37:32.585 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:37:32.586 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:32.586 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:37:32.586 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:37:32.588 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:37:32.588 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:37:32.588 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:37:32.589 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7272914b] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:37:32.589 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:37:32.589 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@663f24e6] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:37:32.589 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:37:32.589 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:37:32.589 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:37:32.589 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:37:32.590 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1108674897 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@613097617 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@990656754 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1556173561 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@921999281 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-25 16:37:32.590 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:37:32.590 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:37:32.590 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:37:32.590 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:37:32.590 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:37:32.590 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:37:32.590 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:37:32.590 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:37:32.591 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:37:32.591 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 81639848
[DEBUG] 2024-11-25 16:37:32.591 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2066011620
[DEBUG] 2024-11-25 16:37:32.591 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2066011620
[DEBUG] 2024-11-25 16:37:32.591 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:37:32.591 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:37:32.591 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c3c31a5
[DEBUG] 2024-11-25 16:37:32.591 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:37:32.591 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:37:32.591 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:37:32.591 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:37:32.591 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:37:32.592 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-25 16:37:32.592 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-25 16:37:32.592 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 16:37:32.592 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:37:32.592 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-25 16:37:32.594 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-25 16:37:32.596 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:32.596 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:32.597 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:37:32.597 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1392602264 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@694841823 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1303659291 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1384421718 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@179915314 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-25 16:37:32.597 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:37:32.598 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:37:32.598 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:37:32.598 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:37:32.598 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:37:32.598 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:37:32.598 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:37:32.598 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:37:32.598 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:37:32.598 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1434590943
[DEBUG] 2024-11-25 16:37:32.598 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1582967668
[DEBUG] 2024-11-25 16:37:32.598 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1582967668
[DEBUG] 2024-11-25 16:37:32.598 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-25 16:37:32.598 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:37:32.598 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@658098a2
[DEBUG] 2024-11-25 16:37:32.598 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:37:32.598 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:32.758 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:37:32.759 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1071364078 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@851478032 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1156336184 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1968179698 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@391554161 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-25 16:37:32.759 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:37:32.761 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:37:32.761 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:37:32.761 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:37:32.761 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:37:32.761 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:37:32.761 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:37:32.761 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:37:32.761 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:37:32.761 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1392412640
[DEBUG] 2024-11-25 16:37:32.761 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@926498219
[DEBUG] 2024-11-25 16:37:32.761 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@926498219
[DEBUG] 2024-11-25 16:37:32.761 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:37:32.762 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:37:32.762 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4866a755
[DEBUG] 2024-11-25 16:37:32.762 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:37:32.762 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:37:32.762 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:37:32.763 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@325183616 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@889633931 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1269566437 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@915231178 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@708090483 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-25 16:37:32.763 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:37:32.763 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:37:32.763 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:37:32.763 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:37:32.763 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:37:32.763 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:37:32.764 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:37:32.764 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:37:32.764 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:37:32.764 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1767304024
[DEBUG] 2024-11-25 16:37:32.764 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2147434909
[DEBUG] 2024-11-25 16:37:32.764 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2147434909
[DEBUG] 2024-11-25 16:37:32.764 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:37:32.764 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:37:32.764 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6127ef86
[DEBUG] 2024-11-25 16:37:32.764 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:37:32.764 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:40:50.450 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 16:40:50.460 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-25 16:40:50.493 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-25 16:40:50.495 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-25 16:40:50.543 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 16:40:50.548 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 16:40:50.664 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 16:40:50.665 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2024-11-25 16:40:50.668 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 16:40:50.669 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 16:40:50.786 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 16:40:50.786 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2024-11-25 16:40:50.789 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 16:40:50.790 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 16:40:50.922 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 16:40:50.922 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2024-11-25 16:40:50.926 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 16:40:50.927 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 16:40:51.118 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 16:40:51.118 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2024-11-25 16:40:51.121 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 16:40:51.122 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 16:41:29.785 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 16:41:29.787 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-25 16:41:29.806 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-25 16:41:29.807 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-25 16:41:29.839 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 16:41:29.843 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 16:41:30.011 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-25 16:41:30.014 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-25 16:41:30.014 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-25 16:41:30.015 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:41:30.015 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:41:30.015 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-25 16:41:30.016 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-25 16:41:30.016 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-25 16:41:30.017 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:41:30.018 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-25 16:41:30.018 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-25 16:41:30.018 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:41:30.019 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-25 16:41:30.027 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-25 16:41:30.027 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-25 16:41:30.109 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:41:30.109 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:41:30.109 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:41:30.109 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 16:41:30.109 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 16:41:30.109 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 16:41:30.109 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 16:41:30.109 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 16:41:30.109 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 16:41:30.109 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:41:30.110 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:41:30.110 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:41:30.110 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:41:30.110 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:41:30.110 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:41:30.110 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 16:41:30.110 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 16:41:30.110 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-25 16:41:30.110 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 16:41:30.111 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 16:41:30.111 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-25 16:41:30.111 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-25 16:41:30.111 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:41:30.111 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:41:30.111 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:41:30.111 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:41:30.111 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:41:30.112 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:41:30.112 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:41:30.112 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:41:30.112 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:41:30.112 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:41:30.112 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:41:30.112 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:41:30.112 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:41:30.112 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:41:30.112 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:41:30.112 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 16:41:30.112 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 16:41:30.112 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 16:41:30.113 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 16:41:30.113 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:41:30.113 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:41:30.113 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:41:30.113 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-25 16:41:30.113 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 16:41:30.113 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 16:41:30.113 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-25 16:41:30.113 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:41:30.113 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:41:30.114 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:41:30.114 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-25 16:41:30.114 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-25 16:41:30.114 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-25 16:41:30.114 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 16:41:30.114 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 16:41:30.114 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 16:41:30.114 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 16:41:30.114 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-25 16:41:30.114 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-25 16:41:30.114 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-25 16:41:30.114 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-25 16:41:30.115 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-25 16:41:30.115 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-25 16:41:30.115 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 16:41:30.115 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 16:41:30.115 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 16:41:30.115 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 16:41:30.115 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 16:41:30.115 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 16:41:30.115 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 16:41:30.115 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 16:41:30.115 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 16:41:30.116 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 16:41:30.117 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:41:30.117 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:41:30.117 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:41:30.117 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:41:30.117 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:41:30.117 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:41:30.117 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-25 16:41:30.117 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-25 16:41:30.117 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 16:41:30.117 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 16:41:30.117 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:41:30.117 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:41:30.117 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:41:30.117 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-25 16:41:30.117 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-25 16:41:30.118 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 16:41:30.118 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 16:41:30.118 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:41:30.118 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:41:30.118 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:41:30.118 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 16:41:30.118 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 16:41:30.118 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 16:41:30.118 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 16:41:30.118 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 16:41:30.118 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 16:41:30.118 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 16:41:30.119 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 16:41:30.119 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-25 16:41:30.119 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-25 16:41:30.119 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-25 16:41:30.119 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-25 16:41:30.123 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-25 16:41:30.123 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-25 16:41:30.124 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@491f8831
[DEBUG] 2024-11-25 16:41:30.125 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@691541bc
[DEBUG] 2024-11-25 16:41:30.125 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b733ef7
[DEBUG] 2024-11-25 16:41:30.125 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43a4a9e5
[DEBUG] 2024-11-25 16:41:30.125 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@764fffa0
[DEBUG] 2024-11-25 16:41:30.125 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35145874
[DEBUG] 2024-11-25 16:41:30.125 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77524ca7
[DEBUG] 2024-11-25 16:41:30.125 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11df2829
[DEBUG] 2024-11-25 16:41:30.125 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18e4674d
[INFO ] 2024-11-25 16:41:30.149 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-25 16:41:30.150 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-25 16:41:30.150 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-25 16:41:30.230 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-25 16:41:30.292 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-25 16:41:30.293 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-25 16:41:30.293 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-25 16:41:30.347 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-25 16:41:30.348 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-25 16:41:30.355 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-25 16:41:30.355 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-25 16:41:30.370 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eaf8427) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c)
[DEBUG] 2024-11-25 16:41:30.370 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d6039df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae)
[DEBUG] 2024-11-25 16:41:30.371 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e00016) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3cbe6e)
[DEBUG] 2024-11-25 16:41:30.371 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@177ede17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17176b18)
[DEBUG] 2024-11-25 16:41:30.371 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e4395c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab53860)
[DEBUG] 2024-11-25 16:41:30.371 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5ac347) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b9389f)
[DEBUG] 2024-11-25 16:41:30.371 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b2c5ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41f785e3)
[DEBUG] 2024-11-25 16:41:30.371 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9a3661) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727986ad)
[DEBUG] 2024-11-25 16:41:30.371 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1600a8a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b25ef1c)
[DEBUG] 2024-11-25 16:41:30.372 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-25 16:41:30.373 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:41:30.373 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:41:30.375 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:41:30.375 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:41:30.378 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@383cdd4d
[DEBUG] 2024-11-25 16:41:30.378 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@491f8831`
[DEBUG] 2024-11-25 16:41:30.384 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:41:30.384 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:41:30.384 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:41:30.387 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:41:30.388 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:41:30.388 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:41:30.388 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:41:30.388 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:41:30.388 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:41:30.388 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:41:30.388 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:41:30.389 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:41:30.390 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71369e1a]
[DEBUG] 2024-11-25 16:41:30.428 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-25 16:41:30.451 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-25 16:41:30.459 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-25 16:41:30.465 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-25 16:41:30.473 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:41:30.491 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:41:30.492 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:41:30.492 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:41:30.495 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:41:30.498 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-25 16:41:30.501 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:41:30.504 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-25 16:41:30.504 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:41:30.507 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:41:30.512 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:41:30.513 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:41:30.521 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-25 16:41:30.522 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:41:30.523 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:41:30.523 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:41:30.524 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:41:30.524 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:41:30.526 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:41:30.528 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-25 16:41:30.528 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-25 16:41:30.529 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-25 16:41:30.529 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-25 16:41:30.529 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-25 16:41:30.529 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-25 16:41:30.529 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-25 16:41:30.529 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:41:30.533 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:41:30.534 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-25 16:41:30.534 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-25 16:41:30.534 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:41:30.535 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:41:30.535 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:41:30.535 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:41:30.536 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:41:30.536 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-25 16:41:30.536 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:41:30.536 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-25 16:41:30.536 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:41:30.536 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:41:30.536 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-25 16:41:30.536 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-25 16:41:30.536 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-25 16:41:30.537 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-25 16:41:30.537 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-25 16:41:30.537 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-25 16:41:30.537 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:41:30.537 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:41:30.537 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-25 16:41:30.537 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:41:30.538 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:41:30.538 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:41:30.538 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:41:30.538 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:41:30.538 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:41:30.538 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-25 16:41:30.538 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:41:30.539 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-25 16:41:30.539 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-25 16:41:30.539 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-25 16:41:30.540 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:41:30.543 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:41:30.543 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:41:30.543 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:41:30.543 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:41:30.543 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-25 16:41:30.543 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:41:30.543 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-25 16:41:30.543 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:41:30.543 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:41:30.543 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-25 16:41:30.544 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:41:30.546 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-25 16:41:30.546 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-25 16:41:30.546 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-25 16:41:30.546 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-25 16:41:30.546 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-25 16:41:30.546 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-25 16:41:30.546 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-25 16:41:30.547 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-25 16:41:30.547 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:41:30.547 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-25 16:41:30.547 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:41:30.548 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:41:30.548 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-25 16:41:30.549 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:41:30.549 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-25 16:41:30.549 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:41:30.549 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-25 16:41:30.553 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-25 16:41:30.553 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-25 16:41:30.553 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-25 16:41:30.553 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:41:30.555 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-25 16:41:30.556 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-25 16:41:30.557 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-25 16:41:30.557 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:41:30.558 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:41:30.558 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-25 16:41:30.558 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-25 16:41:30.558 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-25 16:41:30.558 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:41:30.558 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:41:30.559 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:41:30.566 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:41:30.566 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:41:30.739 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-25 16:41:30.776 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:41:30.776 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter13941245653175462144.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire15741207534998351466tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_0847963244000082401tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter13941245653175462144.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d7d8911, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-25 16:41:30.780 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-25 16:41:30.785 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:41:30.829 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-25 16:41:30.829 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-25 16:41:30.830 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-25 16:41:30.830 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-25 16:41:30.831 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@347b370c] under count; prior registration was null
[DEBUG] 2024-11-25 16:41:30.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@72a33316] under every; prior registration was null
[DEBUG] 2024-11-25 16:41:30.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@57fce8b] under any; prior registration was null
[DEBUG] 2024-11-25 16:41:30.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-25 16:41:30.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-25 16:41:30.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-25 16:41:30.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-25 16:41:30.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-25 16:41:30.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-25 16:41:30.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-25 16:41:30.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-25 16:41:30.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-25 16:41:30.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-25 16:41:30.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-25 16:41:30.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-25 16:41:30.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-25 16:41:30.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-25 16:41:30.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-25 16:41:30.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-25 16:41:30.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-25 16:41:30.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56f2c9e8] under sinh; prior registration was null
[DEBUG] 2024-11-25 16:41:30.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@457692cb] under cosh; prior registration was null
[DEBUG] 2024-11-25 16:41:30.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350342e0] under tanh; prior registration was null
[DEBUG] 2024-11-25 16:41:30.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d] under pi; prior registration was null
[DEBUG] 2024-11-25 16:41:30.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289] under log; prior registration was null
[DEBUG] 2024-11-25 16:41:30.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-25 16:41:30.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-25 16:41:30.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-25 16:41:30.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-25 16:41:30.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-25 16:41:30.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-25 16:41:30.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-25 16:41:30.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-25 16:41:30.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-25 16:41:30.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-25 16:41:30.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-25 16:41:30.836 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-25 16:41:30.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a] under position; prior registration was null
[DEBUG] 2024-11-25 16:41:30.839 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6fa2a006] under overlay; prior registration was null
[DEBUG] 2024-11-25 16:41:30.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@39695803] under trim; prior registration was null
[DEBUG] 2024-11-25 16:41:30.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@57b711b6] under cast; prior registration was null
[DEBUG] 2024-11-25 16:41:30.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2db461b5] under collate; prior registration was null
[DEBUG] 2024-11-25 16:41:30.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@55881f40] under extract; prior registration was null
[DEBUG] 2024-11-25 16:41:30.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-25 16:41:30.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-25 16:41:30.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11d1735e] under ifnull; prior registration was null
[DEBUG] 2024-11-25 16:41:30.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-25 16:41:30.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-25 16:41:30.843 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6282f1eb] under pad; prior registration was null
[DEBUG] 2024-11-25 16:41:30.843 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@64ed18ec] under str; prior registration was null
[DEBUG] 2024-11-25 16:41:30.844 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@25589735] under format; prior registration was null
[DEBUG] 2024-11-25 16:41:30.845 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7dddfc35] under timestampadd; prior registration was null
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2336cd91] under timestampdiff; prior registration was null
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c1e40d9] under current_date; prior registration was null
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b50c21] under current_time; prior registration was null
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e0fdc83] under current_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5dacf18d] under local_date; prior registration was null
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@432a6a69] under local_time; prior registration was null
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f52a229] under local_datetime; prior registration was null
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fe98084] under offset_datetime; prior registration was null
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f33e6d] under instant; prior registration was null
[DEBUG] 2024-11-25 16:41:30.846 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-25 16:41:30.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a1cb94] under sql; prior registration was null
[DEBUG] 2024-11-25 16:41:30.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-25 16:41:30.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-25 16:41:30.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-25 16:41:30.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-25 16:41:30.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289
[DEBUG] 2024-11-25 16:41:30.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-25 16:41:30.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-25 16:41:30.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-25 16:41:30.847 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-25 16:41:30.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-25 16:41:30.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-25 16:41:30.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-25 16:41:30.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-25 16:41:30.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@49bb808f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-25 16:41:30.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@563ada5] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-25 16:41:30.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-25 16:41:30.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-25 16:41:30.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-25 16:41:30.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-25 16:41:30.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-25 16:41:30.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-25 16:41:30.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-25 16:41:30.848 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-25 16:41:30.849 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-25 16:41:30.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-25 16:41:30.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-25 16:41:30.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-25 16:41:30.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-25 16:41:30.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12548f9a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a
[DEBUG] 2024-11-25 16:41:30.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-25 16:41:30.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-25 16:41:30.850 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-25 16:41:30.853 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2838eb] under trunc; prior registration was null
[DEBUG] 2024-11-25 16:41:30.853 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-25 16:41:30.853 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-25 16:41:30.853 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb5d334] under bitand; prior registration was null
[DEBUG] 2024-11-25 16:41:30.853 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45dc7be] under bitor; prior registration was null
[DEBUG] 2024-11-25 16:41:30.853 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under bitxor; prior registration was null
[DEBUG] 2024-11-25 16:41:30.853 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under bitnot; prior registration was null
[DEBUG] 2024-11-25 16:41:30.853 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-25 16:41:30.853 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-25 16:41:30.853 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-25 16:41:30.853 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-25 16:41:30.853 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-25 16:41:30.853 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4d664323] under format; prior registration was org.hibernate.dialect.function.FormatFunction@25589735
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@432a6a69
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f52a229
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ec0d06] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2676d96a] under chr; prior registration was null
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under sysdate; prior registration was null
[DEBUG] 2024-11-25 16:41:30.854 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-25 16:41:30.855 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-25 16:41:30.855 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-25 16:41:30.855 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-25 16:41:30.855 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-25 16:41:30.855 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-25 16:41:30.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@77a9ac36] under rank; prior registration was null
[DEBUG] 2024-11-25 16:41:30.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3c743d40] under dense_rank; prior registration was null
[DEBUG] 2024-11-25 16:41:30.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5aac6f9f] under percent_rank; prior registration was null
[DEBUG] 2024-11-25 16:41:30.856 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2444c3df] under cume_dist; prior registration was null
[DEBUG] 2024-11-25 16:41:30.857 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@38848217] under listagg; prior registration was null
[DEBUG] 2024-11-25 16:41:30.860 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.860 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.860 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:41:30.860 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:41:30.860 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-25 16:41:30.860 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-25 16:41:30.860 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.860 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.860 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:41:30.860 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-25 16:41:30.860 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-25 16:41:30.860 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:41:30.860 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-25 16:41:30.860 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-25 16:41:30.861 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:41:30.862 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-25 16:41:30.863 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:41:30.864 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-25 16:41:30.864 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-25 16:41:30.864 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-25 16:41:30.864 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-25 16:41:30.864 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-25 16:41:30.864 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-25 16:41:30.864 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-25 16:41:30.864 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-25 16:41:30.864 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.864 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.864 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-25 16:41:30.864 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-25 16:41:30.864 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-25 16:41:30.868 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-25 16:41:30.968 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:41:30.969 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-25 16:41:31.076 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:41:31.079 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:41:31.082 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:41:31.082 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:41:31.082 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:41:31.082 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:41:31.243 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-25 16:41:31.249 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:41:31.249 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:41:31.278 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:41:31.278 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:41:31.294 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-25 16:41:31.295 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:41:31.295 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:41:31.304 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-25 16:41:31.319 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:41:31.320 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:41:31.320 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:41:31.320 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:41:31.320 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:41:31.320 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:41:31.347 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-25 16:41:31.347 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-25 16:41:31.350 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-25 16:41:31.350 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:41:31.351 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:41:31.351 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-25 16:41:31.351 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-25 16:41:31.351 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:41:31.351 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:41:31.351 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-25 16:41:31.351 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-25 16:41:31.351 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:41:31.351 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:41:31.351 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:41:31.421 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:41:31.423 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-25 16:41:31.432 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d01ea33] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-25 16:41:31.434 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:41:31.438 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c3fcbe7] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-25 16:41:31.438 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:41:31.443 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-25 16:41:31.453 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:41:31.462 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-25 16:41:31.462 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-25 16:41:31.462 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:41:31.462 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-25 16:41:31.462 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-25 16:41:31.462 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:41:31.462 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:41:31.463 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:41:31.464 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3ae87e38] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:41:31.465 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:41:31.471 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e9cb95] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:41:31.471 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:41:31.473 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:41:31.473 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:41:31.473 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:41:31.473 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-25 16:41:31.473 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:41:31.473 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-25 16:41:31.473 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-25 16:41:31.473 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:41:31.473 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-25 16:41:31.474 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:41:31.474 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@21a0795f] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:41:31.474 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:41:31.474 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2ec156fb] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:41:31.474 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:41:31.474 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-25 16:41:31.474 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:41:31.474 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-25 16:41:31.474 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-25 16:41:31.474 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-25 16:41:31.474 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-25 16:41:31.475 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-25 16:41:31.475 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:41:31.475 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1bf52f10] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:41:31.475 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:41:31.476 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@301e5d23] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:41:31.476 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:41:31.477 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74787609] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-25 16:41:31.478 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-25 16:41:31.478 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:41:31.478 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:41:31.478 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:41:31.478 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@355b53cc] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:41:31.478 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:41:31.478 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2568611c] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-25 16:41:31.478 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bda7a5b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:41:31.478 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:41:31.479 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-25 16:41:31.479 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:41:31.479 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:41:31.504 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-25 16:41:31.505 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-25 16:41:31.508 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-25 16:41:31.509 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-25 16:41:31.509 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@121dac1a]
[DEBUG] 2024-11-25 16:41:31.510 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-25 16:41:31.510 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-25 16:41:31.511 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:41:31.511 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-25 16:41:31.513 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3acc65f0
[DEBUG] 2024-11-25 16:41:31.513 [main] SessionFactoryRegistry - Registering SessionFactory: 4c87e2b1-bcc9-4c3e-830c-f8dd12ad5c09 (<unnamed>)
[DEBUG] 2024-11-25 16:41:31.513 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-25 16:41:31.513 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-25 16:41:31.548 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-25 16:41:31.564 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:41:31.579 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@656020492 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@609630217 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1104693947 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@636370090 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1072476278 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-25 16:41:31.584 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:41:31.610 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:41:31.611 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:41:31.612 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@638978471 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@959016175 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@2113710566 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@125246542 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@289039926 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-25 16:41:31.612 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:41:31.612 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:41:31.726 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:41:31.727 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1859633528 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1533375298 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@363003357 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1160651280 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@415297573 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:41:31.727 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:41:31.731 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:41:31.731 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:41:31.731 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:41:31.731 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:41:31.731 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:41:31.731 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:41:31.732 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:41:31.732 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:41:31.733 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 663512999
[DEBUG] 2024-11-25 16:41:31.739 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-25 16:41:31.741 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-25 16:41:31.741 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:41:31.745 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:41:31.745 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20e3b165
[DEBUG] 2024-11-25 16:41:31.747 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:41:31.748 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:41:31.760 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:41:31.760 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:41:31.772 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:41:31.773 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:41:31.774 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:41:31.777 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:41:31.780 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-25 16:41:31.780 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-25 16:41:31.780 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:41:31.781 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-25 16:41:31.787 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-25 16:41:31.807 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:41:31.807 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:41:31.808 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:41:31.808 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1456923361 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1318491599 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1139305484 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@208427214 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1833726536 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:41:31.808 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:41:31.809 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:41:31.912 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:41:31.912 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:41:31.914 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 16:41:31.916 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:41:31.921 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-25 16:41:31.921 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 16:41:31.923 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 16:41:31.925 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 16:41:31.925 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:41:31.926 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-25 16:41:31.926 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 16:41:31.926 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 16:41:31.927 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:41:31.927 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:41:31.927 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:41:31.927 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-25 16:41:31.928 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-25 16:41:31.928 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 16:41:31.928 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:41:31.928 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-25 16:41:31.928 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-25 16:41:31.930 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:41:31.930 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:41:31.931 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:41:31.931 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@408648902 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@546552684 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1384781563 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@913564177 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1972176213 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:41:31.931 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:41:31.932 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:41:31.932 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:41:31.933 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-25 16:41:31.933 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-25 16:41:31.933 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-25 16:41:31.933 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-25 16:41:31.933 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-25 16:41:31.933 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-25 16:41:31.933 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 196316233
[DEBUG] 2024-11-25 16:41:31.933 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 345518693
[DEBUG] 2024-11-25 16:41:31.933 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-25 16:41:31.933 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-25 16:41:31.933 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-25 16:41:31.933 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-25 16:41:31.934 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-25 16:41:31.934 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-25 16:41:31.934 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-25 16:41:31.934 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6055e899
[DEBUG] 2024-11-25 16:41:31.934 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-25 16:41:31.934 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:41:32.032 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:41:32.032 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1415884524 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@456824281 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1911830487 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1367787521 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@551821075 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:41:32.032 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:41:32.034 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:41:32.034 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:41:32.034 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:41:32.034 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:41:32.034 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:41:32.034 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:41:32.034 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:41:32.034 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:41:32.034 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 644195047
[DEBUG] 2024-11-25 16:41:32.034 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@985514269
[DEBUG] 2024-11-25 16:41:32.034 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@985514269
[DEBUG] 2024-11-25 16:41:32.034 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:41:32.034 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:41:32.034 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@624be1d4
[DEBUG] 2024-11-25 16:41:32.034 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:41:32.034 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:41:32.035 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:41:32.035 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:41:32.037 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:41:32.037 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:41:32.037 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:41:32.037 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5b634e24] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:41:32.037 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:41:32.037 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7b0dfa91] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:41:32.037 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:41:32.037 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:41:32.038 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:41:32.038 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:41:32.038 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@857865061 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1920110923 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1715414246 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@2119380781 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1108674897 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:41:32.038 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:41:32.039 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:41:32.039 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:41:32.039 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:41:32.039 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:41:32.039 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:41:32.039 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:41:32.039 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:41:32.039 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:41:32.039 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 286772348
[DEBUG] 2024-11-25 16:41:32.039 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1201078845
[DEBUG] 2024-11-25 16:41:32.039 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1201078845
[DEBUG] 2024-11-25 16:41:32.039 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:41:32.039 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:41:32.039 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55cc4c61
[DEBUG] 2024-11-25 16:41:32.039 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:41:32.040 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:41:32.040 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:41:32.040 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:41:32.040 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:41:32.041 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-25 16:41:32.041 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-25 16:41:32.041 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 16:41:32.041 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:41:32.041 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-25 16:41:32.043 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-25 16:41:32.058 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:41:32.059 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:41:32.059 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:41:32.059 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1475886210 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2053115425 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1775349092 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1166754951 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1392602264 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:41:32.059 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:41:32.060 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:41:32.060 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:41:32.060 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:41:32.060 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:41:32.060 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:41:32.060 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:41:32.060 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:41:32.060 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:41:32.060 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1776057124
[DEBUG] 2024-11-25 16:41:32.060 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@695489783
[DEBUG] 2024-11-25 16:41:32.060 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@695489783
[DEBUG] 2024-11-25 16:41:32.060 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-25 16:41:32.060 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:41:32.061 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@602b7944
[DEBUG] 2024-11-25 16:41:32.061 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:41:32.061 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:41:32.320 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:41:32.320 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@450728160 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2079936145 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1071364078 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@851478032 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1156336184 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:41:32.320 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:41:32.322 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:41:32.322 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:41:32.322 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:41:32.322 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:41:32.322 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:41:32.322 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:41:32.322 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:41:32.322 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:41:32.322 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1937867829
[DEBUG] 2024-11-25 16:41:32.322 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@802062915
[DEBUG] 2024-11-25 16:41:32.322 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@802062915
[DEBUG] 2024-11-25 16:41:32.322 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:41:32.322 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:41:32.322 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52fe87e0
[DEBUG] 2024-11-25 16:41:32.322 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:41:32.323 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:41:32.323 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:41:32.323 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@926498219 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1214687061 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@325183616 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@889633931 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1269566437 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:41:32.323 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:41:32.324 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:41:32.324 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:41:32.324 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:41:32.324 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:41:32.324 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:41:32.324 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:41:32.324 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:41:32.325 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:41:32.325 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1295679363
[DEBUG] 2024-11-25 16:41:32.325 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1050768030
[DEBUG] 2024-11-25 16:41:32.325 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1050768030
[DEBUG] 2024-11-25 16:41:32.325 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:41:32.325 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:41:32.325 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6956eb58
[DEBUG] 2024-11-25 16:41:32.325 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:41:32.325 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:43:36.845 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 16:43:36.848 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-25 16:43:36.867 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-25 16:43:36.869 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-25 16:43:36.902 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 16:43:36.906 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 16:43:37.043 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-25 16:43:37.045 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-25 16:43:37.045 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-25 16:43:37.046 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:43:37.046 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:43:37.046 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-25 16:43:37.047 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-25 16:43:37.047 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-25 16:43:37.048 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:43:37.048 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-25 16:43:37.048 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-25 16:43:37.048 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:43:37.049 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-25 16:43:37.053 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-25 16:43:37.054 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-25 16:43:37.112 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:43:37.112 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:43:37.112 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:43:37.112 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 16:43:37.112 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 16:43:37.112 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 16:43:37.112 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 16:43:37.112 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 16:43:37.112 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 16:43:37.112 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:43:37.113 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:43:37.113 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:43:37.113 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:43:37.113 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:43:37.113 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:43:37.113 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 16:43:37.113 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 16:43:37.113 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-25 16:43:37.113 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 16:43:37.113 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 16:43:37.113 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-25 16:43:37.114 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-25 16:43:37.114 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:43:37.114 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:43:37.114 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:43:37.114 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:43:37.114 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:43:37.114 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:43:37.114 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:43:37.114 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:43:37.115 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:43:37.115 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:43:37.115 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:43:37.115 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:43:37.115 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:43:37.115 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:43:37.115 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:43:37.115 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 16:43:37.115 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 16:43:37.115 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 16:43:37.115 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 16:43:37.115 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:43:37.116 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:43:37.116 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:43:37.116 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-25 16:43:37.116 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 16:43:37.116 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 16:43:37.116 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-25 16:43:37.116 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:43:37.116 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:43:37.117 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:43:37.117 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-25 16:43:37.117 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-25 16:43:37.117 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-25 16:43:37.117 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 16:43:37.117 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 16:43:37.117 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 16:43:37.117 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 16:43:37.117 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-25 16:43:37.117 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-25 16:43:37.117 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-25 16:43:37.118 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-25 16:43:37.118 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-25 16:43:37.118 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-25 16:43:37.118 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 16:43:37.118 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 16:43:37.118 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 16:43:37.118 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 16:43:37.118 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 16:43:37.118 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 16:43:37.118 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 16:43:37.119 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 16:43:37.120 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 16:43:37.120 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 16:43:37.120 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:43:37.120 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:43:37.120 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:43:37.120 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:43:37.120 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:43:37.120 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:43:37.120 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-25 16:43:37.120 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-25 16:43:37.120 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 16:43:37.120 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 16:43:37.120 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:43:37.121 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:43:37.121 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:43:37.121 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-25 16:43:37.121 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-25 16:43:37.121 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 16:43:37.121 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 16:43:37.121 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:43:37.122 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:43:37.122 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:43:37.122 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 16:43:37.122 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 16:43:37.122 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 16:43:37.122 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 16:43:37.122 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 16:43:37.122 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 16:43:37.122 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 16:43:37.122 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 16:43:37.122 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-25 16:43:37.122 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-25 16:43:37.123 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-25 16:43:37.123 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-25 16:43:37.126 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-25 16:43:37.126 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-25 16:43:37.127 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@491f8831
[DEBUG] 2024-11-25 16:43:37.128 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@691541bc
[DEBUG] 2024-11-25 16:43:37.128 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b733ef7
[DEBUG] 2024-11-25 16:43:37.128 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43a4a9e5
[DEBUG] 2024-11-25 16:43:37.128 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@764fffa0
[DEBUG] 2024-11-25 16:43:37.128 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35145874
[DEBUG] 2024-11-25 16:43:37.128 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77524ca7
[DEBUG] 2024-11-25 16:43:37.128 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11df2829
[DEBUG] 2024-11-25 16:43:37.128 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18e4674d
[INFO ] 2024-11-25 16:43:37.147 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-25 16:43:37.147 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-25 16:43:37.147 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-25 16:43:37.207 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-25 16:43:37.275 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-25 16:43:37.275 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-25 16:43:37.275 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-25 16:43:37.319 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-25 16:43:37.320 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-25 16:43:37.324 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-25 16:43:37.324 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-25 16:43:37.334 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eaf8427) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c)
[DEBUG] 2024-11-25 16:43:37.335 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d6039df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae)
[DEBUG] 2024-11-25 16:43:37.335 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e00016) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3cbe6e)
[DEBUG] 2024-11-25 16:43:37.335 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@177ede17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17176b18)
[DEBUG] 2024-11-25 16:43:37.335 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e4395c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab53860)
[DEBUG] 2024-11-25 16:43:37.335 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5ac347) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b9389f)
[DEBUG] 2024-11-25 16:43:37.335 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b2c5ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41f785e3)
[DEBUG] 2024-11-25 16:43:37.335 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9a3661) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727986ad)
[DEBUG] 2024-11-25 16:43:37.335 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1600a8a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b25ef1c)
[DEBUG] 2024-11-25 16:43:37.336 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-25 16:43:37.336 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:43:37.337 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:43:37.338 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:43:37.338 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:43:37.341 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@383cdd4d
[DEBUG] 2024-11-25 16:43:37.341 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@491f8831`
[DEBUG] 2024-11-25 16:43:37.346 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:43:37.346 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:43:37.346 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:43:37.348 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:43:37.348 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:43:37.348 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:43:37.348 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:43:37.348 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:43:37.348 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:43:37.349 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:43:37.349 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:43:37.349 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:43:37.350 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71369e1a]
[DEBUG] 2024-11-25 16:43:37.374 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-25 16:43:37.391 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-25 16:43:37.397 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-25 16:43:37.402 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-25 16:43:37.409 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:43:37.424 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:43:37.424 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:43:37.424 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:43:37.426 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:43:37.429 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-25 16:43:37.432 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:43:37.434 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-25 16:43:37.435 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:43:37.437 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:43:37.442 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:43:37.442 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:43:37.449 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-25 16:43:37.451 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:43:37.451 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:43:37.452 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:43:37.452 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:43:37.452 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:43:37.454 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:43:37.455 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-25 16:43:37.456 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-25 16:43:37.456 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-25 16:43:37.456 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-25 16:43:37.456 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-25 16:43:37.456 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-25 16:43:37.456 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-25 16:43:37.457 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:43:37.460 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:43:37.460 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-25 16:43:37.461 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-25 16:43:37.461 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:43:37.463 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:43:37.463 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:43:37.463 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:43:37.463 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:43:37.463 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-25 16:43:37.463 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:43:37.464 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-25 16:43:37.464 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:43:37.464 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:43:37.464 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-25 16:43:37.464 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-25 16:43:37.464 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-25 16:43:37.464 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-25 16:43:37.464 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-25 16:43:37.464 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-25 16:43:37.465 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:43:37.465 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:43:37.465 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-25 16:43:37.465 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:43:37.465 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:43:37.466 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:43:37.466 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:43:37.466 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:43:37.466 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:43:37.466 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-25 16:43:37.466 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:43:37.467 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-25 16:43:37.467 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-25 16:43:37.468 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-25 16:43:37.468 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:43:37.471 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:43:37.471 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:43:37.471 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:43:37.471 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:43:37.471 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-25 16:43:37.471 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:43:37.471 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-25 16:43:37.471 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:43:37.471 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:43:37.472 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-25 16:43:37.472 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:43:37.474 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-25 16:43:37.474 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-25 16:43:37.474 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-25 16:43:37.474 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-25 16:43:37.474 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-25 16:43:37.474 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-25 16:43:37.474 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-25 16:43:37.475 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-25 16:43:37.475 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:43:37.475 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-25 16:43:37.476 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:43:37.477 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:43:37.477 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-25 16:43:37.478 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:43:37.478 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-25 16:43:37.479 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:43:37.479 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-25 16:43:37.483 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-25 16:43:37.483 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-25 16:43:37.483 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-25 16:43:37.483 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:43:37.484 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-25 16:43:37.486 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-25 16:43:37.487 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-25 16:43:37.487 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:43:37.487 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:43:37.487 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-25 16:43:37.487 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-25 16:43:37.487 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-25 16:43:37.487 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:43:37.488 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:43:37.488 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:43:37.496 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:43:37.496 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:43:37.632 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-25 16:43:37.665 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:43:37.665 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter9546506739163280953.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire12526758288753044843tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_04045088889231696374tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter9546506739163280953.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d7d8911, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-25 16:43:37.668 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-25 16:43:37.673 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:43:37.700 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-25 16:43:37.700 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-25 16:43:37.700 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-25 16:43:37.701 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-25 16:43:37.701 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@347b370c] under count; prior registration was null
[DEBUG] 2024-11-25 16:43:37.702 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@72a33316] under every; prior registration was null
[DEBUG] 2024-11-25 16:43:37.702 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@57fce8b] under any; prior registration was null
[DEBUG] 2024-11-25 16:43:37.702 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-25 16:43:37.702 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-25 16:43:37.702 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-25 16:43:37.702 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-25 16:43:37.702 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-25 16:43:37.702 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-25 16:43:37.703 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-25 16:43:37.703 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-25 16:43:37.703 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-25 16:43:37.703 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-25 16:43:37.703 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-25 16:43:37.703 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-25 16:43:37.703 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-25 16:43:37.703 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-25 16:43:37.703 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-25 16:43:37.703 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-25 16:43:37.703 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-25 16:43:37.704 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56f2c9e8] under sinh; prior registration was null
[DEBUG] 2024-11-25 16:43:37.704 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@457692cb] under cosh; prior registration was null
[DEBUG] 2024-11-25 16:43:37.705 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350342e0] under tanh; prior registration was null
[DEBUG] 2024-11-25 16:43:37.705 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d] under pi; prior registration was null
[DEBUG] 2024-11-25 16:43:37.705 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289] under log; prior registration was null
[DEBUG] 2024-11-25 16:43:37.705 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-25 16:43:37.705 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-25 16:43:37.705 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-25 16:43:37.705 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-25 16:43:37.705 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-25 16:43:37.705 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-25 16:43:37.705 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-25 16:43:37.705 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-25 16:43:37.705 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-25 16:43:37.705 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-25 16:43:37.706 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-25 16:43:37.706 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-25 16:43:37.706 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a] under position; prior registration was null
[DEBUG] 2024-11-25 16:43:37.707 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6fa2a006] under overlay; prior registration was null
[DEBUG] 2024-11-25 16:43:37.708 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@39695803] under trim; prior registration was null
[DEBUG] 2024-11-25 16:43:37.708 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@57b711b6] under cast; prior registration was null
[DEBUG] 2024-11-25 16:43:37.708 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2db461b5] under collate; prior registration was null
[DEBUG] 2024-11-25 16:43:37.709 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@55881f40] under extract; prior registration was null
[DEBUG] 2024-11-25 16:43:37.709 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-25 16:43:37.709 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-25 16:43:37.709 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11d1735e] under ifnull; prior registration was null
[DEBUG] 2024-11-25 16:43:37.710 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-25 16:43:37.710 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-25 16:43:37.710 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6282f1eb] under pad; prior registration was null
[DEBUG] 2024-11-25 16:43:37.710 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@64ed18ec] under str; prior registration was null
[DEBUG] 2024-11-25 16:43:37.712 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@25589735] under format; prior registration was null
[DEBUG] 2024-11-25 16:43:37.712 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7dddfc35] under timestampadd; prior registration was null
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2336cd91] under timestampdiff; prior registration was null
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c1e40d9] under current_date; prior registration was null
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b50c21] under current_time; prior registration was null
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e0fdc83] under current_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5dacf18d] under local_date; prior registration was null
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@432a6a69] under local_time; prior registration was null
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f52a229] under local_datetime; prior registration was null
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fe98084] under offset_datetime; prior registration was null
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-25 16:43:37.713 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f33e6d] under instant; prior registration was null
[DEBUG] 2024-11-25 16:43:37.714 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-25 16:43:37.714 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a1cb94] under sql; prior registration was null
[DEBUG] 2024-11-25 16:43:37.714 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-25 16:43:37.714 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-25 16:43:37.714 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-25 16:43:37.714 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-25 16:43:37.714 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289
[DEBUG] 2024-11-25 16:43:37.714 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-25 16:43:37.714 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-25 16:43:37.714 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-25 16:43:37.714 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-25 16:43:37.714 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-25 16:43:37.714 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-25 16:43:37.715 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-25 16:43:37.715 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-25 16:43:37.715 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@49bb808f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-25 16:43:37.715 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@563ada5] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-25 16:43:37.715 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-25 16:43:37.715 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-25 16:43:37.716 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12548f9a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-25 16:43:37.717 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-25 16:43:37.720 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2838eb] under trunc; prior registration was null
[DEBUG] 2024-11-25 16:43:37.720 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-25 16:43:37.720 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-25 16:43:37.720 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb5d334] under bitand; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45dc7be] under bitor; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under bitxor; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under bitnot; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4d664323] under format; prior registration was org.hibernate.dialect.function.FormatFunction@25589735
[DEBUG] 2024-11-25 16:43:37.721 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@432a6a69
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f52a229
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ec0d06] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2676d96a] under chr; prior registration was null
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under sysdate; prior registration was null
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-25 16:43:37.722 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-25 16:43:37.723 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@77a9ac36] under rank; prior registration was null
[DEBUG] 2024-11-25 16:43:37.723 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3c743d40] under dense_rank; prior registration was null
[DEBUG] 2024-11-25 16:43:37.723 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5aac6f9f] under percent_rank; prior registration was null
[DEBUG] 2024-11-25 16:43:37.723 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2444c3df] under cume_dist; prior registration was null
[DEBUG] 2024-11-25 16:43:37.724 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@38848217] under listagg; prior registration was null
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-25 16:43:37.727 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-25 16:43:37.728 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-25 16:43:37.729 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-25 16:43:37.730 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.731 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-25 16:43:37.732 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-25 16:43:37.736 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-25 16:43:37.822 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:43:37.823 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-25 16:43:37.914 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:43:37.917 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:43:37.919 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:43:37.919 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:43:37.919 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:43:37.919 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:43:38.057 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-25 16:43:38.061 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:43:38.061 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:43:38.084 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:43:38.084 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:43:38.101 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-25 16:43:38.101 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:43:38.101 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:43:38.111 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-25 16:43:38.123 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:43:38.123 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:43:38.124 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:43:38.124 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:43:38.124 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:43:38.124 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:43:38.145 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-25 16:43:38.145 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-25 16:43:38.148 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-25 16:43:38.148 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:43:38.148 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:43:38.148 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-25 16:43:38.148 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-25 16:43:38.148 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:43:38.148 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:43:38.148 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-25 16:43:38.148 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-25 16:43:38.148 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:43:38.148 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:43:38.149 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:43:38.199 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:43:38.201 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-25 16:43:38.207 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d01ea33] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-25 16:43:38.207 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:43:38.210 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c3fcbe7] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-25 16:43:38.210 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:43:38.214 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-25 16:43:38.223 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:43:38.229 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-25 16:43:38.229 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-25 16:43:38.229 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:43:38.229 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-25 16:43:38.230 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-25 16:43:38.230 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:43:38.230 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:43:38.230 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:43:38.231 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3ae87e38] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:43:38.232 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:43:38.237 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e9cb95] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:43:38.237 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:43:38.238 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:43:38.238 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:43:38.238 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:43:38.238 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-25 16:43:38.238 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:43:38.238 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-25 16:43:38.238 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-25 16:43:38.238 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:43:38.238 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-25 16:43:38.239 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:43:38.239 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@21a0795f] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:43:38.239 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:43:38.239 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2ec156fb] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:43:38.239 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:43:38.239 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-25 16:43:38.239 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:43:38.239 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-25 16:43:38.239 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-25 16:43:38.239 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-25 16:43:38.239 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-25 16:43:38.239 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-25 16:43:38.240 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:43:38.240 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1bf52f10] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:43:38.240 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:43:38.241 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@301e5d23] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:43:38.241 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:43:38.241 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74787609] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-25 16:43:38.243 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-25 16:43:38.243 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:43:38.243 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:43:38.243 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:43:38.243 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@355b53cc] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:43:38.243 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:43:38.244 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2568611c] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-25 16:43:38.244 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bda7a5b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:43:38.244 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:43:38.244 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-25 16:43:38.244 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:43:38.245 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:43:38.266 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-25 16:43:38.266 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-25 16:43:38.269 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-25 16:43:38.269 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-25 16:43:38.269 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@121dac1a]
[DEBUG] 2024-11-25 16:43:38.270 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-25 16:43:38.270 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-25 16:43:38.270 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:43:38.270 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-25 16:43:38.272 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3acc65f0
[DEBUG] 2024-11-25 16:43:38.272 [main] SessionFactoryRegistry - Registering SessionFactory: 1eb3c14e-eacb-4cdb-b914-9d5a9e0b5afb (<unnamed>)
[DEBUG] 2024-11-25 16:43:38.272 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-25 16:43:38.272 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-25 16:43:38.303 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-25 16:43:38.316 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:43:38.330 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@656020492 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@609630217 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1104693947 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@636370090 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1072476278 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-25 16:43:38.334 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:43:38.362 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:43:38.364 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:43:38.364 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@638978471 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@959016175 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@2113710566 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@125246542 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@289039926 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-25 16:43:38.364 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:43:38.365 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:43:38.492 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:43:38.492 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1859633528 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1533375298 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@363003357 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1160651280 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@415297573 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:43:38.492 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:43:38.514 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:43:38.515 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:43:38.515 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:43:38.515 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:43:38.515 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:43:38.515 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:43:38.516 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:43:38.516 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:43:38.517 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 663512999
[DEBUG] 2024-11-25 16:43:38.520 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-25 16:43:38.522 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-25 16:43:38.523 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:43:38.526 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:43:38.526 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20e3b165
[DEBUG] 2024-11-25 16:43:38.528 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:43:38.528 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:43:38.530 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:43:38.530 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:43:38.537 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:43:38.538 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:43:38.538 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:43:38.541 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:43:38.543 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-25 16:43:38.543 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-25 16:43:38.543 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:43:38.543 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-25 16:43:38.549 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-25 16:43:38.563 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:43:38.564 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:43:38.564 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:43:38.565 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1456923361 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1318491599 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1139305484 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@208427214 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1833726536 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:43:38.565 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:43:38.566 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:43:38.688 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:43:38.688 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:43:38.690 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 16:43:38.692 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:43:38.714 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-25 16:43:38.715 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 16:43:38.716 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 16:43:38.719 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 16:43:38.719 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:43:38.720 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-25 16:43:38.720 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 16:43:38.720 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 16:43:38.720 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:43:38.720 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:43:38.721 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:43:38.721 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-25 16:43:38.721 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-25 16:43:38.721 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 16:43:38.722 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:43:38.722 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-25 16:43:38.722 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-25 16:43:38.724 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:43:38.725 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:43:38.725 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:43:38.726 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@408648902 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@546552684 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1384781563 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@913564177 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1972176213 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:43:38.726 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:43:38.727 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:43:38.727 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:43:38.727 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-25 16:43:38.727 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-25 16:43:38.727 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-25 16:43:38.727 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-25 16:43:38.727 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-25 16:43:38.728 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-25 16:43:38.728 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 196316233
[DEBUG] 2024-11-25 16:43:38.728 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 345518693
[DEBUG] 2024-11-25 16:43:38.728 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-25 16:43:38.728 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-25 16:43:38.728 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-25 16:43:38.728 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-25 16:43:38.728 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-25 16:43:38.729 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-25 16:43:38.729 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-25 16:43:38.729 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6055e899
[DEBUG] 2024-11-25 16:43:38.729 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-25 16:43:38.729 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:43:38.883 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:43:38.884 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1911830487 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1367787521 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@551821075 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1874842251 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1067780644 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:43:38.884 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:43:38.886 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:43:38.886 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:43:38.886 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:43:38.886 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:43:38.886 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:43:38.886 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:43:38.886 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:43:38.886 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:43:38.886 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1649140180
[DEBUG] 2024-11-25 16:43:38.886 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@862853054
[DEBUG] 2024-11-25 16:43:38.886 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@862853054
[DEBUG] 2024-11-25 16:43:38.886 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:43:38.886 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:43:38.886 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3897f9ae
[DEBUG] 2024-11-25 16:43:38.887 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:43:38.887 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:43:38.887 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:43:38.887 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:43:38.889 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:43:38.889 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:43:38.890 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:43:38.890 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@642f8b7f] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:43:38.890 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:43:38.890 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3321fb65] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:43:38.890 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:43:38.890 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:43:38.890 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:43:38.890 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:43:38.891 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1715414246 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2119380781 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1108674897 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@613097617 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@990656754 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:43:38.891 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:43:38.891 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:43:38.892 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:43:38.892 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:43:38.892 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:43:38.892 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:43:38.892 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:43:38.892 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:43:38.892 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:43:38.892 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1439452257
[DEBUG] 2024-11-25 16:43:38.892 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@721876120
[DEBUG] 2024-11-25 16:43:38.892 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@721876120
[DEBUG] 2024-11-25 16:43:38.892 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:43:38.892 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:43:38.892 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ddb9a8
[DEBUG] 2024-11-25 16:43:38.892 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:43:38.892 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:43:38.893 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:43:38.893 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:43:38.893 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:43:38.894 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-25 16:43:38.894 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-25 16:43:38.894 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 16:43:38.894 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:43:38.894 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-25 16:43:38.896 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-25 16:43:38.911 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:43:38.912 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:43:38.912 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:43:38.912 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1775349092 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1166754951 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1392602264 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@694841823 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1303659291 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:43:38.912 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:43:38.913 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:43:38.913 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:43:38.913 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:43:38.913 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:43:38.913 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:43:38.913 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:43:38.913 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:43:38.913 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:43:38.913 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1613461828
[DEBUG] 2024-11-25 16:43:38.913 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1603095377
[DEBUG] 2024-11-25 16:43:38.913 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1603095377
[DEBUG] 2024-11-25 16:43:38.913 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-25 16:43:38.913 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:43:38.914 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55821edf
[DEBUG] 2024-11-25 16:43:38.914 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:43:38.914 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:43:39.213 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:43:39.214 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@450728160 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2079936145 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1071364078 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@851478032 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1156336184 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:43:39.214 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:43:39.216 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:43:39.216 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:43:39.216 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:43:39.216 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:43:39.216 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:43:39.217 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:43:39.217 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:43:39.217 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:43:39.217 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1937867829
[DEBUG] 2024-11-25 16:43:39.217 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@802062915
[DEBUG] 2024-11-25 16:43:39.217 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@802062915
[DEBUG] 2024-11-25 16:43:39.217 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:43:39.217 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:43:39.217 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52fe87e0
[DEBUG] 2024-11-25 16:43:39.217 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:43:39.217 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:43:39.218 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:43:39.218 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@926498219 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1214687061 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@325183616 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@889633931 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1269566437 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:43:39.218 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:43:39.219 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:43:39.219 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:43:39.220 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:43:39.220 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:43:39.220 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:43:39.220 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:43:39.220 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:43:39.220 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:43:39.220 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1295679363
[DEBUG] 2024-11-25 16:43:39.220 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1050768030
[DEBUG] 2024-11-25 16:43:39.220 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1050768030
[DEBUG] 2024-11-25 16:43:39.220 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:43:39.220 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:43:39.220 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6956eb58
[DEBUG] 2024-11-25 16:43:39.220 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:43:39.220 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:46:28.812 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 16:46:28.823 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-25 16:46:28.854 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-25 16:46:28.856 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-25 16:46:28.905 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 16:46:28.910 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 16:46:29.076 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-25 16:46:29.080 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-25 16:46:29.081 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-25 16:46:29.082 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:46:29.082 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:46:29.082 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-25 16:46:29.083 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-25 16:46:29.083 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-25 16:46:29.084 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:46:29.085 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-25 16:46:29.085 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-25 16:46:29.085 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:46:29.086 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-25 16:46:29.093 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-25 16:46:29.094 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-25 16:46:29.184 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:46:29.184 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:46:29.184 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:46:29.184 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 16:46:29.184 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 16:46:29.184 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 16:46:29.184 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 16:46:29.184 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 16:46:29.184 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 16:46:29.184 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:46:29.184 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:46:29.185 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:46:29.185 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:46:29.185 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:46:29.185 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:46:29.185 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 16:46:29.185 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 16:46:29.185 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-25 16:46:29.185 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 16:46:29.185 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 16:46:29.185 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-25 16:46:29.185 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-25 16:46:29.185 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:46:29.185 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:46:29.186 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:46:29.186 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:46:29.186 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:46:29.186 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:46:29.186 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:46:29.186 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:46:29.186 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:46:29.186 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:46:29.186 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:46:29.186 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:46:29.186 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:46:29.186 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:46:29.186 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:46:29.186 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 16:46:29.186 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 16:46:29.187 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 16:46:29.187 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 16:46:29.187 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:46:29.187 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:46:29.187 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:46:29.187 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-25 16:46:29.187 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 16:46:29.187 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 16:46:29.187 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-25 16:46:29.187 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:46:29.187 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:46:29.187 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:46:29.187 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-25 16:46:29.187 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-25 16:46:29.188 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-25 16:46:29.188 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 16:46:29.188 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 16:46:29.188 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 16:46:29.188 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 16:46:29.188 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-25 16:46:29.188 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-25 16:46:29.188 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-25 16:46:29.188 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-25 16:46:29.188 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-25 16:46:29.188 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-25 16:46:29.188 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 16:46:29.188 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 16:46:29.188 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 16:46:29.189 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 16:46:29.190 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-25 16:46:29.190 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-25 16:46:29.190 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 16:46:29.190 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 16:46:29.190 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 16:46:29.190 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 16:46:29.190 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:46:29.190 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:46:29.190 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:46:29.190 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:46:29.190 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:46:29.190 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:46:29.190 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-25 16:46:29.190 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-25 16:46:29.190 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 16:46:29.191 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 16:46:29.191 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:46:29.191 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:46:29.191 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:46:29.191 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-25 16:46:29.191 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-25 16:46:29.191 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 16:46:29.191 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 16:46:29.191 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:46:29.191 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:46:29.191 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:46:29.191 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 16:46:29.191 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 16:46:29.191 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 16:46:29.191 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 16:46:29.192 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 16:46:29.192 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 16:46:29.192 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 16:46:29.192 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 16:46:29.192 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-25 16:46:29.192 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-25 16:46:29.192 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-25 16:46:29.192 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-25 16:46:29.196 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-25 16:46:29.196 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-25 16:46:29.198 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@491f8831
[DEBUG] 2024-11-25 16:46:29.198 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@691541bc
[DEBUG] 2024-11-25 16:46:29.198 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b733ef7
[DEBUG] 2024-11-25 16:46:29.199 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43a4a9e5
[DEBUG] 2024-11-25 16:46:29.199 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@764fffa0
[DEBUG] 2024-11-25 16:46:29.199 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35145874
[DEBUG] 2024-11-25 16:46:29.199 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77524ca7
[DEBUG] 2024-11-25 16:46:29.199 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11df2829
[DEBUG] 2024-11-25 16:46:29.199 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18e4674d
[INFO ] 2024-11-25 16:46:29.223 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-25 16:46:29.223 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-25 16:46:29.223 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-25 16:46:29.303 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-25 16:46:29.377 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-25 16:46:29.377 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-25 16:46:29.377 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-25 16:46:29.422 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-25 16:46:29.423 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-25 16:46:29.430 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-25 16:46:29.430 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-25 16:46:29.444 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eaf8427) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c)
[DEBUG] 2024-11-25 16:46:29.445 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d6039df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae)
[DEBUG] 2024-11-25 16:46:29.445 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e00016) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3cbe6e)
[DEBUG] 2024-11-25 16:46:29.445 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@177ede17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17176b18)
[DEBUG] 2024-11-25 16:46:29.445 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e4395c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab53860)
[DEBUG] 2024-11-25 16:46:29.445 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5ac347) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b9389f)
[DEBUG] 2024-11-25 16:46:29.445 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b2c5ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41f785e3)
[DEBUG] 2024-11-25 16:46:29.445 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9a3661) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727986ad)
[DEBUG] 2024-11-25 16:46:29.445 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1600a8a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b25ef1c)
[DEBUG] 2024-11-25 16:46:29.446 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-25 16:46:29.447 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:46:29.447 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:46:29.449 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:46:29.449 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:46:29.452 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@383cdd4d
[DEBUG] 2024-11-25 16:46:29.452 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@491f8831`
[DEBUG] 2024-11-25 16:46:29.457 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:46:29.457 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:46:29.457 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:46:29.460 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:46:29.460 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:46:29.460 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:46:29.460 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:46:29.460 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:46:29.460 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:46:29.461 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:46:29.461 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:46:29.461 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:46:29.462 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71369e1a]
[DEBUG] 2024-11-25 16:46:29.500 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-25 16:46:29.527 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-25 16:46:29.535 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-25 16:46:29.541 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-25 16:46:29.558 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:46:29.576 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:46:29.576 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:46:29.576 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:46:29.579 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:46:29.582 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-25 16:46:29.586 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:46:29.589 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-25 16:46:29.590 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:46:29.593 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:46:29.599 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:46:29.599 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:46:29.609 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-25 16:46:29.611 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:46:29.611 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:46:29.612 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:46:29.613 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:46:29.613 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:46:29.616 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:46:29.617 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-25 16:46:29.618 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-25 16:46:29.618 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-25 16:46:29.618 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-25 16:46:29.618 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-25 16:46:29.618 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-25 16:46:29.618 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-25 16:46:29.619 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:46:29.623 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:46:29.623 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-25 16:46:29.624 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-25 16:46:29.624 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:46:29.625 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:46:29.625 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:46:29.625 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:46:29.625 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:46:29.625 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-25 16:46:29.625 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:46:29.625 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-25 16:46:29.625 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:46:29.625 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:46:29.625 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-25 16:46:29.626 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-25 16:46:29.626 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-25 16:46:29.626 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-25 16:46:29.626 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-25 16:46:29.626 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-25 16:46:29.626 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:46:29.626 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:46:29.626 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-25 16:46:29.627 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:46:29.627 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:46:29.627 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:46:29.627 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:46:29.627 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:46:29.627 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:46:29.627 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-25 16:46:29.628 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:46:29.628 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-25 16:46:29.629 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-25 16:46:29.629 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-25 16:46:29.629 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:46:29.632 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:46:29.632 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:46:29.632 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:46:29.632 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:46:29.633 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-25 16:46:29.633 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:46:29.633 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-25 16:46:29.633 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:46:29.633 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:46:29.633 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-25 16:46:29.634 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:46:29.636 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-25 16:46:29.637 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-25 16:46:29.637 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-25 16:46:29.637 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-25 16:46:29.637 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-25 16:46:29.637 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-25 16:46:29.637 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-25 16:46:29.637 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-25 16:46:29.638 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:46:29.638 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-25 16:46:29.638 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:46:29.639 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:46:29.639 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-25 16:46:29.640 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:46:29.640 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-25 16:46:29.641 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:46:29.641 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-25 16:46:29.645 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-25 16:46:29.645 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-25 16:46:29.645 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-25 16:46:29.645 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:46:29.647 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-25 16:46:29.649 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-25 16:46:29.650 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-25 16:46:29.650 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:46:29.650 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:46:29.650 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-25 16:46:29.650 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-25 16:46:29.651 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-25 16:46:29.651 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:46:29.651 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:46:29.651 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:46:29.659 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:46:29.659 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:46:29.828 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-25 16:46:29.863 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:46:29.863 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter2626532317047039802.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire10358441655316317798tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_09645009098498646988tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter2626532317047039802.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d7d8911, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-25 16:46:29.867 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-25 16:46:29.872 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:46:29.913 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-25 16:46:29.913 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-25 16:46:29.914 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-25 16:46:29.915 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-25 16:46:29.915 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@347b370c] under count; prior registration was null
[DEBUG] 2024-11-25 16:46:29.916 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@72a33316] under every; prior registration was null
[DEBUG] 2024-11-25 16:46:29.916 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@57fce8b] under any; prior registration was null
[DEBUG] 2024-11-25 16:46:29.916 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-25 16:46:29.916 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-25 16:46:29.916 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-25 16:46:29.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-25 16:46:29.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-25 16:46:29.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-25 16:46:29.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-25 16:46:29.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-25 16:46:29.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-25 16:46:29.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-25 16:46:29.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-25 16:46:29.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-25 16:46:29.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-25 16:46:29.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-25 16:46:29.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-25 16:46:29.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-25 16:46:29.918 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-25 16:46:29.919 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56f2c9e8] under sinh; prior registration was null
[DEBUG] 2024-11-25 16:46:29.919 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@457692cb] under cosh; prior registration was null
[DEBUG] 2024-11-25 16:46:29.919 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350342e0] under tanh; prior registration was null
[DEBUG] 2024-11-25 16:46:29.919 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d] under pi; prior registration was null
[DEBUG] 2024-11-25 16:46:29.919 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289] under log; prior registration was null
[DEBUG] 2024-11-25 16:46:29.919 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-25 16:46:29.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-25 16:46:29.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-25 16:46:29.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-25 16:46:29.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-25 16:46:29.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-25 16:46:29.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-25 16:46:29.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-25 16:46:29.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-25 16:46:29.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-25 16:46:29.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-25 16:46:29.920 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-25 16:46:29.921 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a] under position; prior registration was null
[DEBUG] 2024-11-25 16:46:29.923 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6fa2a006] under overlay; prior registration was null
[DEBUG] 2024-11-25 16:46:29.923 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@39695803] under trim; prior registration was null
[DEBUG] 2024-11-25 16:46:29.924 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@57b711b6] under cast; prior registration was null
[DEBUG] 2024-11-25 16:46:29.924 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2db461b5] under collate; prior registration was null
[DEBUG] 2024-11-25 16:46:29.925 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@55881f40] under extract; prior registration was null
[DEBUG] 2024-11-25 16:46:29.925 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-25 16:46:29.925 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-25 16:46:29.926 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11d1735e] under ifnull; prior registration was null
[DEBUG] 2024-11-25 16:46:29.926 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-25 16:46:29.926 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-25 16:46:29.926 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6282f1eb] under pad; prior registration was null
[DEBUG] 2024-11-25 16:46:29.927 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@64ed18ec] under str; prior registration was null
[DEBUG] 2024-11-25 16:46:29.928 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@25589735] under format; prior registration was null
[DEBUG] 2024-11-25 16:46:29.929 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7dddfc35] under timestampadd; prior registration was null
[DEBUG] 2024-11-25 16:46:29.929 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2336cd91] under timestampdiff; prior registration was null
[DEBUG] 2024-11-25 16:46:29.929 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-25 16:46:29.929 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c1e40d9] under current_date; prior registration was null
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b50c21] under current_time; prior registration was null
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e0fdc83] under current_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5dacf18d] under local_date; prior registration was null
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@432a6a69] under local_time; prior registration was null
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f52a229] under local_datetime; prior registration was null
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fe98084] under offset_datetime; prior registration was null
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f33e6d] under instant; prior registration was null
[DEBUG] 2024-11-25 16:46:29.930 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-25 16:46:29.931 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a1cb94] under sql; prior registration was null
[DEBUG] 2024-11-25 16:46:29.931 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-25 16:46:29.931 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-25 16:46:29.931 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-25 16:46:29.931 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-25 16:46:29.931 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289
[DEBUG] 2024-11-25 16:46:29.931 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-25 16:46:29.931 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-25 16:46:29.931 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-25 16:46:29.931 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-25 16:46:29.931 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-25 16:46:29.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-25 16:46:29.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-25 16:46:29.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-25 16:46:29.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@49bb808f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-25 16:46:29.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@563ada5] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-25 16:46:29.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-25 16:46:29.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-25 16:46:29.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-25 16:46:29.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-25 16:46:29.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-25 16:46:29.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-25 16:46:29.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:46:29.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-25 16:46:29.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-25 16:46:29.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-25 16:46:29.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-25 16:46:29.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-25 16:46:29.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-25 16:46:29.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-25 16:46:29.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-25 16:46:29.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-25 16:46:29.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-25 16:46:29.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12548f9a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a
[DEBUG] 2024-11-25 16:46:29.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-25 16:46:29.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-25 16:46:29.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-25 16:46:29.937 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2838eb] under trunc; prior registration was null
[DEBUG] 2024-11-25 16:46:29.937 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-25 16:46:29.937 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb5d334] under bitand; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45dc7be] under bitor; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under bitxor; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under bitnot; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-25 16:46:29.938 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4d664323] under format; prior registration was org.hibernate.dialect.function.FormatFunction@25589735
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@432a6a69
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f52a229
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ec0d06] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2676d96a] under chr; prior registration was null
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under sysdate; prior registration was null
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-25 16:46:29.939 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-25 16:46:29.940 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-25 16:46:29.941 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@77a9ac36] under rank; prior registration was null
[DEBUG] 2024-11-25 16:46:29.941 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3c743d40] under dense_rank; prior registration was null
[DEBUG] 2024-11-25 16:46:29.941 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5aac6f9f] under percent_rank; prior registration was null
[DEBUG] 2024-11-25 16:46:29.941 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2444c3df] under cume_dist; prior registration was null
[DEBUG] 2024-11-25 16:46:29.941 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@38848217] under listagg; prior registration was null
[DEBUG] 2024-11-25 16:46:29.944 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:46:29.945 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-25 16:46:29.946 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-25 16:46:29.947 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-25 16:46:29.948 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-25 16:46:29.949 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:46:29.950 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-25 16:46:29.950 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-25 16:46:29.950 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-25 16:46:29.950 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-25 16:46:29.950 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-25 16:46:29.950 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-25 16:46:29.950 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-25 16:46:29.950 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-25 16:46:29.950 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.950 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.950 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-25 16:46:29.950 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-25 16:46:29.950 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-25 16:46:29.954 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-25 16:46:30.061 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:46:30.062 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-25 16:46:30.162 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:46:30.165 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:46:30.168 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:46:30.168 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:46:30.168 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:46:30.168 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:46:30.321 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-25 16:46:30.324 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:46:30.324 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:46:30.350 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:46:30.350 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:46:30.366 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-25 16:46:30.367 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:46:30.367 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:46:30.374 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-25 16:46:30.387 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:46:30.388 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:46:30.388 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:46:30.388 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:46:30.388 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:46:30.388 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:46:30.412 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-25 16:46:30.412 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-25 16:46:30.415 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-25 16:46:30.415 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:46:30.416 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:46:30.416 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-25 16:46:30.416 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-25 16:46:30.416 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:46:30.416 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:46:30.416 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-25 16:46:30.416 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-25 16:46:30.416 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:46:30.416 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:46:30.416 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:46:30.477 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:46:30.478 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-25 16:46:30.487 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d01ea33] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-25 16:46:30.488 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:46:30.493 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c3fcbe7] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-25 16:46:30.493 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:46:30.497 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-25 16:46:30.506 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:46:30.515 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-25 16:46:30.515 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-25 16:46:30.515 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:46:30.515 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-25 16:46:30.515 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-25 16:46:30.515 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:46:30.515 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:46:30.516 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:46:30.517 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3ae87e38] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:46:30.518 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:46:30.524 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e9cb95] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:46:30.524 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:46:30.525 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:46:30.526 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:46:30.526 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:46:30.526 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-25 16:46:30.526 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:46:30.526 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-25 16:46:30.526 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-25 16:46:30.526 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:46:30.526 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-25 16:46:30.526 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:46:30.526 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@21a0795f] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:46:30.526 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:46:30.526 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2ec156fb] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:46:30.527 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:46:30.527 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-25 16:46:30.527 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:46:30.527 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-25 16:46:30.527 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-25 16:46:30.527 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-25 16:46:30.527 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-25 16:46:30.527 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-25 16:46:30.528 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:46:30.528 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1bf52f10] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:46:30.528 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:46:30.529 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@301e5d23] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:46:30.529 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:46:30.529 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74787609] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-25 16:46:30.531 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-25 16:46:30.531 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:46:30.531 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:46:30.531 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:46:30.531 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@355b53cc] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:46:30.531 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:46:30.531 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2568611c] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-25 16:46:30.531 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bda7a5b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:46:30.531 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:46:30.532 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-25 16:46:30.532 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:46:30.532 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:46:30.557 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-25 16:46:30.558 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-25 16:46:30.561 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-25 16:46:30.561 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-25 16:46:30.562 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@121dac1a]
[DEBUG] 2024-11-25 16:46:30.562 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-25 16:46:30.562 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-25 16:46:30.563 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:46:30.563 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-25 16:46:30.564 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3acc65f0
[DEBUG] 2024-11-25 16:46:30.565 [main] SessionFactoryRegistry - Registering SessionFactory: caee8334-98d1-4612-a13d-380d15b10d61 (<unnamed>)
[DEBUG] 2024-11-25 16:46:30.565 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-25 16:46:30.565 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-25 16:46:30.600 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-25 16:46:30.615 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:46:30.632 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@656020492 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@609630217 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1104693947 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@636370090 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1072476278 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-25 16:46:30.637 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:46:30.665 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:46:30.667 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:46:30.668 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@638978471 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@959016175 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@2113710566 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@125246542 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@289039926 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-25 16:46:30.668 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:46:30.669 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:46:30.797 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:46:30.797 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1859633528 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1533375298 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@363003357 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1160651280 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@415297573 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:46:30.797 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:46:30.815 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:46:30.815 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:46:30.815 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:46:30.815 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:46:30.815 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:46:30.816 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:46:30.817 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:46:30.817 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:46:30.818 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 663512999
[DEBUG] 2024-11-25 16:46:30.822 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-25 16:46:30.824 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-25 16:46:30.825 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:46:30.829 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:46:30.829 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20e3b165
[DEBUG] 2024-11-25 16:46:30.831 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:46:30.832 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:46:30.834 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:46:30.834 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:46:30.843 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:46:30.843 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:46:30.844 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:46:30.846 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:46:30.849 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-25 16:46:30.849 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-25 16:46:30.849 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:46:30.850 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-25 16:46:30.856 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-25 16:46:30.861 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:46:30.862 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:46:30.862 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:46:30.862 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1456923361 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1318491599 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1139305484 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@208427214 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1833726536 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:46:30.862 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:46:30.863 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:46:30.938 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:46:30.938 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:46:30.939 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 16:46:30.941 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:46:30.944 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-25 16:46:30.944 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 16:46:30.946 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 16:46:30.948 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 16:46:30.948 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:46:30.960 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-25 16:46:30.960 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 16:46:30.960 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 16:46:30.960 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:46:30.960 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:46:30.961 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:46:30.961 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-25 16:46:30.961 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-25 16:46:30.961 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 16:46:30.961 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:46:30.961 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-25 16:46:30.961 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-25 16:46:30.963 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:46:30.964 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:46:30.964 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:46:30.965 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@408648902 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@546552684 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1384781563 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@913564177 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1972176213 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:46:30.965 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:46:30.966 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:46:30.966 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:46:30.966 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-25 16:46:30.966 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-25 16:46:30.966 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-25 16:46:30.966 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-25 16:46:30.966 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-25 16:46:30.966 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-25 16:46:30.966 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 196316233
[DEBUG] 2024-11-25 16:46:30.967 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 345518693
[DEBUG] 2024-11-25 16:46:30.967 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-25 16:46:30.967 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-25 16:46:30.967 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-25 16:46:30.967 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-25 16:46:30.967 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-25 16:46:30.967 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-25 16:46:30.967 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-25 16:46:30.967 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6055e899
[DEBUG] 2024-11-25 16:46:30.968 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-25 16:46:30.968 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:46:31.079 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:46:31.079 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1911830487 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1367787521 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@551821075 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1874842251 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1067780644 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:46:31.079 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:46:31.082 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:46:31.082 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:46:31.082 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:46:31.082 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:46:31.082 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:46:31.082 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:46:31.082 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:46:31.082 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:46:31.082 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1649140180
[DEBUG] 2024-11-25 16:46:31.082 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@862853054
[DEBUG] 2024-11-25 16:46:31.082 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@862853054
[DEBUG] 2024-11-25 16:46:31.082 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:46:31.082 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:46:31.082 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3897f9ae
[DEBUG] 2024-11-25 16:46:31.082 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:46:31.082 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:46:31.083 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:46:31.083 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:46:31.085 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:46:31.085 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:46:31.085 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:46:31.086 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@642f8b7f] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:46:31.086 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:46:31.086 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3321fb65] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:46:31.086 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:46:31.086 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:46:31.086 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:46:31.086 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:46:31.087 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1715414246 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2119380781 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1108674897 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@613097617 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@990656754 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:46:31.087 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:46:31.088 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:46:31.088 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:46:31.088 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:46:31.088 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:46:31.088 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:46:31.088 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:46:31.088 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:46:31.088 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:46:31.088 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1439452257
[DEBUG] 2024-11-25 16:46:31.088 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@721876120
[DEBUG] 2024-11-25 16:46:31.088 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@721876120
[DEBUG] 2024-11-25 16:46:31.088 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:46:31.088 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:46:31.088 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ddb9a8
[DEBUG] 2024-11-25 16:46:31.088 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:46:31.088 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:46:31.089 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:46:31.089 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:46:31.089 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:46:31.090 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-25 16:46:31.090 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-25 16:46:31.090 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 16:46:31.090 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:46:31.090 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-25 16:46:31.092 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-25 16:46:31.094 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:46:31.094 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:46:31.094 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:46:31.094 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1775349092 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1166754951 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1392602264 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@694841823 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1303659291 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:46:31.094 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:46:31.095 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:46:31.095 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:46:31.095 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:46:31.095 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:46:31.095 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:46:31.095 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:46:31.095 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:46:31.096 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:46:31.096 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1613461828
[DEBUG] 2024-11-25 16:46:31.096 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1603095377
[DEBUG] 2024-11-25 16:46:31.096 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1603095377
[DEBUG] 2024-11-25 16:46:31.096 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-25 16:46:31.096 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:46:31.096 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55821edf
[DEBUG] 2024-11-25 16:46:31.096 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:46:31.096 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:46:31.322 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:46:31.323 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@450728160 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2079936145 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1071364078 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@851478032 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1156336184 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:46:31.323 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:46:31.324 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:46:31.325 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:46:31.325 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:46:31.325 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:46:31.325 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:46:31.325 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:46:31.325 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:46:31.325 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:46:31.325 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1937867829
[DEBUG] 2024-11-25 16:46:31.325 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@802062915
[DEBUG] 2024-11-25 16:46:31.325 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@802062915
[DEBUG] 2024-11-25 16:46:31.325 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:46:31.325 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:46:31.325 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52fe87e0
[DEBUG] 2024-11-25 16:46:31.325 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:46:31.325 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:46:31.326 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:46:31.326 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@926498219 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1214687061 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@325183616 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@889633931 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1269566437 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 16:46:31.326 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:46:31.327 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:46:31.327 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:46:31.327 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:46:31.327 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:46:31.327 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:46:31.327 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:46:31.327 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:46:31.327 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:46:31.328 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1295679363
[DEBUG] 2024-11-25 16:46:31.328 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1050768030
[DEBUG] 2024-11-25 16:46:31.328 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1050768030
[DEBUG] 2024-11-25 16:46:31.328 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:46:31.328 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:46:31.328 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6956eb58
[DEBUG] 2024-11-25 16:46:31.328 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:46:31.328 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:50:55.328 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 16:50:55.335 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-25 16:50:55.361 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-25 16:50:55.363 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-25 16:50:55.414 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 16:50:55.421 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 16:50:55.601 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-25 16:50:55.604 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-25 16:50:55.604 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-25 16:50:55.605 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:50:55.605 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 16:50:55.605 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-25 16:50:55.606 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-25 16:50:55.606 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-25 16:50:55.607 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:50:55.608 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-25 16:50:55.608 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-25 16:50:55.608 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 16:50:55.609 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-25 16:50:55.616 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-25 16:50:55.617 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-25 16:50:55.703 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7a388990
[DEBUG] 2024-11-25 16:50:55.703 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7a388990
[DEBUG] 2024-11-25 16:50:55.703 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7a388990
[DEBUG] 2024-11-25 16:50:55.703 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:50:55.704 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 16:50:55.704 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 16:50:55.704 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 16:50:55.704 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 16:50:55.704 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 16:50:55.704 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 16:50:55.704 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 16:50:55.704 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 16:50:55.704 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:50:55.704 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:50:55.704 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 16:50:55.704 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:50:55.704 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 16:50:55.705 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 16:50:55.705 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-25 16:50:55.705 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-25 16:50:55.705 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 16:50:55.705 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-25 16:50:55.705 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-25 16:50:55.705 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-25 16:50:55.705 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-25 16:50:55.705 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:50:55.705 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:50:55.705 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 16:50:55.706 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:50:55.706 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:50:55.706 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 16:50:55.706 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:50:55.706 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:50:55.706 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 16:50:55.706 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:50:55.706 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:50:55.706 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 16:50:55.706 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:50:55.706 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 16:50:55.706 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 16:50:55.706 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 16:50:55.707 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 16:50:55.707 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 16:50:55.707 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 16:50:55.707 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 16:50:55.707 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-25 16:50:55.707 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-25 16:50:55.707 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 16:50:55.707 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-25 16:50:55.707 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-25 16:50:55.707 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-25 16:50:55.708 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 16:50:55.708 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-25 16:50:55.708 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-25 16:50:55.708 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-25 16:50:55.708 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-25 16:50:55.708 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 16:50:55.708 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 16:50:55.708 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 16:50:55.708 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-25 16:50:55.708 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-25 16:50:55.708 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-25 16:50:55.708 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-25 16:50:55.708 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-25 16:50:55.709 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-25 16:50:55.709 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-25 16:50:55.709 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 16:50:55.709 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 16:50:55.709 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 16:50:55.709 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 16:50:55.709 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 16:50:55.709 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 16:50:55.709 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 16:50:55.709 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 16:50:55.709 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 16:50:55.710 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-25 16:50:55.710 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-25 16:50:55.710 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-25 16:50:55.710 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 16:50:55.710 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-25 16:50:55.710 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-25 16:50:55.710 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-25 16:50:55.710 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-25 16:50:55.710 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 16:50:55.710 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-25 16:50:55.710 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-25 16:50:55.710 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-25 16:50:55.711 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 16:50:55.711 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 16:50:55.711 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 16:50:55.711 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 16:50:55.711 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 16:50:55.711 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:50:55.711 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:50:55.711 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 16:50:55.711 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 16:50:55.711 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-25 16:50:55.711 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-25 16:50:55.711 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-25 16:50:55.711 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 16:50:55.711 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 16:50:55.712 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 16:50:55.712 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 16:50:55.712 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-25 16:50:55.712 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-25 16:50:55.712 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-25 16:50:55.712 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 16:50:55.712 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 16:50:55.712 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 16:50:55.712 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:50:55.712 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 16:50:55.712 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 16:50:55.712 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 16:50:55.712 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 16:50:55.712 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 16:50:55.713 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 16:50:55.713 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 16:50:55.713 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 16:50:55.713 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 16:50:55.713 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-25 16:50:55.713 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-25 16:50:55.718 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@426131d7
[DEBUG] 2024-11-25 16:50:55.718 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@426131d7
[DEBUG] 2024-11-25 16:50:55.719 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@29962b2f
[DEBUG] 2024-11-25 16:50:55.719 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@491f8831
[DEBUG] 2024-11-25 16:50:55.719 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@691541bc
[DEBUG] 2024-11-25 16:50:55.719 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5b733ef7
[DEBUG] 2024-11-25 16:50:55.719 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@43a4a9e5
[DEBUG] 2024-11-25 16:50:55.719 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@764fffa0
[DEBUG] 2024-11-25 16:50:55.719 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@35145874
[DEBUG] 2024-11-25 16:50:55.719 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@77524ca7
[DEBUG] 2024-11-25 16:50:55.719 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@11df2829
[INFO ] 2024-11-25 16:50:55.745 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-25 16:50:55.745 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-25 16:50:55.746 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-25 16:50:55.826 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-25 16:50:55.890 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-25 16:50:55.890 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-25 16:50:55.890 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-25 16:50:55.930 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-25 16:50:55.931 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-25 16:50:55.937 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-25 16:50:55.937 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-25 16:50:55.950 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6615237) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eaf8427)
[DEBUG] 2024-11-25 16:50:55.951 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d6039df)
[DEBUG] 2024-11-25 16:50:55.951 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e00016)
[DEBUG] 2024-11-25 16:50:55.951 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b3cbe6e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@177ede17)
[DEBUG] 2024-11-25 16:50:55.951 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17176b18) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e4395c)
[DEBUG] 2024-11-25 16:50:55.951 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab53860) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5ac347)
[DEBUG] 2024-11-25 16:50:55.951 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57b9389f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72b2c5ed)
[DEBUG] 2024-11-25 16:50:55.951 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@41f785e3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c9a3661)
[DEBUG] 2024-11-25 16:50:55.951 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@727986ad) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1600a8a2)
[DEBUG] 2024-11-25 16:50:55.953 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-25 16:50:55.953 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:50:55.953 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-25 16:50:55.955 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:50:55.955 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 16:50:55.958 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@197ce367
[DEBUG] 2024-11-25 16:50:55.958 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@29962b2f`
[DEBUG] 2024-11-25 16:50:55.963 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:50:55.963 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:50:55.963 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 16:50:55.966 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:50:55.966 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:50:55.966 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 16:50:55.966 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:50:55.966 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:50:55.966 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 16:50:55.967 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:50:55.967 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:50:55.967 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 16:50:55.968 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1815577b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71567f33]
[DEBUG] 2024-11-25 16:50:56.004 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-25 16:50:56.031 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-25 16:50:56.038 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-25 16:50:56.045 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-25 16:50:56.054 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:50:56.070 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:50:56.070 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:50:56.071 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:50:56.072 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:50:56.076 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-25 16:50:56.079 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:50:56.081 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-25 16:50:56.082 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:50:56.084 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:50:56.089 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:50:56.090 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:50:56.098 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-25 16:50:56.099 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:50:56.100 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:50:56.100 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 16:50:56.101 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:50:56.101 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:50:56.104 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:50:56.105 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-25 16:50:56.106 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-25 16:50:56.106 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-25 16:50:56.106 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-25 16:50:56.106 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-25 16:50:56.106 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-25 16:50:56.106 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-25 16:50:56.107 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:50:56.111 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:50:56.111 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-25 16:50:56.111 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-25 16:50:56.111 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:50:56.112 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:50:56.112 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:50:56.112 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:50:56.112 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:50:56.112 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-25 16:50:56.112 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:50:56.113 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-25 16:50:56.113 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:50:56.113 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:50:56.113 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-25 16:50:56.113 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-25 16:50:56.113 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-25 16:50:56.113 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-25 16:50:56.113 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-25 16:50:56.113 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-25 16:50:56.113 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:50:56.114 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:50:56.114 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-25 16:50:56.114 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:50:56.114 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:50:56.114 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-25 16:50:56.114 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:50:56.114 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 16:50:56.114 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:50:56.114 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-25 16:50:56.115 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:50:56.115 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-25 16:50:56.116 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-25 16:50:56.116 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-25 16:50:56.116 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 16:50:56.119 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:50:56.119 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:50:56.119 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:50:56.119 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 16:50:56.119 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-25 16:50:56.119 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 16:50:56.119 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-25 16:50:56.119 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 16:50:56.119 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 16:50:56.119 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-25 16:50:56.120 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:50:56.122 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-25 16:50:56.122 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-25 16:50:56.122 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-25 16:50:56.122 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-25 16:50:56.122 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-25 16:50:56.122 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-25 16:50:56.122 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-25 16:50:56.122 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-25 16:50:56.123 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 16:50:56.123 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-25 16:50:56.123 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 16:50:56.125 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:50:56.125 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-25 16:50:56.136 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:50:56.136 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-25 16:50:56.136 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 16:50:56.136 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-25 16:50:56.140 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-25 16:50:56.141 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-25 16:50:56.141 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-25 16:50:56.141 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:50:56.143 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-25 16:50:56.144 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-25 16:50:56.145 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-25 16:50:56.146 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:50:56.146 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:50:56.146 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-25 16:50:56.146 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-25 16:50:56.147 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-25 16:50:56.147 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 16:50:56.147 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:50:56.148 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:50:56.156 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:50:56.156 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 16:50:56.341 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-25 16:50:56.377 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:50:56.377 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter16737248994216742702.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire3279003090973642621tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_07728302815499772142tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter16737248994216742702.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@da5d5e1, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-25 16:50:56.381 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-25 16:50:56.386 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:50:56.429 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-25 16:50:56.429 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-25 16:50:56.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-25 16:50:56.430 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-25 16:50:56.431 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@26aee0a6] under count; prior registration was null
[DEBUG] 2024-11-25 16:50:56.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@57fce8b] under every; prior registration was null
[DEBUG] 2024-11-25 16:50:56.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@77204651] under any; prior registration was null
[DEBUG] 2024-11-25 16:50:56.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-25 16:50:56.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-25 16:50:56.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-25 16:50:56.432 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-25 16:50:56.433 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-25 16:50:56.433 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-25 16:50:56.433 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-25 16:50:56.433 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-25 16:50:56.433 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-25 16:50:56.433 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-25 16:50:56.433 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-25 16:50:56.433 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-25 16:50:56.433 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-25 16:50:56.434 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-25 16:50:56.434 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-25 16:50:56.434 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-25 16:50:56.434 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-25 16:50:56.435 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@457692cb] under sinh; prior registration was null
[DEBUG] 2024-11-25 16:50:56.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350342e0] under cosh; prior registration was null
[DEBUG] 2024-11-25 16:50:56.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d] under tanh; prior registration was null
[DEBUG] 2024-11-25 16:50:56.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289] under pi; prior registration was null
[DEBUG] 2024-11-25 16:50:56.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cc56b32] under log; prior registration was null
[DEBUG] 2024-11-25 16:50:56.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-25 16:50:56.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-25 16:50:56.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-25 16:50:56.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-25 16:50:56.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-25 16:50:56.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-25 16:50:56.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-25 16:50:56.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-25 16:50:56.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-25 16:50:56.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-25 16:50:56.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-25 16:50:56.437 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-25 16:50:56.438 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@526893f] under position; prior registration was null
[DEBUG] 2024-11-25 16:50:56.440 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@70592729] under overlay; prior registration was null
[DEBUG] 2024-11-25 16:50:56.440 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@304068] under trim; prior registration was null
[DEBUG] 2024-11-25 16:50:56.441 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2db461b5] under cast; prior registration was null
[DEBUG] 2024-11-25 16:50:56.441 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c79c5ec] under collate; prior registration was null
[DEBUG] 2024-11-25 16:50:56.442 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@474ce6b8] under extract; prior registration was null
[DEBUG] 2024-11-25 16:50:56.442 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-25 16:50:56.442 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-25 16:50:56.442 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@31082efa] under ifnull; prior registration was null
[DEBUG] 2024-11-25 16:50:56.443 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-25 16:50:56.443 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-25 16:50:56.443 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@120d6cbf] under pad; prior registration was null
[DEBUG] 2024-11-25 16:50:56.443 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1dfcf85a] under str; prior registration was null
[DEBUG] 2024-11-25 16:50:56.445 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@46994f26] under format; prior registration was null
[DEBUG] 2024-11-25 16:50:56.445 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@71316cd7] under timestampadd; prior registration was null
[DEBUG] 2024-11-25 16:50:56.446 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4a944af9] under timestampdiff; prior registration was null
[DEBUG] 2024-11-25 16:50:56.446 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-25 16:50:56.446 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-25 16:50:56.446 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b50c21] under current_date; prior registration was null
[DEBUG] 2024-11-25 16:50:56.446 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e0fdc83] under current_time; prior registration was null
[DEBUG] 2024-11-25 16:50:56.446 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5dacf18d] under current_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:50:56.446 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-25 16:50:56.446 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-25 16:50:56.446 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-25 16:50:56.446 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@432a6a69] under local_date; prior registration was null
[DEBUG] 2024-11-25 16:50:56.446 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f52a229] under local_time; prior registration was null
[DEBUG] 2024-11-25 16:50:56.446 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fe98084] under local_datetime; prior registration was null
[DEBUG] 2024-11-25 16:50:56.446 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f33e6d] under offset_datetime; prior registration was null
[DEBUG] 2024-11-25 16:50:56.446 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-25 16:50:56.446 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-25 16:50:56.447 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-25 16:50:56.447 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-25 16:50:56.447 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@151a6598] under instant; prior registration was null
[DEBUG] 2024-11-25 16:50:56.447 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-25 16:50:56.447 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@46d148bd] under sql; prior registration was null
[DEBUG] 2024-11-25 16:50:56.447 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-25 16:50:56.447 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-25 16:50:56.447 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-25 16:50:56.447 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-25 16:50:56.447 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cc56b32
[DEBUG] 2024-11-25 16:50:56.447 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-25 16:50:56.448 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-25 16:50:56.448 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-25 16:50:56.448 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-25 16:50:56.448 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-25 16:50:56.448 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-25 16:50:56.448 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-25 16:50:56.448 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-25 16:50:56.448 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@563ada5] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-25 16:50:56.448 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@12548f9a] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-25 16:50:56.448 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-25 16:50:56.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@156ff70f] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@526893f
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-25 16:50:56.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-25 16:50:56.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@fb5d334] under trunc; prior registration was null
[DEBUG] 2024-11-25 16:50:56.454 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-25 16:50:56.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-25 16:50:56.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45dc7be] under bitand; prior registration was null
[DEBUG] 2024-11-25 16:50:56.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under bitor; prior registration was null
[DEBUG] 2024-11-25 16:50:56.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under bitxor; prior registration was null
[DEBUG] 2024-11-25 16:50:56.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d664323] under bitnot; prior registration was null
[DEBUG] 2024-11-25 16:50:56.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-25 16:50:56.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-25 16:50:56.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-25 16:50:56.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@27ec0d06] under format; prior registration was org.hibernate.dialect.function.FormatFunction@46994f26
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6f52a229
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3fe98084
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-25 16:50:56.455 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2676d96a] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289
[DEBUG] 2024-11-25 16:50:56.456 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under chr; prior registration was null
[DEBUG] 2024-11-25 16:50:56.456 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-25 16:50:56.456 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6da646b8] under sysdate; prior registration was null
[DEBUG] 2024-11-25 16:50:56.456 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-25 16:50:56.456 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-25 16:50:56.456 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-25 16:50:56.456 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-25 16:50:56.456 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-25 16:50:56.456 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-25 16:50:56.457 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3c743d40] under rank; prior registration was null
[DEBUG] 2024-11-25 16:50:56.457 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5aac6f9f] under dense_rank; prior registration was null
[DEBUG] 2024-11-25 16:50:56.457 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2444c3df] under percent_rank; prior registration was null
[DEBUG] 2024-11-25 16:50:56.457 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1eb6037d] under cume_dist; prior registration was null
[DEBUG] 2024-11-25 16:50:56.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@1607d391] under listagg; prior registration was null
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-25 16:50:56.461 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-25 16:50:56.462 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-25 16:50:56.463 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.464 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-25 16:50:56.465 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-25 16:50:56.469 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-25 16:50:56.569 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 16:50:56.570 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-25 16:50:56.670 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:50:56.673 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:50:56.677 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:50:56.677 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:50:56.677 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 16:50:56.677 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 16:50:56.826 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-25 16:50:56.829 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:50:56.829 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 16:50:56.854 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 16:50:56.854 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 16:50:56.867 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-25 16:50:56.867 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 16:50:56.867 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 16:50:56.875 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-25 16:50:56.889 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:50:56.890 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:50:56.890 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:50:56.890 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:50:56.891 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:50:56.891 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:50:56.913 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-25 16:50:56.913 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-25 16:50:56.916 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-25 16:50:56.916 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:50:56.916 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:50:56.916 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-25 16:50:56.916 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-25 16:50:56.916 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:50:56.916 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:50:56.916 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-25 16:50:56.916 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-25 16:50:56.916 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-25 16:50:56.916 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:50:56.916 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 16:50:56.975 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:50:56.977 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-25 16:50:56.986 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@73b3ce31] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-25 16:50:56.988 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:50:56.992 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1e592ef2] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-25 16:50:56.993 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:50:56.997 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-25 16:50:57.004 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:50:57.012 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-25 16:50:57.012 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-25 16:50:57.012 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:50:57.012 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-25 16:50:57.012 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-25 16:50:57.012 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:50:57.012 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:50:57.013 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:50:57.014 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@44e4cf8a] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:50:57.015 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:50:57.020 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7bc8da3f] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:50:57.020 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:50:57.022 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:50:57.022 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:50:57.022 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-25 16:50:57.022 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-25 16:50:57.022 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:50:57.022 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-25 16:50:57.022 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-25 16:50:57.022 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:50:57.022 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-25 16:50:57.022 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:50:57.022 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2ec156fb] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:50:57.022 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:50:57.022 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@56d742ad] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:50:57.022 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:50:57.022 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-25 16:50:57.023 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:50:57.023 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-25 16:50:57.023 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-25 16:50:57.023 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-25 16:50:57.023 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-25 16:50:57.023 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-25 16:50:57.024 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 16:50:57.024 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6148827c] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 16:50:57.024 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 16:50:57.024 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@393bcd6b] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 16:50:57.024 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:50:57.025 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@36cdcae0] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-25 16:50:57.026 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-25 16:50:57.026 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:50:57.026 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 16:50:57.026 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:50:57.026 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2568611c] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:50:57.026 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:50:57.026 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bda7a5b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-25 16:50:57.026 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@47374fa5] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:50:57.026 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:50:57.027 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-25 16:50:57.027 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:50:57.027 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 16:50:57.048 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-25 16:50:57.049 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-25 16:50:57.052 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-25 16:50:57.052 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-25 16:50:57.053 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1815577b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6d946eee]
[DEBUG] 2024-11-25 16:50:57.054 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-25 16:50:57.054 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-25 16:50:57.054 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 16:50:57.054 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-25 16:50:57.056 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@59ec5a0b
[DEBUG] 2024-11-25 16:50:57.056 [main] SessionFactoryRegistry - Registering SessionFactory: ba4061ae-6ff4-4e8d-a13c-1f936f88f492 (<unnamed>)
[DEBUG] 2024-11-25 16:50:57.056 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-25 16:50:57.056 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-25 16:50:57.092 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-25 16:50:57.108 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:50:57.125 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@1958884645 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@1104693947 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1409842139 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1484744244)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@1072476278 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@102849021 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@686350055)

[DEBUG] 2024-11-25 16:50:57.130 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:50:57.146 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:50:57.147 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:50:57.148 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@959016175 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@2113710566 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@125246542 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1484744244)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@289039926 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1661349610 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@686350055)

[DEBUG] 2024-11-25 16:50:57.148 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 16:50:57.149 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:50:57.230 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:50:57.231 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@959378687 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1859633528)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@473440633 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1533375298 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@363003357 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1160651280 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@415297573)

[DEBUG] 2024-11-25 16:50:57.231 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:50:57.234 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:50:57.234 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:50:57.234 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:50:57.234 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:50:57.234 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:50:57.234 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:50:57.235 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:50:57.235 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:50:57.236 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 276957560
[DEBUG] 2024-11-25 16:50:57.240 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1296433403
[DEBUG] 2024-11-25 16:50:57.241 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1296433403
[DEBUG] 2024-11-25 16:50:57.242 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:50:57.245 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:50:57.245 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d71ec5b
[DEBUG] 2024-11-25 16:50:57.247 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:50:57.247 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:50:57.249 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:50:57.249 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:50:57.258 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:50:57.258 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:50:57.259 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:50:57.261 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:50:57.264 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-25 16:50:57.264 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-25 16:50:57.264 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:50:57.265 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-25 16:50:57.271 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-25 16:50:57.273 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:50:57.274 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:50:57.274 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:50:57.274 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1114748744 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1859633528)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1456923361 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1318491599 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1139305484 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@208427214 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@415297573)

[DEBUG] 2024-11-25 16:50:57.274 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:50:57.275 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:50:57.351 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:50:57.351 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:50:57.353 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 16:50:57.355 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-25 16:50:57.362 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-25 16:50:57.362 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 16:50:57.363 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 16:50:57.365 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 16:50:57.366 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 16:50:57.367 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-25 16:50:57.367 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 16:50:57.367 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 16:50:57.367 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:50:57.367 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:50:57.367 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:50:57.368 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-25 16:50:57.368 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-25 16:50:57.368 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 16:50:57.368 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:50:57.368 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-25 16:50:57.368 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-25 16:50:57.370 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:50:57.371 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:50:57.371 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:50:57.372 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@546552684 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1859633528)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1384781563 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@913564177 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1972176213 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1215858771 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@415297573)

[DEBUG] 2024-11-25 16:50:57.372 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:50:57.373 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:50:57.373 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:50:57.373 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-25 16:50:57.373 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-25 16:50:57.373 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-25 16:50:57.373 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-25 16:50:57.373 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-25 16:50:57.373 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-25 16:50:57.373 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 1315430544
[DEBUG] 2024-11-25 16:50:57.373 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 56505723
[DEBUG] 2024-11-25 16:50:57.373 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1917593312
[DEBUG] 2024-11-25 16:50:57.374 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1917593312
[DEBUG] 2024-11-25 16:50:57.374 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-25 16:50:57.374 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-25 16:50:57.374 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1917593312
[DEBUG] 2024-11-25 16:50:57.374 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-25 16:50:57.374 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-25 16:50:57.374 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@350be5ec
[DEBUG] 2024-11-25 16:50:57.374 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-25 16:50:57.374 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:50:57.477 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:50:57.477 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@456824281 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1859633528)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1911830487 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1367787521 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@551821075 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1874842251 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@415297573)

[DEBUG] 2024-11-25 16:50:57.477 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:50:57.479 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:50:57.479 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:50:57.479 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:50:57.479 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:50:57.479 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:50:57.479 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:50:57.479 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:50:57.479 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:50:57.480 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 985514269
[DEBUG] 2024-11-25 16:50:57.480 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1649140180
[DEBUG] 2024-11-25 16:50:57.480 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1649140180
[DEBUG] 2024-11-25 16:50:57.480 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:50:57.480 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:50:57.480 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@336e17be
[DEBUG] 2024-11-25 16:50:57.480 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:50:57.480 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:50:57.480 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 16:50:57.481 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 16:50:57.483 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 16:50:57.483 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 16:50:57.483 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 16:50:57.483 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7b0dfa91] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 16:50:57.483 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 16:50:57.483 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@642f8b7f] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 16:50:57.483 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 16:50:57.483 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 16:50:57.484 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 16:50:57.484 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:50:57.484 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1920110923 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1859633528)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1715414246 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@2119380781 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1108674897 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@613097617 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@415297573)

[DEBUG] 2024-11-25 16:50:57.484 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:50:57.485 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:50:57.485 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:50:57.485 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:50:57.485 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:50:57.485 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:50:57.485 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:50:57.485 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:50:57.485 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:50:57.485 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1201078845
[DEBUG] 2024-11-25 16:50:57.485 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1439452257
[DEBUG] 2024-11-25 16:50:57.485 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1439452257
[DEBUG] 2024-11-25 16:50:57.485 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:50:57.485 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:50:57.485 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b06f498
[DEBUG] 2024-11-25 16:50:57.485 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:50:57.486 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:50:57.486 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 16:50:57.486 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 16:50:57.486 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 16:50:57.487 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-25 16:50:57.487 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-25 16:50:57.487 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 16:50:57.487 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 16:50:57.487 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-25 16:50:57.489 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-25 16:50:57.491 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:50:57.492 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:50:57.492 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:50:57.492 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@2053115425 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1859633528)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1775349092 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1166754951 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1392602264 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@694841823 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@415297573)

[DEBUG] 2024-11-25 16:50:57.492 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:50:57.493 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:50:57.493 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:50:57.493 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:50:57.493 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:50:57.493 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:50:57.493 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:50:57.493 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:50:57.493 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:50:57.493 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 695489783
[DEBUG] 2024-11-25 16:50:57.493 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1613461828
[DEBUG] 2024-11-25 16:50:57.493 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1613461828
[DEBUG] 2024-11-25 16:50:57.493 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-25 16:50:57.493 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:50:57.494 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f8d4b51
[DEBUG] 2024-11-25 16:50:57.494 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:50:57.494 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:50:57.680 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:50:57.681 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@2079936145 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1859633528)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1071364078 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@851478032 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1156336184 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1968179698 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@415297573)

[DEBUG] 2024-11-25 16:50:57.681 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:50:57.683 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:50:57.683 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:50:57.683 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:50:57.683 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:50:57.683 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:50:57.683 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:50:57.683 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:50:57.683 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:50:57.683 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 802062915
[DEBUG] 2024-11-25 16:50:57.683 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1392412640
[DEBUG] 2024-11-25 16:50:57.683 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1392412640
[DEBUG] 2024-11-25 16:50:57.683 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:50:57.683 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:50:57.683 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37393dab
[DEBUG] 2024-11-25 16:50:57.683 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:50:57.684 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 16:50:57.684 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 16:50:57.684 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1214687061 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1859633528)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@325183616 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@889633931 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1269566437 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@915231178 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@415297573)

[DEBUG] 2024-11-25 16:50:57.684 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 16:50:57.685 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 16:50:57.685 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 16:50:57.685 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 16:50:57.685 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 16:50:57.685 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 16:50:57.685 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 16:50:57.685 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 16:50:57.686 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 16:50:57.686 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1050768030
[DEBUG] 2024-11-25 16:50:57.686 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1767304024
[DEBUG] 2024-11-25 16:50:57.686 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1767304024
[DEBUG] 2024-11-25 16:50:57.686 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 16:50:57.686 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 16:50:57.686 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7fff419d
[DEBUG] 2024-11-25 16:50:57.686 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 16:50:57.686 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:01:13.432 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 17:01:13.439 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-25 17:01:13.467 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-25 17:01:13.469 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-25 17:01:13.517 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 17:01:13.523 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 17:01:13.690 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-25 17:01:13.693 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-25 17:01:13.693 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-25 17:01:13.694 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 17:01:13.694 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 17:01:13.694 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-25 17:01:13.695 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-25 17:01:13.695 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-25 17:01:13.696 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 17:01:13.696 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-25 17:01:13.697 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-25 17:01:13.697 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 17:01:13.698 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-25 17:01:13.705 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-25 17:01:13.706 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-25 17:01:13.788 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1cd6b1bd
[DEBUG] 2024-11-25 17:01:13.789 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1cd6b1bd
[DEBUG] 2024-11-25 17:01:13.789 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1cd6b1bd
[DEBUG] 2024-11-25 17:01:13.789 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@443cdaa4
[DEBUG] 2024-11-25 17:01:13.789 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@443cdaa4
[DEBUG] 2024-11-25 17:01:13.789 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3b41e1bf
[DEBUG] 2024-11-25 17:01:13.789 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3b41e1bf
[DEBUG] 2024-11-25 17:01:13.789 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@619c93ca
[DEBUG] 2024-11-25 17:01:13.789 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@619c93ca
[DEBUG] 2024-11-25 17:01:13.789 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@486e9d1d
[DEBUG] 2024-11-25 17:01:13.789 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@486e9d1d
[DEBUG] 2024-11-25 17:01:13.789 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@486e9d1d
[DEBUG] 2024-11-25 17:01:13.789 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6aa5974e
[DEBUG] 2024-11-25 17:01:13.789 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6aa5974e
[DEBUG] 2024-11-25 17:01:13.790 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6aa5974e
[DEBUG] 2024-11-25 17:01:13.790 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5e5ddfbc
[DEBUG] 2024-11-25 17:01:13.790 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5e5ddfbc
[DEBUG] 2024-11-25 17:01:13.790 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5bda157e
[DEBUG] 2024-11-25 17:01:13.790 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@67e0fd6d
[DEBUG] 2024-11-25 17:01:13.790 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@67e0fd6d
[DEBUG] 2024-11-25 17:01:13.790 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@21390938
[DEBUG] 2024-11-25 17:01:13.790 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1129829c
[DEBUG] 2024-11-25 17:01:13.790 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1a531422
[DEBUG] 2024-11-25 17:01:13.790 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1a531422
[DEBUG] 2024-11-25 17:01:13.790 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a531422
[DEBUG] 2024-11-25 17:01:13.790 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7a388990
[DEBUG] 2024-11-25 17:01:13.790 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7a388990
[DEBUG] 2024-11-25 17:01:13.791 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7a388990
[DEBUG] 2024-11-25 17:01:13.791 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 17:01:13.791 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 17:01:13.791 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 17:01:13.791 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 17:01:13.791 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 17:01:13.791 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 17:01:13.791 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 17:01:13.791 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 17:01:13.791 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 17:01:13.791 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 17:01:13.791 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 17:01:13.791 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 17:01:13.791 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 17:01:13.791 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 17:01:13.792 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 17:01:13.792 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 17:01:13.792 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 17:01:13.792 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-25 17:01:13.792 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-25 17:01:13.792 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 17:01:13.792 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-25 17:01:13.792 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-25 17:01:13.792 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-25 17:01:13.792 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-25 17:01:13.792 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 17:01:13.792 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 17:01:13.792 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 17:01:13.792 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 17:01:13.792 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 17:01:13.793 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 17:01:13.793 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 17:01:13.793 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 17:01:13.793 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 17:01:13.793 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 17:01:13.793 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-25 17:01:13.793 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 17:01:13.793 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-25 17:01:13.793 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-25 17:01:13.793 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 17:01:13.793 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 17:01:13.793 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-25 17:01:13.793 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-25 17:01:13.794 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-25 17:01:13.794 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-25 17:01:13.794 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-25 17:01:13.794 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-25 17:01:13.794 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 17:01:13.794 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 17:01:13.794 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-25 17:01:13.794 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-25 17:01:13.794 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-25 17:01:13.794 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-25 17:01:13.794 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-25 17:01:13.794 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-25 17:01:13.794 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 17:01:13.795 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 17:01:13.796 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-25 17:01:13.796 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-25 17:01:13.796 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-25 17:01:13.796 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-25 17:01:13.796 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-25 17:01:13.796 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 17:01:13.796 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 17:01:13.796 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-25 17:01:13.796 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-25 17:01:13.796 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-25 17:01:13.796 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-25 17:01:13.796 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-25 17:01:13.796 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 17:01:13.796 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 17:01:13.796 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 17:01:13.797 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 17:01:13.797 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 17:01:13.797 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 17:01:13.797 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 17:01:13.797 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 17:01:13.797 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-25 17:01:13.797 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-25 17:01:13.802 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6a98f353
[DEBUG] 2024-11-25 17:01:13.802 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6a98f353
[DEBUG] 2024-11-25 17:01:13.803 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3a0aaaf0
[DEBUG] 2024-11-25 17:01:13.803 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@426131d7
[DEBUG] 2024-11-25 17:01:13.803 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5d9618f2
[DEBUG] 2024-11-25 17:01:13.803 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7c7e73c5
[DEBUG] 2024-11-25 17:01:13.803 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@13cc0b90
[DEBUG] 2024-11-25 17:01:13.804 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@58687fb7
[DEBUG] 2024-11-25 17:01:13.804 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3554bdc0
[DEBUG] 2024-11-25 17:01:13.804 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3a3b10f4
[DEBUG] 2024-11-25 17:01:13.804 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@49580ca8
[INFO ] 2024-11-25 17:01:13.829 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-25 17:01:13.830 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-25 17:01:13.830 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-25 17:01:13.908 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-25 17:01:13.968 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-25 17:01:13.968 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-25 17:01:13.968 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-25 17:01:14.006 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-25 17:01:14.007 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-25 17:01:14.013 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-25 17:01:14.013 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-25 17:01:14.025 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14b8a751) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7345f97d)
[DEBUG] 2024-11-25 17:01:14.026 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@554566a8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@66020d69)
[DEBUG] 2024-11-25 17:01:14.026 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3751acd7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6b832551)
[DEBUG] 2024-11-25 17:01:14.026 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@150d6eaf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@63124022)
[DEBUG] 2024-11-25 17:01:14.026 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@591f6f83) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b44605c)
[DEBUG] 2024-11-25 17:01:14.026 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55421b8d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@24a04257)
[DEBUG] 2024-11-25 17:01:14.026 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6615237) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@eaf8427)
[DEBUG] 2024-11-25 17:01:14.026 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d6039df)
[DEBUG] 2024-11-25 17:01:14.026 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13e00016)
[DEBUG] 2024-11-25 17:01:14.027 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-25 17:01:14.027 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-25 17:01:14.028 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-25 17:01:14.030 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 17:01:14.030 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 17:01:14.032 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7a814310
[DEBUG] 2024-11-25 17:01:14.032 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3a0aaaf0`
[DEBUG] 2024-11-25 17:01:14.036 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 17:01:14.036 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 17:01:14.037 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 17:01:14.039 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 17:01:14.039 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 17:01:14.039 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 17:01:14.039 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 17:01:14.040 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 17:01:14.040 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 17:01:14.040 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 17:01:14.040 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 17:01:14.040 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 17:01:14.041 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@539fc5d1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4cae66a8]
[DEBUG] 2024-11-25 17:01:14.075 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-25 17:01:14.101 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-25 17:01:14.109 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-25 17:01:14.114 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-25 17:01:14.123 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 17:01:14.137 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:01:14.138 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 17:01:14.138 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 17:01:14.140 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 17:01:14.143 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-25 17:01:14.147 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 17:01:14.150 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-25 17:01:14.150 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 17:01:14.153 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 17:01:14.158 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 17:01:14.158 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:01:14.167 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-25 17:01:14.168 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:01:14.169 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 17:01:14.169 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 17:01:14.170 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 17:01:14.170 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 17:01:14.172 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 17:01:14.174 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-25 17:01:14.174 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-25 17:01:14.175 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-25 17:01:14.175 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-25 17:01:14.175 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-25 17:01:14.175 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-25 17:01:14.175 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-25 17:01:14.176 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 17:01:14.180 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-25 17:01:14.180 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-25 17:01:14.180 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-25 17:01:14.180 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 17:01:14.181 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:01:14.181 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 17:01:14.181 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 17:01:14.182 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 17:01:14.182 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-25 17:01:14.182 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 17:01:14.182 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-25 17:01:14.182 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 17:01:14.182 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 17:01:14.182 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-25 17:01:14.182 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-25 17:01:14.182 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-25 17:01:14.182 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-25 17:01:14.183 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-25 17:01:14.183 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-25 17:01:14.183 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 17:01:14.183 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:01:14.183 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-25 17:01:14.183 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:01:14.184 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-25 17:01:14.184 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-25 17:01:14.184 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 17:01:14.184 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 17:01:14.184 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 17:01:14.184 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-25 17:01:14.185 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 17:01:14.185 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-25 17:01:14.186 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-25 17:01:14.186 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-25 17:01:14.186 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 17:01:14.189 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:01:14.189 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 17:01:14.189 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 17:01:14.190 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 17:01:14.190 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-25 17:01:14.190 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 17:01:14.190 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-25 17:01:14.190 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 17:01:14.190 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 17:01:14.190 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-25 17:01:14.191 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:01:14.193 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-25 17:01:14.193 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-25 17:01:14.193 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-25 17:01:14.193 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-25 17:01:14.194 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-25 17:01:14.194 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-25 17:01:14.194 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-25 17:01:14.194 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-25 17:01:14.194 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:01:14.194 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-25 17:01:14.195 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 17:01:14.195 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 17:01:14.196 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-25 17:01:14.197 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 17:01:14.197 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-25 17:01:14.197 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 17:01:14.197 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-25 17:01:14.201 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-25 17:01:14.201 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-25 17:01:14.201 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-25 17:01:14.201 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 17:01:14.203 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-25 17:01:14.205 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-25 17:01:14.206 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-25 17:01:14.206 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 17:01:14.206 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 17:01:14.207 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-25 17:01:14.207 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-25 17:01:14.207 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-25 17:01:14.207 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 17:01:14.207 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 17:01:14.208 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 17:01:14.216 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 17:01:14.216 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 17:01:14.399 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-25 17:01:14.434 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 17:01:14.434 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter6427047838281333608.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire13087579677224607430tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_01042577972054915166tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter6427047838281333608.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7f030c72, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-25 17:01:14.439 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-25 17:01:14.445 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 17:01:14.485 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-25 17:01:14.485 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-25 17:01:14.485 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-25 17:01:14.486 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-25 17:01:14.487 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6ed691fd] under count; prior registration was null
[DEBUG] 2024-11-25 17:01:14.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6cde0c69] under every; prior registration was null
[DEBUG] 2024-11-25 17:01:14.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6f4d2294] under any; prior registration was null
[DEBUG] 2024-11-25 17:01:14.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-25 17:01:14.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-25 17:01:14.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-25 17:01:14.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-25 17:01:14.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-25 17:01:14.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-25 17:01:14.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-25 17:01:14.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-25 17:01:14.488 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-25 17:01:14.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-25 17:01:14.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-25 17:01:14.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-25 17:01:14.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-25 17:01:14.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-25 17:01:14.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-25 17:01:14.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-25 17:01:14.489 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-25 17:01:14.490 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a9c11fb] under sinh; prior registration was null
[DEBUG] 2024-11-25 17:01:14.490 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@416c8bb5] under cosh; prior registration was null
[DEBUG] 2024-11-25 17:01:14.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@340b4f07] under tanh; prior registration was null
[DEBUG] 2024-11-25 17:01:14.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e994ca] under pi; prior registration was null
[DEBUG] 2024-11-25 17:01:14.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a205ee5] under log; prior registration was null
[DEBUG] 2024-11-25 17:01:14.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-25 17:01:14.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-25 17:01:14.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-25 17:01:14.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-25 17:01:14.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-25 17:01:14.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-25 17:01:14.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-25 17:01:14.491 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-25 17:01:14.492 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-25 17:01:14.492 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-25 17:01:14.492 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-25 17:01:14.492 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-25 17:01:14.492 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@457692cb] under position; prior registration was null
[DEBUG] 2024-11-25 17:01:14.494 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@15130002] under overlay; prior registration was null
[DEBUG] 2024-11-25 17:01:14.495 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@526893f] under trim; prior registration was null
[DEBUG] 2024-11-25 17:01:14.496 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@70f5f59d] under cast; prior registration was null
[DEBUG] 2024-11-25 17:01:14.496 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74431832] under collate; prior registration was null
[DEBUG] 2024-11-25 17:01:14.496 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@43b172e3] under extract; prior registration was null
[DEBUG] 2024-11-25 17:01:14.496 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-25 17:01:14.497 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-25 17:01:14.497 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1cb849b2] under ifnull; prior registration was null
[DEBUG] 2024-11-25 17:01:14.497 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-25 17:01:14.497 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-25 17:01:14.497 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@57b711b6] under pad; prior registration was null
[DEBUG] 2024-11-25 17:01:14.498 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5bbf744b] under str; prior registration was null
[DEBUG] 2024-11-25 17:01:14.499 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@31082efa] under format; prior registration was null
[DEBUG] 2024-11-25 17:01:14.500 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@120d6cbf] under timestampadd; prior registration was null
[DEBUG] 2024-11-25 17:01:14.500 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@69f69078] under timestampdiff; prior registration was null
[DEBUG] 2024-11-25 17:01:14.500 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-25 17:01:14.500 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-25 17:01:14.500 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1bb172dd] under current_date; prior registration was null
[DEBUG] 2024-11-25 17:01:14.500 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1cdd31a4] under current_time; prior registration was null
[DEBUG] 2024-11-25 17:01:14.501 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7dddfc35] under current_timestamp; prior registration was null
[DEBUG] 2024-11-25 17:01:14.501 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-25 17:01:14.501 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-25 17:01:14.501 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-25 17:01:14.501 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@71316cd7] under local_date; prior registration was null
[DEBUG] 2024-11-25 17:01:14.501 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6106dfb6] under local_time; prior registration was null
[DEBUG] 2024-11-25 17:01:14.501 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@14239223] under local_datetime; prior registration was null
[DEBUG] 2024-11-25 17:01:14.501 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68df8c6] under offset_datetime; prior registration was null
[DEBUG] 2024-11-25 17:01:14.501 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-25 17:01:14.501 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-25 17:01:14.501 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-25 17:01:14.501 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-25 17:01:14.501 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c206b14] under instant; prior registration was null
[DEBUG] 2024-11-25 17:01:14.501 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-25 17:01:14.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3593e074] under sql; prior registration was null
[DEBUG] 2024-11-25 17:01:14.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-25 17:01:14.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-25 17:01:14.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-25 17:01:14.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-25 17:01:14.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a205ee5
[DEBUG] 2024-11-25 17:01:14.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-25 17:01:14.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-25 17:01:14.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-25 17:01:14.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-25 17:01:14.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-25 17:01:14.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-25 17:01:14.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-25 17:01:14.502 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-25 17:01:14.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2e0fdc83] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-25 17:01:14.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5dacf18d] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-25 17:01:14.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-25 17:01:14.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-25 17:01:14.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-25 17:01:14.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-25 17:01:14.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-25 17:01:14.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-25 17:01:14.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-25 17:01:14.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-25 17:01:14.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-25 17:01:14.503 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-25 17:01:14.503 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-25 17:01:14.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-25 17:01:14.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-25 17:01:14.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-25 17:01:14.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-25 17:01:14.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-25 17:01:14.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-25 17:01:14.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-25 17:01:14.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-25 17:01:14.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-25 17:01:14.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-25 17:01:14.504 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-25 17:01:14.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-25 17:01:14.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-25 17:01:14.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-25 17:01:14.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-25 17:01:14.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-25 17:01:14.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-25 17:01:14.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-25 17:01:14.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-25 17:01:14.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-25 17:01:14.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-25 17:01:14.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-25 17:01:14.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@432a6a69] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@457692cb
[DEBUG] 2024-11-25 17:01:14.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-25 17:01:14.505 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-25 17:01:14.506 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@e6e5da4] under trunc; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@720c8f80] under bitand; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f591271] under bitor; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77cc6a28] under bitxor; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b339a08] under bitnot; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-25 17:01:14.509 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1d556461] under format; prior registration was org.hibernate.dialect.function.FormatFunction@31082efa
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6106dfb6
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@14239223
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a583720] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e994ca
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ed19b69] under chr; prior registration was null
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59a5bb61] under sysdate; prior registration was null
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-25 17:01:14.510 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-25 17:01:14.511 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-25 17:01:14.511 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-25 17:01:14.511 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4d664323] under rank; prior registration was null
[DEBUG] 2024-11-25 17:01:14.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@27ec0d06] under dense_rank; prior registration was null
[DEBUG] 2024-11-25 17:01:14.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2676d96a] under percent_rank; prior registration was null
[DEBUG] 2024-11-25 17:01:14.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@12266084] under cume_dist; prior registration was null
[DEBUG] 2024-11-25 17:01:14.512 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@1b4ba615] under listagg; prior registration was null
[DEBUG] 2024-11-25 17:01:14.515 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.515 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.515 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 17:01:14.515 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 17:01:14.515 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-25 17:01:14.515 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-25 17:01:14.515 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.515 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.515 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 17:01:14.515 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-25 17:01:14.515 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-25 17:01:14.515 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 17:01:14.515 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-25 17:01:14.515 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-25 17:01:14.516 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-25 17:01:14.517 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 17:01:14.518 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.519 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-25 17:01:14.520 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-25 17:01:14.520 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-25 17:01:14.523 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-25 17:01:14.624 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 17:01:14.625 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-25 17:01:14.735 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 17:01:14.738 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 17:01:14.741 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 17:01:14.741 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 17:01:14.741 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 17:01:14.742 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 17:01:14.909 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-25 17:01:14.913 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 17:01:14.913 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 17:01:14.938 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 17:01:14.938 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 17:01:14.954 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-25 17:01:14.955 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 17:01:14.955 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 17:01:14.964 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-25 17:01:14.978 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 17:01:14.979 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 17:01:14.979 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 17:01:14.980 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 17:01:14.980 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 17:01:14.980 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 17:01:15.006 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-25 17:01:15.006 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-25 17:01:15.010 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-25 17:01:15.010 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-25 17:01:15.010 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 17:01:15.010 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-25 17:01:15.010 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-25 17:01:15.011 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-25 17:01:15.011 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 17:01:15.011 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-25 17:01:15.011 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-25 17:01:15.011 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-25 17:01:15.011 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 17:01:15.011 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 17:01:15.074 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 17:01:15.076 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-25 17:01:15.084 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@566cc6af] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-25 17:01:15.085 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 17:01:15.089 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@615e7fe7] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-25 17:01:15.090 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 17:01:15.094 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-25 17:01:15.102 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 17:01:15.111 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-25 17:01:15.111 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-25 17:01:15.111 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 17:01:15.111 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-25 17:01:15.111 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-25 17:01:15.111 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 17:01:15.111 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 17:01:15.112 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 17:01:15.113 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3a45308f] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 17:01:15.114 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 17:01:15.119 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6fdb1a59] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 17:01:15.119 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 17:01:15.121 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 17:01:15.121 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 17:01:15.121 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-25 17:01:15.121 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-25 17:01:15.121 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-25 17:01:15.121 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-25 17:01:15.121 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-25 17:01:15.121 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 17:01:15.121 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-25 17:01:15.121 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 17:01:15.121 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@24668b5b] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 17:01:15.122 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 17:01:15.122 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1f8d42d1] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 17:01:15.122 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 17:01:15.122 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-25 17:01:15.122 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 17:01:15.122 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-25 17:01:15.122 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-25 17:01:15.122 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-25 17:01:15.122 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-25 17:01:15.122 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-25 17:01:15.123 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 17:01:15.123 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@60b4c754] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 17:01:15.123 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 17:01:15.124 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@75784062] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 17:01:15.124 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 17:01:15.124 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1f4cb17b] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-25 17:01:15.126 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-25 17:01:15.126 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 17:01:15.126 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 17:01:15.126 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 17:01:15.126 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@51fa09c7] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 17:01:15.126 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 17:01:15.126 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@73db7df0] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-25 17:01:15.126 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@44a485bc] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 17:01:15.126 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 17:01:15.126 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-25 17:01:15.127 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 17:01:15.127 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 17:01:15.150 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-25 17:01:15.150 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-25 17:01:15.153 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-25 17:01:15.154 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-25 17:01:15.154 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@539fc5d1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@447543ee]
[DEBUG] 2024-11-25 17:01:15.155 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-25 17:01:15.155 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-25 17:01:15.155 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 17:01:15.155 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-25 17:01:15.157 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69cb134
[DEBUG] 2024-11-25 17:01:15.157 [main] SessionFactoryRegistry - Registering SessionFactory: 82d7efea-64a2-43a5-a28d-e30ee81e4be8 (<unnamed>)
[DEBUG] 2024-11-25 17:01:15.157 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-25 17:01:15.157 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-25 17:01:15.192 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-25 17:01:15.208 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:01:15.224 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@139981223 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@604893842 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@859765585 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@742726730)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@2061394598 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1406226484 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@160918311)

[DEBUG] 2024-11-25 17:01:15.228 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 17:01:15.243 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:01:15.244 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:01:15.245 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@350829638 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@143943129 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1876767618 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@742726730)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@1869758914 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@841243494 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@160918311)

[DEBUG] 2024-11-25 17:01:15.245 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 17:01:15.245 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:01:15.312 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:01:15.313 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@374875381 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1158747247)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1544967706 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1478094351 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@254871157 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1112459664 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@738648389)

[DEBUG] 2024-11-25 17:01:15.313 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:01:15.316 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 17:01:15.316 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 17:01:15.316 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 17:01:15.316 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 17:01:15.316 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 17:01:15.316 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 17:01:15.317 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 17:01:15.317 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 17:01:15.318 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1873943005
[DEBUG] 2024-11-25 17:01:15.324 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@208499286
[DEBUG] 2024-11-25 17:01:15.325 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@208499286
[DEBUG] 2024-11-25 17:01:15.326 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 17:01:15.329 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 17:01:15.330 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@768d27e8
[DEBUG] 2024-11-25 17:01:15.332 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:01:15.333 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:01:15.335 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 17:01:15.335 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 17:01:15.344 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 17:01:15.344 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 17:01:15.345 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 17:01:15.347 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:01:15.350 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-25 17:01:15.350 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-25 17:01:15.350 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 17:01:15.351 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-25 17:01:15.357 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-25 17:01:15.360 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:01:15.360 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:01:15.361 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:01:15.361 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@27632888 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1158747247)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1402120747 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@391056646 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1556643300 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1885769953 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@738648389)

[DEBUG] 2024-11-25 17:01:15.361 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:01:15.362 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:01:15.423 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 17:01:15.423 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 17:01:15.425 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 17:01:15.427 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-25 17:01:15.430 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-25 17:01:15.430 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 17:01:15.431 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 17:01:15.434 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 17:01:15.434 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 17:01:15.435 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-25 17:01:15.435 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 17:01:15.435 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 17:01:15.435 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 17:01:15.435 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 17:01:15.435 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 17:01:15.436 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-25 17:01:15.436 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-25 17:01:15.436 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 17:01:15.436 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 17:01:15.436 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-25 17:01:15.436 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-25 17:01:15.438 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:01:15.439 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:01:15.439 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:01:15.440 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@145364322 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1158747247)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1550894961 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@879136982 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@674349432 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1894301721 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@738648389)

[DEBUG] 2024-11-25 17:01:15.440 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:01:15.441 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 17:01:15.441 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 17:01:15.441 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-25 17:01:15.441 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-25 17:01:15.441 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-25 17:01:15.441 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-25 17:01:15.441 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-25 17:01:15.441 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-25 17:01:15.441 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 423459527
[DEBUG] 2024-11-25 17:01:15.442 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 546552684
[DEBUG] 2024-11-25 17:01:15.442 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1384781563
[DEBUG] 2024-11-25 17:01:15.442 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1384781563
[DEBUG] 2024-11-25 17:01:15.442 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-25 17:01:15.442 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-25 17:01:15.442 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1384781563
[DEBUG] 2024-11-25 17:01:15.442 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-25 17:01:15.442 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-25 17:01:15.442 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@758d0555
[DEBUG] 2024-11-25 17:01:15.443 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-25 17:01:15.443 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:01:15.508 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:01:15.509 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1670210122 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1158747247)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2125952195 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1912688982 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@61088069 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@196316233 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@738648389)

[DEBUG] 2024-11-25 17:01:15.509 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:01:15.510 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 17:01:15.510 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 17:01:15.510 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 17:01:15.510 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 17:01:15.510 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 17:01:15.510 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 17:01:15.510 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 17:01:15.510 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 17:01:15.511 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 889972204
[DEBUG] 2024-11-25 17:01:15.511 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1200417755
[DEBUG] 2024-11-25 17:01:15.511 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1200417755
[DEBUG] 2024-11-25 17:01:15.511 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 17:01:15.511 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 17:01:15.511 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5464aeec
[DEBUG] 2024-11-25 17:01:15.511 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:01:15.511 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:01:15.511 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 17:01:15.511 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 17:01:15.513 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 17:01:15.513 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 17:01:15.513 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 17:01:15.514 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@336e17be] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 17:01:15.514 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 17:01:15.514 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3897f9ae] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 17:01:15.514 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 17:01:15.514 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 17:01:15.514 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 17:01:15.514 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:01:15.515 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1359899539 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1158747247)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@312362475 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@365135007 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1249789597 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1754201778 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@738648389)

[DEBUG] 2024-11-25 17:01:15.515 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:01:15.515 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 17:01:15.515 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 17:01:15.516 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 17:01:15.516 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 17:01:15.516 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 17:01:15.516 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 17:01:15.516 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 17:01:15.516 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 17:01:15.516 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1533234724
[DEBUG] 2024-11-25 17:01:15.516 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2064513681
[DEBUG] 2024-11-25 17:01:15.516 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2064513681
[DEBUG] 2024-11-25 17:01:15.516 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 17:01:15.516 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 17:01:15.516 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@642f8b7f
[DEBUG] 2024-11-25 17:01:15.516 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:01:15.516 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:01:15.517 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 17:01:15.517 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 17:01:15.517 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 17:01:15.518 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-25 17:01:15.518 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-25 17:01:15.518 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 17:01:15.518 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 17:01:15.518 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-25 17:01:15.521 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-25 17:01:15.523 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:01:15.523 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:01:15.523 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:01:15.523 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1041697470 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1158747247)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1898859288 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@184117961 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@667957103 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@563383249 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@738648389)

[DEBUG] 2024-11-25 17:01:15.523 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:01:15.524 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 17:01:15.524 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 17:01:15.524 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 17:01:15.524 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 17:01:15.524 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 17:01:15.524 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 17:01:15.524 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 17:01:15.524 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 17:01:15.525 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 647411335
[DEBUG] 2024-11-25 17:01:15.525 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@245652059
[DEBUG] 2024-11-25 17:01:15.525 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@245652059
[DEBUG] 2024-11-25 17:01:15.525 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-25 17:01:15.525 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 17:01:15.525 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@57f83c82
[DEBUG] 2024-11-25 17:01:15.525 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:01:15.525 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:01:15.674 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:01:15.674 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1384421718 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1158747247)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@179915314 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1881617971 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@526655415 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1776057124 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@738648389)

[DEBUG] 2024-11-25 17:01:15.675 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:01:15.676 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 17:01:15.676 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 17:01:15.676 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 17:01:15.676 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 17:01:15.677 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 17:01:15.677 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 17:01:15.677 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 17:01:15.677 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 17:01:15.677 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1348632704
[DEBUG] 2024-11-25 17:01:15.677 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@357767349
[DEBUG] 2024-11-25 17:01:15.677 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@357767349
[DEBUG] 2024-11-25 17:01:15.677 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 17:01:15.677 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 17:01:15.677 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1add90e0
[DEBUG] 2024-11-25 17:01:15.677 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:01:15.677 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:01:15.678 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:01:15.678 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@2079936145 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@1158747247)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1071364078 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@851478032 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1156336184 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1968179698 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@738648389)

[DEBUG] 2024-11-25 17:01:15.678 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:01:15.679 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 17:01:15.679 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 17:01:15.679 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 17:01:15.679 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 17:01:15.679 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 17:01:15.679 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 17:01:15.679 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 17:01:15.679 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 17:01:15.679 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 802062915
[DEBUG] 2024-11-25 17:01:15.679 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1392412640
[DEBUG] 2024-11-25 17:01:15.679 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1392412640
[DEBUG] 2024-11-25 17:01:15.679 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 17:01:15.679 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 17:01:15.679 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37393dab
[DEBUG] 2024-11-25 17:01:15.680 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:01:15.680 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:04:40.418 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-25 17:04:40.420 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-25 17:04:40.438 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-25 17:04:40.440 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-25 17:04:40.474 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-25 17:04:40.478 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-25 17:04:40.620 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-25 17:04:40.623 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-25 17:04:40.623 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-25 17:04:40.623 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 17:04:40.623 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-25 17:04:40.624 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-25 17:04:40.624 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-25 17:04:40.625 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-25 17:04:40.625 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 17:04:40.626 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-25 17:04:40.626 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-25 17:04:40.626 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-25 17:04:40.627 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-25 17:04:40.632 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-25 17:04:40.632 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-25 17:04:40.691 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 17:04:40.691 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 17:04:40.691 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-25 17:04:40.691 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 17:04:40.692 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-25 17:04:40.692 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 17:04:40.692 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-25 17:04:40.692 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 17:04:40.692 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-25 17:04:40.692 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 17:04:40.692 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 17:04:40.692 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-25 17:04:40.692 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 17:04:40.692 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 17:04:40.692 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-25 17:04:40.693 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 17:04:40.693 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-25 17:04:40.693 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-25 17:04:40.693 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 17:04:40.693 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-25 17:04:40.693 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-25 17:04:40.693 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-25 17:04:40.693 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 17:04:40.694 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 17:04:40.694 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-25 17:04:40.694 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 17:04:40.694 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 17:04:40.694 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-25 17:04:40.694 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 17:04:40.695 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 17:04:40.695 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-25 17:04:40.695 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 17:04:40.695 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 17:04:40.695 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-25 17:04:40.695 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 17:04:40.695 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 17:04:40.695 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-25 17:04:40.695 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 17:04:40.695 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-25 17:04:40.695 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 17:04:40.695 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-25 17:04:40.696 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 17:04:40.696 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 17:04:40.696 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-25 17:04:40.696 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-25 17:04:40.696 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 17:04:40.696 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-25 17:04:40.696 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-25 17:04:40.696 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 17:04:40.696 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 17:04:40.697 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-25 17:04:40.697 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-25 17:04:40.697 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-25 17:04:40.697 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-25 17:04:40.697 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 17:04:40.697 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-25 17:04:40.697 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 17:04:40.697 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-25 17:04:40.697 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-25 17:04:40.697 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-25 17:04:40.697 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-25 17:04:40.697 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-25 17:04:40.698 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-25 17:04:40.698 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-25 17:04:40.698 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 17:04:40.698 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-25 17:04:40.698 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 17:04:40.698 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-25 17:04:40.698 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 17:04:40.698 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-25 17:04:40.698 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 17:04:40.698 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-25 17:04:40.698 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 17:04:40.698 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-25 17:04:40.698 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-25 17:04:40.699 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-25 17:04:40.699 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 17:04:40.699 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-25 17:04:40.699 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-25 17:04:40.699 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-25 17:04:40.699 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-25 17:04:40.699 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 17:04:40.699 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-25 17:04:40.699 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-25 17:04:40.699 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-25 17:04:40.699 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 17:04:40.699 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-25 17:04:40.699 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 17:04:40.699 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-25 17:04:40.699 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 17:04:40.700 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 17:04:40.700 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-25 17:04:40.700 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 17:04:40.700 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 17:04:40.700 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-25 17:04:40.700 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-25 17:04:40.700 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-25 17:04:40.700 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 17:04:40.700 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-25 17:04:40.700 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 17:04:40.700 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 17:04:40.700 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-25 17:04:40.700 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-25 17:04:40.701 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-25 17:04:40.701 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 17:04:40.701 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-25 17:04:40.701 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 17:04:40.701 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 17:04:40.701 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-25 17:04:40.701 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 17:04:40.701 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-25 17:04:40.701 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 17:04:40.701 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-25 17:04:40.701 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 17:04:40.701 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-25 17:04:40.701 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 17:04:40.701 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-25 17:04:40.701 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-25 17:04:40.702 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-25 17:04:40.702 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-25 17:04:40.702 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-25 17:04:40.706 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-25 17:04:40.706 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-25 17:04:40.706 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@491f8831
[DEBUG] 2024-11-25 17:04:40.707 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@691541bc
[DEBUG] 2024-11-25 17:04:40.707 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b733ef7
[DEBUG] 2024-11-25 17:04:40.707 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43a4a9e5
[DEBUG] 2024-11-25 17:04:40.707 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@764fffa0
[DEBUG] 2024-11-25 17:04:40.707 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35145874
[DEBUG] 2024-11-25 17:04:40.707 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77524ca7
[DEBUG] 2024-11-25 17:04:40.707 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11df2829
[DEBUG] 2024-11-25 17:04:40.707 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18e4674d
[INFO ] 2024-11-25 17:04:40.726 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-25 17:04:40.726 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-25 17:04:40.726 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-25 17:04:40.796 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-25 17:04:40.852 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-25 17:04:40.852 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-25 17:04:40.852 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-25 17:04:40.879 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-25 17:04:40.880 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-25 17:04:40.893 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-25 17:04:40.893 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-25 17:04:40.903 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eaf8427) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c)
[DEBUG] 2024-11-25 17:04:40.903 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d6039df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae)
[DEBUG] 2024-11-25 17:04:40.903 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e00016) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3cbe6e)
[DEBUG] 2024-11-25 17:04:40.903 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@177ede17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17176b18)
[DEBUG] 2024-11-25 17:04:40.903 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e4395c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab53860)
[DEBUG] 2024-11-25 17:04:40.903 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5ac347) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b9389f)
[DEBUG] 2024-11-25 17:04:40.903 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b2c5ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41f785e3)
[DEBUG] 2024-11-25 17:04:40.903 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9a3661) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727986ad)
[DEBUG] 2024-11-25 17:04:40.904 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1600a8a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b25ef1c)
[DEBUG] 2024-11-25 17:04:40.904 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-25 17:04:40.904 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-25 17:04:40.905 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-25 17:04:40.906 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 17:04:40.906 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-25 17:04:40.908 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@383cdd4d
[DEBUG] 2024-11-25 17:04:40.908 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@491f8831`
[DEBUG] 2024-11-25 17:04:40.912 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 17:04:40.912 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 17:04:40.912 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-25 17:04:40.914 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 17:04:40.914 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 17:04:40.914 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-25 17:04:40.914 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 17:04:40.914 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 17:04:40.914 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-25 17:04:40.915 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 17:04:40.915 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 17:04:40.915 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-25 17:04:40.916 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71369e1a]
[DEBUG] 2024-11-25 17:04:40.939 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-25 17:04:40.956 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-25 17:04:40.961 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-25 17:04:40.966 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-25 17:04:40.973 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 17:04:40.986 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:04:40.987 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 17:04:40.987 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 17:04:40.989 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 17:04:40.991 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-25 17:04:40.994 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 17:04:40.997 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-25 17:04:40.997 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 17:04:41.000 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 17:04:41.005 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 17:04:41.005 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:04:41.012 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-25 17:04:41.014 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:04:41.014 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 17:04:41.015 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-25 17:04:41.015 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 17:04:41.016 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 17:04:41.017 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 17:04:41.019 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-25 17:04:41.019 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-25 17:04:41.019 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-25 17:04:41.019 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-25 17:04:41.020 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-25 17:04:41.020 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-25 17:04:41.020 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-25 17:04:41.020 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 17:04:41.023 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-25 17:04:41.023 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-25 17:04:41.023 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-25 17:04:41.024 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 17:04:41.024 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:04:41.024 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 17:04:41.024 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 17:04:41.024 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 17:04:41.025 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-25 17:04:41.025 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 17:04:41.025 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-25 17:04:41.025 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 17:04:41.025 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 17:04:41.025 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-25 17:04:41.025 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-25 17:04:41.025 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-25 17:04:41.025 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-25 17:04:41.025 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-25 17:04:41.025 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-25 17:04:41.025 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 17:04:41.026 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:04:41.026 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-25 17:04:41.026 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:04:41.026 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-25 17:04:41.026 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-25 17:04:41.026 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 17:04:41.027 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-25 17:04:41.027 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 17:04:41.027 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-25 17:04:41.027 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 17:04:41.027 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-25 17:04:41.028 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-25 17:04:41.028 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-25 17:04:41.028 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-25 17:04:41.031 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:04:41.031 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 17:04:41.031 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 17:04:41.031 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-25 17:04:41.031 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-25 17:04:41.031 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-25 17:04:41.031 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-25 17:04:41.031 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-25 17:04:41.032 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-25 17:04:41.032 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-25 17:04:41.032 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:04:41.034 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-25 17:04:41.034 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-25 17:04:41.034 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-25 17:04:41.034 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-25 17:04:41.034 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-25 17:04:41.034 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-25 17:04:41.034 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-25 17:04:41.035 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-25 17:04:41.035 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-25 17:04:41.035 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-25 17:04:41.035 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-25 17:04:41.036 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 17:04:41.036 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-25 17:04:41.037 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 17:04:41.037 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-25 17:04:41.037 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-25 17:04:41.037 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-25 17:04:41.040 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-25 17:04:41.041 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-25 17:04:41.041 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-25 17:04:41.041 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 17:04:41.042 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-25 17:04:41.043 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-25 17:04:41.044 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-25 17:04:41.044 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 17:04:41.044 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 17:04:41.044 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-25 17:04:41.045 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-25 17:04:41.045 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-25 17:04:41.045 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-25 17:04:41.045 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 17:04:41.045 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 17:04:41.052 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-25 17:04:41.052 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-25 17:04:41.178 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-25 17:04:41.206 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 17:04:41.206 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter5303000297972234995.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire16838168207057556086tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_014779224341967844503tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter5303000297972234995.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d7d8911, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-25 17:04:41.210 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-25 17:04:41.214 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 17:04:41.245 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-25 17:04:41.245 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-25 17:04:41.246 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-25 17:04:41.246 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-25 17:04:41.247 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@347b370c] under count; prior registration was null
[DEBUG] 2024-11-25 17:04:41.248 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@72a33316] under every; prior registration was null
[DEBUG] 2024-11-25 17:04:41.248 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@57fce8b] under any; prior registration was null
[DEBUG] 2024-11-25 17:04:41.248 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-25 17:04:41.248 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-25 17:04:41.249 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-25 17:04:41.249 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-25 17:04:41.249 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-25 17:04:41.249 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-25 17:04:41.249 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-25 17:04:41.249 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-25 17:04:41.249 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-25 17:04:41.249 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-25 17:04:41.249 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-25 17:04:41.249 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-25 17:04:41.250 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-25 17:04:41.250 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-25 17:04:41.250 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-25 17:04:41.250 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-25 17:04:41.250 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-25 17:04:41.251 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56f2c9e8] under sinh; prior registration was null
[DEBUG] 2024-11-25 17:04:41.251 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@457692cb] under cosh; prior registration was null
[DEBUG] 2024-11-25 17:04:41.251 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350342e0] under tanh; prior registration was null
[DEBUG] 2024-11-25 17:04:41.251 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d] under pi; prior registration was null
[DEBUG] 2024-11-25 17:04:41.251 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289] under log; prior registration was null
[DEBUG] 2024-11-25 17:04:41.252 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-25 17:04:41.252 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-25 17:04:41.252 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-25 17:04:41.252 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-25 17:04:41.252 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-25 17:04:41.252 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-25 17:04:41.252 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-25 17:04:41.252 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-25 17:04:41.252 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-25 17:04:41.252 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-25 17:04:41.253 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-25 17:04:41.253 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-25 17:04:41.253 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a] under position; prior registration was null
[DEBUG] 2024-11-25 17:04:41.255 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6fa2a006] under overlay; prior registration was null
[DEBUG] 2024-11-25 17:04:41.255 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@39695803] under trim; prior registration was null
[DEBUG] 2024-11-25 17:04:41.255 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@57b711b6] under cast; prior registration was null
[DEBUG] 2024-11-25 17:04:41.256 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2db461b5] under collate; prior registration was null
[DEBUG] 2024-11-25 17:04:41.256 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@55881f40] under extract; prior registration was null
[DEBUG] 2024-11-25 17:04:41.256 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-25 17:04:41.257 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-25 17:04:41.257 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11d1735e] under ifnull; prior registration was null
[DEBUG] 2024-11-25 17:04:41.257 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-25 17:04:41.257 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-25 17:04:41.258 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6282f1eb] under pad; prior registration was null
[DEBUG] 2024-11-25 17:04:41.258 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@64ed18ec] under str; prior registration was null
[DEBUG] 2024-11-25 17:04:41.259 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@25589735] under format; prior registration was null
[DEBUG] 2024-11-25 17:04:41.259 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7dddfc35] under timestampadd; prior registration was null
[DEBUG] 2024-11-25 17:04:41.260 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2336cd91] under timestampdiff; prior registration was null
[DEBUG] 2024-11-25 17:04:41.260 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-25 17:04:41.260 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-25 17:04:41.260 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c1e40d9] under current_date; prior registration was null
[DEBUG] 2024-11-25 17:04:41.260 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b50c21] under current_time; prior registration was null
[DEBUG] 2024-11-25 17:04:41.260 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e0fdc83] under current_timestamp; prior registration was null
[DEBUG] 2024-11-25 17:04:41.260 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-25 17:04:41.261 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-25 17:04:41.261 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-25 17:04:41.261 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5dacf18d] under local_date; prior registration was null
[DEBUG] 2024-11-25 17:04:41.261 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@432a6a69] under local_time; prior registration was null
[DEBUG] 2024-11-25 17:04:41.261 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f52a229] under local_datetime; prior registration was null
[DEBUG] 2024-11-25 17:04:41.261 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fe98084] under offset_datetime; prior registration was null
[DEBUG] 2024-11-25 17:04:41.261 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-25 17:04:41.261 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-25 17:04:41.261 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-25 17:04:41.261 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-25 17:04:41.261 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f33e6d] under instant; prior registration was null
[DEBUG] 2024-11-25 17:04:41.261 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-25 17:04:41.261 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a1cb94] under sql; prior registration was null
[DEBUG] 2024-11-25 17:04:41.262 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-25 17:04:41.262 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-25 17:04:41.262 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-25 17:04:41.262 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-25 17:04:41.262 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289
[DEBUG] 2024-11-25 17:04:41.262 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-25 17:04:41.262 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-25 17:04:41.262 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-25 17:04:41.262 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-25 17:04:41.262 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-25 17:04:41.262 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-25 17:04:41.263 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-25 17:04:41.263 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-25 17:04:41.263 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@49bb808f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-25 17:04:41.263 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@563ada5] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-25 17:04:41.263 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-25 17:04:41.263 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-25 17:04:41.263 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-25 17:04:41.263 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-25 17:04:41.263 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-25 17:04:41.263 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-25 17:04:41.264 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-25 17:04:41.265 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-25 17:04:41.265 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-25 17:04:41.265 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-25 17:04:41.265 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-25 17:04:41.265 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-25 17:04:41.265 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-25 17:04:41.265 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-25 17:04:41.265 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-25 17:04:41.265 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-25 17:04:41.265 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-25 17:04:41.265 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-25 17:04:41.265 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12548f9a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a
[DEBUG] 2024-11-25 17:04:41.265 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-25 17:04:41.265 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-25 17:04:41.265 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-25 17:04:41.268 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2838eb] under trunc; prior registration was null
[DEBUG] 2024-11-25 17:04:41.268 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-25 17:04:41.268 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-25 17:04:41.268 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb5d334] under bitand; prior registration was null
[DEBUG] 2024-11-25 17:04:41.268 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45dc7be] under bitor; prior registration was null
[DEBUG] 2024-11-25 17:04:41.268 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under bitxor; prior registration was null
[DEBUG] 2024-11-25 17:04:41.268 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under bitnot; prior registration was null
[DEBUG] 2024-11-25 17:04:41.268 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4d664323] under format; prior registration was org.hibernate.dialect.function.FormatFunction@25589735
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@432a6a69
[DEBUG] 2024-11-25 17:04:41.269 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f52a229
[DEBUG] 2024-11-25 17:04:41.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-25 17:04:41.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ec0d06] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d
[DEBUG] 2024-11-25 17:04:41.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2676d96a] under chr; prior registration was null
[DEBUG] 2024-11-25 17:04:41.270 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-25 17:04:41.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under sysdate; prior registration was null
[DEBUG] 2024-11-25 17:04:41.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-25 17:04:41.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-25 17:04:41.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-25 17:04:41.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-25 17:04:41.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-25 17:04:41.270 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-25 17:04:41.271 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@77a9ac36] under rank; prior registration was null
[DEBUG] 2024-11-25 17:04:41.271 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3c743d40] under dense_rank; prior registration was null
[DEBUG] 2024-11-25 17:04:41.271 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5aac6f9f] under percent_rank; prior registration was null
[DEBUG] 2024-11-25 17:04:41.271 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2444c3df] under cume_dist; prior registration was null
[DEBUG] 2024-11-25 17:04:41.271 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@38848217] under listagg; prior registration was null
[DEBUG] 2024-11-25 17:04:41.274 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.274 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.274 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 17:04:41.274 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 17:04:41.274 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-25 17:04:41.274 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-25 17:04:41.275 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-25 17:04:41.276 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-25 17:04:41.277 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.278 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-25 17:04:41.279 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-25 17:04:41.280 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-25 17:04:41.280 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-25 17:04:41.280 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-25 17:04:41.280 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-25 17:04:41.280 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.280 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.280 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-25 17:04:41.280 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-25 17:04:41.280 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-25 17:04:41.283 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-25 17:04:41.380 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-25 17:04:41.381 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-25 17:04:41.468 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 17:04:41.471 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 17:04:41.473 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 17:04:41.473 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 17:04:41.474 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-25 17:04:41.474 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-25 17:04:41.594 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-25 17:04:41.598 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 17:04:41.598 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-25 17:04:41.624 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-25 17:04:41.624 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-25 17:04:41.637 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-25 17:04:41.637 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-25 17:04:41.637 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-25 17:04:41.645 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-25 17:04:41.657 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 17:04:41.657 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 17:04:41.658 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 17:04:41.658 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 17:04:41.658 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 17:04:41.658 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 17:04:41.678 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-25 17:04:41.678 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-25 17:04:41.680 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-25 17:04:41.680 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-25 17:04:41.680 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 17:04:41.680 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-25 17:04:41.681 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-25 17:04:41.681 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-25 17:04:41.681 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 17:04:41.681 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-25 17:04:41.681 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-25 17:04:41.681 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-25 17:04:41.681 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-25 17:04:41.681 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-25 17:04:41.732 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 17:04:41.734 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-25 17:04:41.740 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d01ea33] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-25 17:04:41.741 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 17:04:41.744 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c3fcbe7] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-25 17:04:41.744 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 17:04:41.748 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-25 17:04:41.755 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 17:04:41.761 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-25 17:04:41.762 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-25 17:04:41.762 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 17:04:41.762 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-25 17:04:41.762 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-25 17:04:41.762 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 17:04:41.762 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 17:04:41.762 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 17:04:41.763 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3ae87e38] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 17:04:41.764 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 17:04:41.769 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e9cb95] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 17:04:41.769 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 17:04:41.770 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 17:04:41.770 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 17:04:41.770 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-25 17:04:41.770 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-25 17:04:41.770 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-25 17:04:41.770 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-25 17:04:41.770 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-25 17:04:41.770 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 17:04:41.770 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-25 17:04:41.770 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 17:04:41.770 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@21a0795f] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 17:04:41.770 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 17:04:41.771 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2ec156fb] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 17:04:41.771 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 17:04:41.771 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-25 17:04:41.771 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 17:04:41.771 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-25 17:04:41.771 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-25 17:04:41.771 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-25 17:04:41.771 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-25 17:04:41.771 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-25 17:04:41.772 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-25 17:04:41.772 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1bf52f10] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-25 17:04:41.772 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-25 17:04:41.772 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@301e5d23] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-25 17:04:41.772 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 17:04:41.773 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74787609] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-25 17:04:41.774 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-25 17:04:41.774 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 17:04:41.774 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-25 17:04:41.774 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 17:04:41.774 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@355b53cc] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 17:04:41.774 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 17:04:41.774 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2568611c] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-25 17:04:41.774 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bda7a5b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 17:04:41.774 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 17:04:41.775 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-25 17:04:41.775 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 17:04:41.775 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-25 17:04:41.794 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-25 17:04:41.794 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-25 17:04:41.797 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-25 17:04:41.797 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-25 17:04:41.798 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@121dac1a]
[DEBUG] 2024-11-25 17:04:41.798 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-25 17:04:41.799 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-25 17:04:41.799 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-25 17:04:41.799 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-25 17:04:41.800 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3acc65f0
[DEBUG] 2024-11-25 17:04:41.800 [main] SessionFactoryRegistry - Registering SessionFactory: 1308edb1-ec86-4800-b205-848e06aa6a2d (<unnamed>)
[DEBUG] 2024-11-25 17:04:41.800 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-25 17:04:41.800 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-25 17:04:41.825 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-25 17:04:41.836 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:04:41.849 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@656020492 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@609630217 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1104693947 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@636370090 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1072476278 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-25 17:04:41.853 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 17:04:41.866 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:04:41.868 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:04:41.868 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@638978471 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@959016175 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@2113710566 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@125246542 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@289039926 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-25 17:04:41.868 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-25 17:04:41.869 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:04:41.934 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:04:41.935 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1859633528 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1533375298 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@363003357 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1160651280 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@415297573 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 17:04:41.935 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:04:41.937 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 17:04:41.937 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 17:04:41.938 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 17:04:41.938 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 17:04:41.938 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 17:04:41.938 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 17:04:41.939 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 17:04:41.939 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 17:04:41.939 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 663512999
[DEBUG] 2024-11-25 17:04:41.943 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-25 17:04:41.944 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-25 17:04:41.945 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 17:04:41.947 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 17:04:41.947 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20e3b165
[DEBUG] 2024-11-25 17:04:41.949 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:04:41.949 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:04:41.951 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 17:04:41.951 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 17:04:41.957 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 17:04:41.958 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 17:04:41.958 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 17:04:41.960 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:04:41.962 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-25 17:04:41.962 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-25 17:04:41.963 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 17:04:41.963 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-25 17:04:41.969 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-25 17:04:41.972 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:04:41.972 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:04:41.973 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:04:41.973 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1456923361 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1318491599 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1139305484 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@208427214 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1833726536 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 17:04:41.973 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:04:41.974 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:04:42.037 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 17:04:42.037 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 17:04:42.039 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 17:04:42.040 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-25 17:04:42.044 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-25 17:04:42.044 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 17:04:42.045 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 17:04:42.047 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-25 17:04:42.047 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-25 17:04:42.048 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-25 17:04:42.049 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-25 17:04:42.049 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-25 17:04:42.049 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 17:04:42.049 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 17:04:42.049 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 17:04:42.049 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-25 17:04:42.050 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-25 17:04:42.050 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 17:04:42.050 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 17:04:42.050 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-25 17:04:42.050 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-25 17:04:42.052 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:04:42.052 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:04:42.053 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:04:42.053 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@408648902 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@546552684 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1384781563 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@913564177 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1972176213 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 17:04:42.053 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:04:42.054 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 17:04:42.054 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 17:04:42.054 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-25 17:04:42.054 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-25 17:04:42.054 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-25 17:04:42.054 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-25 17:04:42.055 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-25 17:04:42.055 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-25 17:04:42.055 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 196316233
[DEBUG] 2024-11-25 17:04:42.055 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 345518693
[DEBUG] 2024-11-25 17:04:42.055 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-25 17:04:42.055 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-25 17:04:42.055 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-25 17:04:42.055 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-25 17:04:42.055 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-25 17:04:42.055 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-25 17:04:42.056 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-25 17:04:42.056 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6055e899
[DEBUG] 2024-11-25 17:04:42.056 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-25 17:04:42.056 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:04:42.127 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:04:42.127 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1415884524 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@456824281 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1911830487 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1367787521 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@551821075 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 17:04:42.127 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:04:42.129 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 17:04:42.129 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 17:04:42.129 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 17:04:42.129 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 17:04:42.129 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 17:04:42.129 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 17:04:42.129 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 17:04:42.129 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 17:04:42.129 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 644195047
[DEBUG] 2024-11-25 17:04:42.129 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@985514269
[DEBUG] 2024-11-25 17:04:42.129 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@985514269
[DEBUG] 2024-11-25 17:04:42.129 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 17:04:42.129 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 17:04:42.129 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@624be1d4
[DEBUG] 2024-11-25 17:04:42.130 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:04:42.130 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:04:42.130 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-25 17:04:42.130 [main] TransactionImpl - begin
[DEBUG] 2024-11-25 17:04:42.132 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-25 17:04:42.132 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-25 17:04:42.132 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-25 17:04:42.132 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5b634e24] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-25 17:04:42.132 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-25 17:04:42.132 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7b0dfa91] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-25 17:04:42.132 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-25 17:04:42.132 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-25 17:04:42.132 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-25 17:04:42.133 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:04:42.133 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@857865061 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1920110923 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1715414246 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@2119380781 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1108674897 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 17:04:42.133 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:04:42.134 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 17:04:42.134 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 17:04:42.134 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 17:04:42.134 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 17:04:42.134 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 17:04:42.134 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 17:04:42.134 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 17:04:42.134 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 17:04:42.134 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 286772348
[DEBUG] 2024-11-25 17:04:42.134 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1201078845
[DEBUG] 2024-11-25 17:04:42.134 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1201078845
[DEBUG] 2024-11-25 17:04:42.134 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 17:04:42.134 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 17:04:42.134 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55cc4c61
[DEBUG] 2024-11-25 17:04:42.134 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:04:42.134 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:04:42.135 [main] TransactionImpl - committing
[DEBUG] 2024-11-25 17:04:42.135 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-25 17:04:42.135 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-25 17:04:42.135 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-25 17:04:42.136 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-25 17:04:42.136 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-25 17:04:42.136 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-25 17:04:42.136 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-25 17:04:42.138 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-25 17:04:42.139 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:04:42.140 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:04:42.140 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:04:42.140 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1475886210 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2053115425 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1775349092 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1166754951 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1392602264 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 17:04:42.140 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:04:42.141 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 17:04:42.141 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 17:04:42.141 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 17:04:42.141 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 17:04:42.141 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 17:04:42.141 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 17:04:42.141 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 17:04:42.141 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 17:04:42.141 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1776057124
[DEBUG] 2024-11-25 17:04:42.142 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@695489783
[DEBUG] 2024-11-25 17:04:42.142 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@695489783
[DEBUG] 2024-11-25 17:04:42.142 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-25 17:04:42.142 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 17:04:42.142 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@602b7944
[DEBUG] 2024-11-25 17:04:42.142 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:04:42.142 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:04:42.269 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:04:42.270 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@450728160 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2079936145 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1071364078 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@851478032 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1156336184 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 17:04:42.270 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:04:42.271 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 17:04:42.271 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 17:04:42.272 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 17:04:42.272 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 17:04:42.272 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 17:04:42.272 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 17:04:42.272 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 17:04:42.272 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 17:04:42.272 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1937867829
[DEBUG] 2024-11-25 17:04:42.272 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@802062915
[DEBUG] 2024-11-25 17:04:42.272 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@802062915
[DEBUG] 2024-11-25 17:04:42.272 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 17:04:42.272 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 17:04:42.272 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52fe87e0
[DEBUG] 2024-11-25 17:04:42.272 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:04:42.272 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-25 17:04:42.273 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-25 17:04:42.273 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@926498219 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1214687061 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@325183616 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@889633931 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1269566437 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-25 17:04:42.273 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-25 17:04:42.274 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-25 17:04:42.274 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-25 17:04:42.274 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-25 17:04:42.274 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-25 17:04:42.274 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-25 17:04:42.274 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-25 17:04:42.274 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-25 17:04:42.274 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-25 17:04:42.274 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1295679363
[DEBUG] 2024-11-25 17:04:42.274 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1050768030
[DEBUG] 2024-11-25 17:04:42.274 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1050768030
[DEBUG] 2024-11-25 17:04:42.275 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-25 17:04:42.275 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-25 17:04:42.275 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6956eb58
[DEBUG] 2024-11-25 17:04:42.275 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-25 17:04:42.275 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
