[DEBUG] 2024-11-26 11:24:36.266 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 11:24:36.276 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-26 11:24:36.307 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-26 11:24:36.308 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-26 11:24:36.358 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-26 11:24:36.363 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-26 11:24:36.536 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-26 11:24:36.539 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-26 11:24:36.540 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-26 11:24:36.540 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-26 11:24:36.540 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-26 11:24:36.541 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-26 11:24:36.541 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-26 11:24:36.542 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-26 11:24:36.543 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-26 11:24:36.543 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-26 11:24:36.544 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-26 11:24:36.544 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-26 11:24:36.544 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-26 11:24:36.553 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-26 11:24:36.553 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-26 11:24:36.652 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 11:24:36.652 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 11:24:36.652 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 11:24:36.652 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-26 11:24:36.652 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-26 11:24:36.652 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-26 11:24:36.652 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-26 11:24:36.652 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-26 11:24:36.652 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-26 11:24:36.652 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-26 11:24:36.653 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-26 11:24:36.653 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-26 11:24:36.653 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-26 11:24:36.653 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-26 11:24:36.653 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-26 11:24:36.653 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-26 11:24:36.653 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-26 11:24:36.653 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-26 11:24:36.653 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-26 11:24:36.653 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-26 11:24:36.653 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-26 11:24:36.653 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-26 11:24:36.653 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-26 11:24:36.654 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-26 11:24:36.654 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-26 11:24:36.654 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-26 11:24:36.654 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-26 11:24:36.654 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-26 11:24:36.654 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-26 11:24:36.654 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-26 11:24:36.654 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-26 11:24:36.654 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-26 11:24:36.654 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-26 11:24:36.654 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-26 11:24:36.654 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-26 11:24:36.655 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-26 11:24:36.655 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-26 11:24:36.655 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-26 11:24:36.655 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-26 11:24:36.655 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-26 11:24:36.655 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-26 11:24:36.655 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-26 11:24:36.655 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-26 11:24:36.655 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-26 11:24:36.655 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-26 11:24:36.655 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-26 11:24:36.655 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-26 11:24:36.655 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-26 11:24:36.656 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-26 11:24:36.656 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-26 11:24:36.656 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-26 11:24:36.656 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-26 11:24:36.656 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-26 11:24:36.656 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-26 11:24:36.656 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-26 11:24:36.656 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-26 11:24:36.656 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-26 11:24:36.656 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-26 11:24:36.656 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 11:24:36.656 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 11:24:36.657 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-26 11:24:36.657 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-26 11:24:36.657 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-26 11:24:36.657 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 11:24:36.657 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-26 11:24:36.657 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-26 11:24:36.657 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-26 11:24:36.657 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-26 11:24:36.657 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-26 11:24:36.657 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-26 11:24:36.657 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 11:24:36.657 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 11:24:36.657 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-26 11:24:36.658 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-26 11:24:36.658 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-26 11:24:36.658 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-26 11:24:36.658 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-26 11:24:36.658 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-26 11:24:36.658 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-26 11:24:36.658 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-26 11:24:36.658 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-26 11:24:36.658 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@12fcb2c3
[DEBUG] 2024-11-26 11:24:36.658 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@12fcb2c3
[DEBUG] 2024-11-26 11:24:36.658 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57bd6a8f
[DEBUG] 2024-11-26 11:24:36.658 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@39ab5ef7
[DEBUG] 2024-11-26 11:24:36.658 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@517704
[DEBUG] 2024-11-26 11:24:36.658 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@517704
[DEBUG] 2024-11-26 11:24:36.659 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@77cca767
[DEBUG] 2024-11-26 11:24:36.659 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@77cca767
[DEBUG] 2024-11-26 11:24:36.659 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4b195203
[DEBUG] 2024-11-26 11:24:36.659 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4b195203
[DEBUG] 2024-11-26 11:24:36.659 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4b195203
[DEBUG] 2024-11-26 11:24:36.659 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@28a6e171
[DEBUG] 2024-11-26 11:24:36.659 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@28a6e171
[DEBUG] 2024-11-26 11:24:36.659 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@28a6e171
[DEBUG] 2024-11-26 11:24:36.659 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@23444a36
[DEBUG] 2024-11-26 11:24:36.659 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@31a136a6
[DEBUG] 2024-11-26 11:24:36.659 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@30a9e3db
[DEBUG] 2024-11-26 11:24:36.659 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@30a9e3db
[DEBUG] 2024-11-26 11:24:36.659 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2f9b21d6
[DEBUG] 2024-11-26 11:24:36.660 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2f9b21d6
[DEBUG] 2024-11-26 11:24:36.660 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2f9b21d6
[DEBUG] 2024-11-26 11:24:36.660 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2e0fdbe9
[DEBUG] 2024-11-26 11:24:36.660 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@16a3cc88
[DEBUG] 2024-11-26 11:24:36.660 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@696b52bc
[DEBUG] 2024-11-26 11:24:36.660 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@696b52bc
[DEBUG] 2024-11-26 11:24:36.660 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1f884bd6
[DEBUG] 2024-11-26 11:24:36.660 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1f884bd6
[DEBUG] 2024-11-26 11:24:36.660 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1f884bd6
[DEBUG] 2024-11-26 11:24:36.660 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4f081b5d
[DEBUG] 2024-11-26 11:24:36.660 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4f081b5d
[DEBUG] 2024-11-26 11:24:36.660 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@474749b8
[DEBUG] 2024-11-26 11:24:36.660 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@474749b8
[DEBUG] 2024-11-26 11:24:36.661 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@740a0d5e
[DEBUG] 2024-11-26 11:24:36.661 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@740a0d5e
[DEBUG] 2024-11-26 11:24:36.661 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@29013ef2
[DEBUG] 2024-11-26 11:24:36.661 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@29013ef2
[DEBUG] 2024-11-26 11:24:36.661 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@265c1a7c
[DEBUG] 2024-11-26 11:24:36.661 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@265c1a7c
[DEBUG] 2024-11-26 11:24:36.661 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5b2b8d86
[DEBUG] 2024-11-26 11:24:36.661 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7fef0b40
[DEBUG] 2024-11-26 11:24:36.666 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@280fafd
[DEBUG] 2024-11-26 11:24:36.666 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@280fafd
[DEBUG] 2024-11-26 11:24:36.667 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@626b639e
[DEBUG] 2024-11-26 11:24:36.667 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@273fa9e
[DEBUG] 2024-11-26 11:24:36.667 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@527a8665
[DEBUG] 2024-11-26 11:24:36.668 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7ab2a07e
[DEBUG] 2024-11-26 11:24:36.668 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@437c4b25
[DEBUG] 2024-11-26 11:24:36.668 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5ec6fede
[DEBUG] 2024-11-26 11:24:36.668 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@580902cd
[DEBUG] 2024-11-26 11:24:36.668 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3757e8e2
[DEBUG] 2024-11-26 11:24:36.668 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1653b84e
[INFO ] 2024-11-26 11:24:36.697 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-26 11:24:36.697 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-26 11:24:36.697 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-26 11:24:36.787 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-26 11:24:36.851 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-26 11:24:36.852 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-26 11:24:36.852 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-26 11:24:36.888 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-26 11:24:36.888 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-26 11:24:36.895 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-26 11:24:36.895 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-26 11:24:36.908 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@664db2ca) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1491cd6c)
[DEBUG] 2024-11-26 11:24:36.908 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@423f8a73) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1aedf08d)
[DEBUG] 2024-11-26 11:24:36.908 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@113dcaf8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b5d9f1e)
[DEBUG] 2024-11-26 11:24:36.908 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@350ff014) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@401317a0)
[DEBUG] 2024-11-26 11:24:36.908 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f866f50) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5844a2d1)
[DEBUG] 2024-11-26 11:24:36.908 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1201769d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4af7dd6a)
[DEBUG] 2024-11-26 11:24:36.908 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4607d78b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b28b7b0)
[DEBUG] 2024-11-26 11:24:36.909 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22048bd6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@566c1e71)
[DEBUG] 2024-11-26 11:24:36.909 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e2f20b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@504497fa)
[DEBUG] 2024-11-26 11:24:36.910 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-26 11:24:36.910 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-26 11:24:36.911 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-26 11:24:36.912 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-26 11:24:36.912 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-26 11:24:36.915 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4df7d9ee
[DEBUG] 2024-11-26 11:24:36.915 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@626b639e`
[DEBUG] 2024-11-26 11:24:36.920 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 11:24:36.920 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 11:24:36.920 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 11:24:36.923 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 11:24:36.923 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 11:24:36.923 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 11:24:36.923 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 11:24:36.923 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 11:24:36.924 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 11:24:36.924 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 11:24:36.924 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 11:24:36.924 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 11:24:36.925 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6fb0261e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@d6b532f]
[DEBUG] 2024-11-26 11:24:36.970 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-26 11:24:36.996 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-26 11:24:37.005 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-26 11:24:37.011 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-26 11:24:37.020 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 11:24:37.037 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:24:37.037 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-26 11:24:37.037 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-26 11:24:37.040 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 11:24:37.043 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-26 11:24:37.046 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 11:24:37.049 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-26 11:24:37.050 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 11:24:37.053 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 11:24:37.059 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:24:37.059 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:24:37.069 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-26 11:24:37.070 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:24:37.071 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-26 11:24:37.071 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-26 11:24:37.072 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:24:37.072 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:24:37.075 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:24:37.077 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-26 11:24:37.077 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-26 11:24:37.077 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-26 11:24:37.077 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-26 11:24:37.078 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-26 11:24:37.078 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-26 11:24:37.078 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-26 11:24:37.078 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 11:24:37.083 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-26 11:24:37.083 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-26 11:24:37.083 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-26 11:24:37.083 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 11:24:37.084 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:24:37.084 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-26 11:24:37.084 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-26 11:24:37.085 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 11:24:37.085 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-26 11:24:37.085 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 11:24:37.085 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-26 11:24:37.085 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 11:24:37.085 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 11:24:37.085 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-26 11:24:37.085 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-26 11:24:37.085 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-26 11:24:37.085 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-26 11:24:37.085 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-26 11:24:37.086 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-26 11:24:37.086 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:24:37.086 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:24:37.086 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-26 11:24:37.086 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:24:37.087 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-26 11:24:37.087 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-26 11:24:37.087 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:24:37.087 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:24:37.087 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:24:37.087 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-26 11:24:37.087 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 11:24:37.088 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-26 11:24:37.088 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-26 11:24:37.088 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-26 11:24:37.089 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 11:24:37.091 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:24:37.091 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-26 11:24:37.092 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-26 11:24:37.092 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 11:24:37.092 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-26 11:24:37.092 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 11:24:37.092 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-26 11:24:37.092 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 11:24:37.092 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 11:24:37.092 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-26 11:24:37.093 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:24:37.095 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-26 11:24:37.095 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-26 11:24:37.095 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-26 11:24:37.095 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-26 11:24:37.095 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-26 11:24:37.095 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-26 11:24:37.096 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-26 11:24:37.096 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-26 11:24:37.096 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:24:37.096 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-26 11:24:37.096 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 11:24:37.097 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 11:24:37.097 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-26 11:24:37.098 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 11:24:37.098 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-26 11:24:37.098 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 11:24:37.098 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-26 11:24:37.102 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-26 11:24:37.102 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-26 11:24:37.102 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-26 11:24:37.102 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:24:37.104 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-26 11:24:37.105 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-26 11:24:37.106 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-26 11:24:37.106 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-26 11:24:37.106 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:24:37.106 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-26 11:24:37.107 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-26 11:24:37.107 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-26 11:24:37.107 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-26 11:24:37.107 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-26 11:24:37.107 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-26 11:24:37.114 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-26 11:24:37.115 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-26 11:24:37.296 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-26 11:24:37.334 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-26 11:24:37.334 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter2968451402955203660.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire8305482711471940030tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_012601571401100098419tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter2968451402955203660.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@35454c7a, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-26 11:24:37.339 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-26 11:24:37.344 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-26 11:24:37.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-26 11:24:37.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-26 11:24:37.389 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-26 11:24:37.390 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-26 11:24:37.391 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2619cb76] under count; prior registration was null
[DEBUG] 2024-11-26 11:24:37.392 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@552bee2f] under every; prior registration was null
[DEBUG] 2024-11-26 11:24:37.392 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6a543e09] under any; prior registration was null
[DEBUG] 2024-11-26 11:24:37.392 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-26 11:24:37.392 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-26 11:24:37.392 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-26 11:24:37.392 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-26 11:24:37.392 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-26 11:24:37.392 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-26 11:24:37.392 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-26 11:24:37.392 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-26 11:24:37.393 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-26 11:24:37.393 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-26 11:24:37.393 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-26 11:24:37.393 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-26 11:24:37.393 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-26 11:24:37.393 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-26 11:24:37.393 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-26 11:24:37.393 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-26 11:24:37.393 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-26 11:24:37.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fa2a006] under sinh; prior registration was null
[DEBUG] 2024-11-26 11:24:37.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70592729] under cosh; prior registration was null
[DEBUG] 2024-11-26 11:24:37.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fdf7da2] under tanh; prior registration was null
[DEBUG] 2024-11-26 11:24:37.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43b172e3] under pi; prior registration was null
[DEBUG] 2024-11-26 11:24:37.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@39695803] under log; prior registration was null
[DEBUG] 2024-11-26 11:24:37.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-26 11:24:37.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-26 11:24:37.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-26 11:24:37.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-26 11:24:37.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-26 11:24:37.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-26 11:24:37.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-26 11:24:37.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-26 11:24:37.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-26 11:24:37.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-26 11:24:37.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-26 11:24:37.396 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-26 11:24:37.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@34eaf9c1] under position; prior registration was null
[DEBUG] 2024-11-26 11:24:37.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6282f1eb] under overlay; prior registration was null
[DEBUG] 2024-11-26 11:24:37.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@64ed18ec] under trim; prior registration was null
[DEBUG] 2024-11-26 11:24:37.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@46994f26] under cast; prior registration was null
[DEBUG] 2024-11-26 11:24:37.400 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bb172dd] under collate; prior registration was null
[DEBUG] 2024-11-26 11:24:37.401 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6106dfb6] under extract; prior registration was null
[DEBUG] 2024-11-26 11:24:37.401 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-26 11:24:37.401 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-26 11:24:37.402 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2b8cf049] under ifnull; prior registration was null
[DEBUG] 2024-11-26 11:24:37.402 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-26 11:24:37.402 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-26 11:24:37.402 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@79d14037] under pad; prior registration was null
[DEBUG] 2024-11-26 11:24:37.403 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5dacf18d] under str; prior registration was null
[DEBUG] 2024-11-26 11:24:37.405 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6fa3def8] under format; prior registration was null
[DEBUG] 2024-11-26 11:24:37.406 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@37f41a81] under timestampadd; prior registration was null
[DEBUG] 2024-11-26 11:24:37.406 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@185339ed] under timestampdiff; prior registration was null
[DEBUG] 2024-11-26 11:24:37.406 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-26 11:24:37.406 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-26 11:24:37.406 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@681311a7] under current_date; prior registration was null
[DEBUG] 2024-11-26 11:24:37.406 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2c7375da] under current_time; prior registration was null
[DEBUG] 2024-11-26 11:24:37.406 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68c4db77] under current_timestamp; prior registration was null
[DEBUG] 2024-11-26 11:24:37.407 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-26 11:24:37.407 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-26 11:24:37.407 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-26 11:24:37.407 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@775c4054] under local_date; prior registration was null
[DEBUG] 2024-11-26 11:24:37.407 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7b2e931] under local_time; prior registration was null
[DEBUG] 2024-11-26 11:24:37.407 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@305881b8] under local_datetime; prior registration was null
[DEBUG] 2024-11-26 11:24:37.407 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e89eba7] under offset_datetime; prior registration was null
[DEBUG] 2024-11-26 11:24:37.407 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-26 11:24:37.407 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-26 11:24:37.407 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-26 11:24:37.407 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-26 11:24:37.407 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bc25ac2] under instant; prior registration was null
[DEBUG] 2024-11-26 11:24:37.407 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-26 11:24:37.407 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@478089b6] under sql; prior registration was null
[DEBUG] 2024-11-26 11:24:37.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-26 11:24:37.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-26 11:24:37.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-26 11:24:37.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-26 11:24:37.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@39695803
[DEBUG] 2024-11-26 11:24:37.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-26 11:24:37.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-26 11:24:37.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-26 11:24:37.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-26 11:24:37.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-26 11:24:37.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-26 11:24:37.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-26 11:24:37.408 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@28b5d5dc] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@407f2029] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-26 11:24:37.409 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-26 11:24:37.410 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-26 11:24:37.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-26 11:24:37.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77020328] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@34eaf9c1
[DEBUG] 2024-11-26 11:24:37.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-26 11:24:37.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-26 11:24:37.411 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-26 11:24:37.414 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@3a5ce4b8] under trunc; prior registration was null
[DEBUG] 2024-11-26 11:24:37.414 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@38848217] under bitand; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1607d391] under bitor; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@38826984] under bitxor; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65262308] under bitnot; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-26 11:24:37.415 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@792e8181] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6fa3def8
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7b2e931
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@305881b8
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@511d5e6e] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43b172e3
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a78d380] under chr; prior registration was null
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e1291a4] under sysdate; prior registration was null
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-26 11:24:37.416 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-26 11:24:37.417 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-26 11:24:37.417 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-26 11:24:37.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2b974137] under rank; prior registration was null
[DEBUG] 2024-11-26 11:24:37.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7402c49f] under dense_rank; prior registration was null
[DEBUG] 2024-11-26 11:24:37.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5d22604e] under percent_rank; prior registration was null
[DEBUG] 2024-11-26 11:24:37.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2382b2f] under cume_dist; prior registration was null
[DEBUG] 2024-11-26 11:24:37.418 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7cbf4f8c] under listagg; prior registration was null
[DEBUG] 2024-11-26 11:24:37.421 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.421 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.422 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-26 11:24:37.422 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-26 11:24:37.422 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-26 11:24:37.422 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-26 11:24:37.422 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.422 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.422 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-26 11:24:37.422 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-26 11:24:37.422 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-26 11:24:37.422 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 11:24:37.422 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-26 11:24:37.423 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-26 11:24:37.424 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.425 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-26 11:24:37.426 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-26 11:24:37.430 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-26 11:24:37.522 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-26 11:24:37.523 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-26 11:24:37.626 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:24:37.629 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:24:37.631 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:24:37.631 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:24:37.632 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-26 11:24:37.632 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-26 11:24:37.795 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-26 11:24:37.798 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:24:37.798 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:24:37.824 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-26 11:24:37.825 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-26 11:24:37.840 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-26 11:24:37.841 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-26 11:24:37.841 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-26 11:24:37.849 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-26 11:24:37.862 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:24:37.863 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:24:37.863 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:24:37.863 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:24:37.863 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:24:37.863 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:24:37.886 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-26 11:24:37.886 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-26 11:24:37.889 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-26 11:24:37.889 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-26 11:24:37.889 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-26 11:24:37.889 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-26 11:24:37.889 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-26 11:24:37.889 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-26 11:24:37.890 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-26 11:24:37.890 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-26 11:24:37.890 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-26 11:24:37.890 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-26 11:24:37.890 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-26 11:24:37.890 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-26 11:24:37.954 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 11:24:37.956 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-26 11:24:37.963 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@40c6d1ef] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-26 11:24:37.964 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 11:24:37.969 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b92a0d1] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-26 11:24:37.969 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 11:24:37.973 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-26 11:24:37.980 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:24:37.988 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-26 11:24:37.988 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-26 11:24:37.988 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-26 11:24:37.988 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-26 11:24:37.988 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-26 11:24:37.988 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 11:24:37.988 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-26 11:24:37.989 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 11:24:37.990 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7bc8da3f] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 11:24:37.990 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 11:24:37.996 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1f4cb17b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 11:24:37.996 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 11:24:37.997 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-26 11:24:37.997 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:24:37.997 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-26 11:24:37.998 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-26 11:24:37.998 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-26 11:24:37.998 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-26 11:24:37.998 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-26 11:24:37.998 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 11:24:37.998 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-26 11:24:37.998 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-26 11:24:37.998 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1c66cd02] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-26 11:24:37.998 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-26 11:24:37.998 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1d535b78] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-26 11:24:37.998 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 11:24:37.998 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-26 11:24:37.998 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:24:37.998 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-26 11:24:37.998 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-26 11:24:37.998 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-26 11:24:37.998 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-26 11:24:37.998 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-26 11:24:37.999 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-26 11:24:37.999 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@28888124] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-26 11:24:37.999 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-26 11:24:38.000 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@366bf608] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-26 11:24:38.000 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 11:24:38.000 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1aaf73b7] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-26 11:24:38.001 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-26 11:24:38.001 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:24:38.002 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:24:38.002 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 11:24:38.002 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@4fb99927] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 11:24:38.002 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 11:24:38.002 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2d9df336] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-26 11:24:38.002 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@131b58d4] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 11:24:38.002 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 11:24:38.002 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-26 11:24:38.002 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:24:38.002 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:24:38.024 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-26 11:24:38.025 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-26 11:24:38.027 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-26 11:24:38.027 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-26 11:24:38.028 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6fb0261e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@52b30dcd]
[DEBUG] 2024-11-26 11:24:38.029 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-26 11:24:38.029 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-26 11:24:38.030 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-26 11:24:38.030 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-26 11:24:38.032 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1b79df53
[DEBUG] 2024-11-26 11:24:38.032 [main] SessionFactoryRegistry - Registering SessionFactory: a241a154-5d27-464a-af5b-f67d57c68eca (<unnamed>)
[DEBUG] 2024-11-26 11:24:38.032 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-26 11:24:38.032 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-26 11:24:38.067 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-26 11:24:38.082 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:24:38.097 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@636370090 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@2084023356 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@646106316 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@719357776)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@377207092 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@994009815 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1530848318)

[DEBUG] 2024-11-26 11:24:38.101 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-26 11:24:38.115 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:24:38.117 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:24:38.117 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@333199419 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@1753609207 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@959378687 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@719357776)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@1859633528 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@473440633 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@1530848318)

[DEBUG] 2024-11-26 11:24:38.117 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-26 11:24:38.119 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:24:38.194 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:24:38.194 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1287328228 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@846052901)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1685759068 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@958575255 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@755146854 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1925300085 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1135131957)

[DEBUG] 2024-11-26 11:24:38.194 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:24:38.197 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:24:38.197 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:24:38.197 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:24:38.197 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:24:38.197 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:24:38.197 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:24:38.198 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:24:38.198 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:24:38.199 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 2144545878
[DEBUG] 2024-11-26 11:24:38.202 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@274059873
[DEBUG] 2024-11-26 11:24:38.204 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@274059873
[DEBUG] 2024-11-26 11:24:38.204 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 11:24:38.208 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:24:38.208 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@33239d72
[DEBUG] 2024-11-26 11:24:38.209 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:24:38.210 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:24:38.212 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 11:24:38.212 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 11:24:38.219 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 11:24:38.220 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 11:24:38.220 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 11:24:38.222 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:24:38.225 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-26 11:24:38.225 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-26 11:24:38.225 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 11:24:38.225 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-26 11:24:38.231 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-26 11:24:38.233 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:24:38.234 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:24:38.234 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:24:38.234 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1420130719 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@846052901)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@372124065 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1421436947 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@725418930 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1412165323 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1135131957)

[DEBUG] 2024-11-26 11:24:38.234 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:24:38.235 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:24:38.295 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 11:24:38.295 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 11:24:38.297 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-26 11:24:38.299 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-26 11:24:38.303 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-26 11:24:38.303 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-26 11:24:38.304 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-26 11:24:38.306 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-26 11:24:38.306 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-26 11:24:38.307 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-26 11:24:38.307 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-26 11:24:38.307 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-26 11:24:38.308 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 11:24:38.308 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 11:24:38.308 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 11:24:38.308 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-26 11:24:38.308 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-26 11:24:38.308 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-26 11:24:38.308 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 11:24:38.309 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-26 11:24:38.309 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-26 11:24:38.311 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:24:38.311 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:24:38.312 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:24:38.312 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@551821075 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@846052901)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1874842251 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1067780644 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1476664081 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1478007685 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1135131957)

[DEBUG] 2024-11-26 11:24:38.312 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:24:38.313 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:24:38.313 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:24:38.313 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-26 11:24:38.313 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-26 11:24:38.313 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-26 11:24:38.313 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-26 11:24:38.314 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-26 11:24:38.314 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-26 11:24:38.314 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 949483950
[DEBUG] 2024-11-26 11:24:38.314 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 312362475
[DEBUG] 2024-11-26 11:24:38.314 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@365135007
[DEBUG] 2024-11-26 11:24:38.314 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@365135007
[DEBUG] 2024-11-26 11:24:38.314 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-26 11:24:38.314 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-26 11:24:38.314 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@365135007
[DEBUG] 2024-11-26 11:24:38.314 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-26 11:24:38.315 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-26 11:24:38.315 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@688efeb2
[DEBUG] 2024-11-26 11:24:38.315 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-26 11:24:38.315 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:24:38.381 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:24:38.381 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@960704936 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@846052901)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@640103260 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1416656186 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1533234724 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@2064513681 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1135131957)

[DEBUG] 2024-11-26 11:24:38.381 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:24:38.383 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:24:38.383 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:24:38.383 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:24:38.383 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:24:38.383 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:24:38.383 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:24:38.383 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:24:38.383 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:24:38.383 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 613097617
[DEBUG] 2024-11-26 11:24:38.383 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@990656754
[DEBUG] 2024-11-26 11:24:38.383 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@990656754
[DEBUG] 2024-11-26 11:24:38.383 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 11:24:38.383 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:24:38.383 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cc152f9
[DEBUG] 2024-11-26 11:24:38.384 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:24:38.384 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:24:38.384 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 11:24:38.384 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 11:24:38.386 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 11:24:38.386 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-26 11:24:38.386 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 11:24:38.386 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@c02a1be] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 11:24:38.386 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 11:24:38.386 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6f740044] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 11:24:38.386 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 11:24:38.387 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-26 11:24:38.387 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:24:38.387 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:24:38.387 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@662786209 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@846052901)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1041697470 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1898859288 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@184117961 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@667957103 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1135131957)

[DEBUG] 2024-11-26 11:24:38.387 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:24:38.388 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:24:38.388 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:24:38.388 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:24:38.388 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:24:38.388 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:24:38.388 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:24:38.388 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:24:38.388 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:24:38.388 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1775639151
[DEBUG] 2024-11-26 11:24:38.388 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1973093841
[DEBUG] 2024-11-26 11:24:38.388 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1973093841
[DEBUG] 2024-11-26 11:24:38.388 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 11:24:38.388 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:24:38.388 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2696b687
[DEBUG] 2024-11-26 11:24:38.388 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:24:38.388 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:24:38.389 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 11:24:38.389 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 11:24:38.389 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 11:24:38.390 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-26 11:24:38.390 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-26 11:24:38.390 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-26 11:24:38.390 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 11:24:38.390 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-26 11:24:38.392 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-26 11:24:38.393 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:24:38.394 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:24:38.394 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:24:38.394 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1156336184 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@846052901)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1968179698 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@391554161 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@563105933 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@118186765 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1135131957)

[DEBUG] 2024-11-26 11:24:38.394 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:24:38.395 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:24:38.395 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:24:38.395 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:24:38.395 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:24:38.395 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:24:38.395 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:24:38.395 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:24:38.395 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:24:38.395 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1214687061
[DEBUG] 2024-11-26 11:24:38.395 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@325183616
[DEBUG] 2024-11-26 11:24:38.395 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@325183616
[DEBUG] 2024-11-26 11:24:38.395 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-26 11:24:38.395 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:24:38.395 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3506bc8b
[DEBUG] 2024-11-26 11:24:38.395 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:24:38.395 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:24:38.515 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:24:38.515 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1404608759 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@846052901)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1295679363 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1050768030 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1767304024 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@2147434909 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1135131957)

[DEBUG] 2024-11-26 11:24:38.515 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:24:38.516 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:24:38.516 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:24:38.516 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:24:38.516 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:24:38.516 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:24:38.516 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:24:38.516 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:24:38.516 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:24:38.517 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 510956085
[DEBUG] 2024-11-26 11:24:38.517 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@141601266
[DEBUG] 2024-11-26 11:24:38.517 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@141601266
[DEBUG] 2024-11-26 11:24:38.517 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 11:24:38.517 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:24:38.517 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6c2e7591
[DEBUG] 2024-11-26 11:24:38.517 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:24:38.517 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:24:38.517 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:24:38.518 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@133321775 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@846052901)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1034783710 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@807377568 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@797107151 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@977574204 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1135131957)

[DEBUG] 2024-11-26 11:24:38.518 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:24:38.518 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:24:38.518 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:24:38.518 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:24:38.518 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:24:38.518 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:24:38.518 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:24:38.518 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:24:38.518 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:24:38.518 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1123913519
[DEBUG] 2024-11-26 11:24:38.518 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2129302349
[DEBUG] 2024-11-26 11:24:38.518 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2129302349
[DEBUG] 2024-11-26 11:24:38.518 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 11:24:38.518 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:24:38.519 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4700963e
[DEBUG] 2024-11-26 11:24:38.519 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:24:38.519 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:27:07.169 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 11:27:07.176 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-26 11:27:07.207 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-26 11:27:07.209 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-26 11:27:07.308 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 11:27:07.308 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2024-11-26 11:27:07.375 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 11:27:07.375 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2024-11-26 11:27:07.441 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 11:27:07.441 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2024-11-26 11:27:07.599 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 11:27:07.599 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2024-11-26 11:27:55.156 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 11:27:55.163 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-26 11:27:55.192 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-26 11:27:55.193 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-26 11:27:55.289 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 11:27:55.289 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2024-11-26 11:27:55.353 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 11:27:55.353 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2024-11-26 11:27:55.413 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 11:27:55.414 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2024-11-26 11:27:55.568 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 11:27:55.568 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2024-11-26 11:28:15.773 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 11:28:15.775 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-26 11:28:15.794 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-26 11:28:15.795 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-26 11:28:15.830 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-26 11:28:15.835 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-26 11:28:15.989 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-26 11:28:15.992 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-26 11:28:15.993 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-26 11:28:15.994 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-26 11:28:15.994 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-26 11:28:15.994 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-26 11:28:15.995 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-26 11:28:15.995 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-26 11:28:15.996 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-26 11:28:15.997 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-26 11:28:15.997 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-26 11:28:15.997 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-26 11:28:15.998 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-26 11:28:16.006 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-26 11:28:16.007 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-26 11:28:16.100 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 11:28:16.100 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 11:28:16.100 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 11:28:16.100 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-26 11:28:16.100 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-26 11:28:16.100 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-26 11:28:16.100 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-26 11:28:16.100 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-26 11:28:16.100 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-26 11:28:16.100 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 11:28:16.101 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 11:28:16.101 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 11:28:16.101 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 11:28:16.101 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 11:28:16.101 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 11:28:16.101 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-26 11:28:16.101 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-26 11:28:16.101 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-26 11:28:16.101 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-26 11:28:16.101 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-26 11:28:16.101 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-26 11:28:16.101 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-26 11:28:16.101 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 11:28:16.101 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 11:28:16.102 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 11:28:16.102 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 11:28:16.102 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 11:28:16.102 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 11:28:16.102 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 11:28:16.102 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 11:28:16.102 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 11:28:16.102 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 11:28:16.102 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 11:28:16.102 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 11:28:16.102 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 11:28:16.102 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 11:28:16.102 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 11:28:16.102 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-26 11:28:16.102 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-26 11:28:16.103 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-26 11:28:16.103 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-26 11:28:16.103 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 11:28:16.103 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 11:28:16.103 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 11:28:16.103 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-26 11:28:16.103 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-26 11:28:16.103 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-26 11:28:16.103 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-26 11:28:16.103 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 11:28:16.103 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 11:28:16.103 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 11:28:16.103 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-26 11:28:16.103 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-26 11:28:16.104 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-26 11:28:16.104 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-26 11:28:16.104 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-26 11:28:16.104 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-26 11:28:16.104 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-26 11:28:16.104 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-26 11:28:16.104 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-26 11:28:16.104 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-26 11:28:16.104 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-26 11:28:16.104 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-26 11:28:16.104 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-26 11:28:16.104 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-26 11:28:16.104 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-26 11:28:16.105 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-26 11:28:16.105 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-26 11:28:16.105 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-26 11:28:16.105 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-26 11:28:16.105 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-26 11:28:16.105 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-26 11:28:16.105 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-26 11:28:16.105 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-26 11:28:16.105 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-26 11:28:16.105 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-26 11:28:16.105 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-26 11:28:16.105 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-26 11:28:16.106 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-26 11:28:16.106 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-26 11:28:16.106 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-26 11:28:16.106 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-26 11:28:16.106 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-26 11:28:16.106 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-26 11:28:16.106 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-26 11:28:16.106 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-26 11:28:16.106 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-26 11:28:16.106 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-26 11:28:16.106 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-26 11:28:16.106 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 11:28:16.106 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 11:28:16.106 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 11:28:16.106 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 11:28:16.107 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 11:28:16.107 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 11:28:16.107 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-26 11:28:16.107 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-26 11:28:16.107 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-26 11:28:16.107 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-26 11:28:16.107 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 11:28:16.107 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 11:28:16.107 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 11:28:16.107 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-26 11:28:16.107 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-26 11:28:16.107 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-26 11:28:16.107 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-26 11:28:16.107 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 11:28:16.107 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 11:28:16.108 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 11:28:16.108 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-26 11:28:16.108 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-26 11:28:16.108 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-26 11:28:16.108 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-26 11:28:16.108 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-26 11:28:16.108 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-26 11:28:16.108 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-26 11:28:16.108 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-26 11:28:16.108 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-26 11:28:16.108 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-26 11:28:16.108 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-26 11:28:16.108 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-26 11:28:16.113 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-26 11:28:16.113 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-26 11:28:16.114 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@491f8831
[DEBUG] 2024-11-26 11:28:16.114 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@691541bc
[DEBUG] 2024-11-26 11:28:16.114 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b733ef7
[DEBUG] 2024-11-26 11:28:16.114 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43a4a9e5
[DEBUG] 2024-11-26 11:28:16.114 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@764fffa0
[DEBUG] 2024-11-26 11:28:16.114 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35145874
[DEBUG] 2024-11-26 11:28:16.114 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77524ca7
[DEBUG] 2024-11-26 11:28:16.115 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11df2829
[DEBUG] 2024-11-26 11:28:16.115 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18e4674d
[INFO ] 2024-11-26 11:28:16.140 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-26 11:28:16.140 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-26 11:28:16.140 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-26 11:28:16.227 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-26 11:28:16.289 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-26 11:28:16.289 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-26 11:28:16.289 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-26 11:28:16.327 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-26 11:28:16.328 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-26 11:28:16.334 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-26 11:28:16.334 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-26 11:28:16.349 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eaf8427) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c)
[DEBUG] 2024-11-26 11:28:16.349 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d6039df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae)
[DEBUG] 2024-11-26 11:28:16.349 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e00016) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3cbe6e)
[DEBUG] 2024-11-26 11:28:16.350 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@177ede17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17176b18)
[DEBUG] 2024-11-26 11:28:16.350 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e4395c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab53860)
[DEBUG] 2024-11-26 11:28:16.350 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5ac347) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b9389f)
[DEBUG] 2024-11-26 11:28:16.350 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b2c5ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41f785e3)
[DEBUG] 2024-11-26 11:28:16.350 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9a3661) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727986ad)
[DEBUG] 2024-11-26 11:28:16.350 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1600a8a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b25ef1c)
[DEBUG] 2024-11-26 11:28:16.351 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-26 11:28:16.351 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-26 11:28:16.352 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-26 11:28:16.354 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-26 11:28:16.354 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-26 11:28:16.357 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@383cdd4d
[DEBUG] 2024-11-26 11:28:16.357 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@491f8831`
[DEBUG] 2024-11-26 11:28:16.362 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 11:28:16.362 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 11:28:16.362 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 11:28:16.365 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 11:28:16.365 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 11:28:16.365 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 11:28:16.365 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 11:28:16.365 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 11:28:16.365 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 11:28:16.366 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 11:28:16.366 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 11:28:16.366 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 11:28:16.367 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71369e1a]
[DEBUG] 2024-11-26 11:28:16.399 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-26 11:28:16.424 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-26 11:28:16.433 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-26 11:28:16.438 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-26 11:28:16.446 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 11:28:16.462 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:28:16.463 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-26 11:28:16.463 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-26 11:28:16.466 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 11:28:16.469 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-26 11:28:16.473 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 11:28:16.476 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-26 11:28:16.476 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 11:28:16.480 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 11:28:16.485 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:28:16.486 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:28:16.495 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-26 11:28:16.497 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:28:16.497 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-26 11:28:16.498 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-26 11:28:16.499 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:28:16.499 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:28:16.502 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:28:16.504 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-26 11:28:16.504 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-26 11:28:16.505 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-26 11:28:16.505 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-26 11:28:16.505 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-26 11:28:16.505 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-26 11:28:16.505 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-26 11:28:16.506 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 11:28:16.510 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-26 11:28:16.510 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-26 11:28:16.510 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-26 11:28:16.511 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 11:28:16.511 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:28:16.512 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-26 11:28:16.512 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-26 11:28:16.512 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 11:28:16.512 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-26 11:28:16.512 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 11:28:16.512 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-26 11:28:16.512 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 11:28:16.512 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 11:28:16.512 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-26 11:28:16.512 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-26 11:28:16.513 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-26 11:28:16.513 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-26 11:28:16.513 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-26 11:28:16.513 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-26 11:28:16.513 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:28:16.513 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:28:16.513 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-26 11:28:16.514 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:28:16.514 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-26 11:28:16.514 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-26 11:28:16.514 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:28:16.514 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:28:16.514 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:28:16.514 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-26 11:28:16.515 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 11:28:16.515 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-26 11:28:16.516 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-26 11:28:16.516 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-26 11:28:16.516 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 11:28:16.519 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:28:16.519 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-26 11:28:16.519 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-26 11:28:16.519 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 11:28:16.519 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-26 11:28:16.519 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 11:28:16.519 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-26 11:28:16.520 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 11:28:16.520 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 11:28:16.520 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-26 11:28:16.520 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:28:16.522 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-26 11:28:16.523 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-26 11:28:16.523 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-26 11:28:16.523 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-26 11:28:16.523 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-26 11:28:16.523 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-26 11:28:16.523 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-26 11:28:16.523 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-26 11:28:16.523 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:28:16.523 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-26 11:28:16.524 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 11:28:16.524 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 11:28:16.524 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-26 11:28:16.526 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 11:28:16.526 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-26 11:28:16.526 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 11:28:16.526 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-26 11:28:16.530 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-26 11:28:16.530 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-26 11:28:16.530 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-26 11:28:16.530 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:28:16.531 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-26 11:28:16.533 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-26 11:28:16.534 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-26 11:28:16.534 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-26 11:28:16.534 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:28:16.534 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-26 11:28:16.534 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-26 11:28:16.534 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-26 11:28:16.535 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-26 11:28:16.535 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-26 11:28:16.535 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-26 11:28:16.543 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-26 11:28:16.543 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-26 11:28:16.724 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-26 11:28:16.762 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-26 11:28:16.762 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter7728269998652646596.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire9286354663975043410tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_03192289984840707790tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter7728269998652646596.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d7d8911, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-26 11:28:16.767 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-26 11:28:16.771 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-26 11:28:16.814 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-26 11:28:16.815 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-26 11:28:16.815 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-26 11:28:16.816 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-26 11:28:16.817 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@347b370c] under count; prior registration was null
[DEBUG] 2024-11-26 11:28:16.817 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@72a33316] under every; prior registration was null
[DEBUG] 2024-11-26 11:28:16.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@57fce8b] under any; prior registration was null
[DEBUG] 2024-11-26 11:28:16.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-26 11:28:16.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-26 11:28:16.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-26 11:28:16.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-26 11:28:16.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-26 11:28:16.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-26 11:28:16.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-26 11:28:16.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-26 11:28:16.818 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-26 11:28:16.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-26 11:28:16.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-26 11:28:16.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-26 11:28:16.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-26 11:28:16.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-26 11:28:16.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-26 11:28:16.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-26 11:28:16.819 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-26 11:28:16.821 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56f2c9e8] under sinh; prior registration was null
[DEBUG] 2024-11-26 11:28:16.821 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@457692cb] under cosh; prior registration was null
[DEBUG] 2024-11-26 11:28:16.821 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350342e0] under tanh; prior registration was null
[DEBUG] 2024-11-26 11:28:16.821 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d] under pi; prior registration was null
[DEBUG] 2024-11-26 11:28:16.821 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289] under log; prior registration was null
[DEBUG] 2024-11-26 11:28:16.821 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-26 11:28:16.821 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-26 11:28:16.821 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-26 11:28:16.821 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-26 11:28:16.821 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-26 11:28:16.822 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-26 11:28:16.822 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-26 11:28:16.822 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-26 11:28:16.822 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-26 11:28:16.822 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-26 11:28:16.822 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-26 11:28:16.822 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-26 11:28:16.823 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a] under position; prior registration was null
[DEBUG] 2024-11-26 11:28:16.825 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6fa2a006] under overlay; prior registration was null
[DEBUG] 2024-11-26 11:28:16.825 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@39695803] under trim; prior registration was null
[DEBUG] 2024-11-26 11:28:16.826 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@57b711b6] under cast; prior registration was null
[DEBUG] 2024-11-26 11:28:16.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2db461b5] under collate; prior registration was null
[DEBUG] 2024-11-26 11:28:16.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@55881f40] under extract; prior registration was null
[DEBUG] 2024-11-26 11:28:16.827 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-26 11:28:16.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-26 11:28:16.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11d1735e] under ifnull; prior registration was null
[DEBUG] 2024-11-26 11:28:16.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-26 11:28:16.828 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-26 11:28:16.829 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6282f1eb] under pad; prior registration was null
[DEBUG] 2024-11-26 11:28:16.829 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@64ed18ec] under str; prior registration was null
[DEBUG] 2024-11-26 11:28:16.830 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@25589735] under format; prior registration was null
[DEBUG] 2024-11-26 11:28:16.831 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7dddfc35] under timestampadd; prior registration was null
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2336cd91] under timestampdiff; prior registration was null
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c1e40d9] under current_date; prior registration was null
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b50c21] under current_time; prior registration was null
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e0fdc83] under current_timestamp; prior registration was null
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5dacf18d] under local_date; prior registration was null
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@432a6a69] under local_time; prior registration was null
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f52a229] under local_datetime; prior registration was null
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fe98084] under offset_datetime; prior registration was null
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-26 11:28:16.832 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-26 11:28:16.833 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-26 11:28:16.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f33e6d] under instant; prior registration was null
[DEBUG] 2024-11-26 11:28:16.833 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-26 11:28:16.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a1cb94] under sql; prior registration was null
[DEBUG] 2024-11-26 11:28:16.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-26 11:28:16.833 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-26 11:28:16.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-26 11:28:16.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-26 11:28:16.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289
[DEBUG] 2024-11-26 11:28:16.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-26 11:28:16.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-26 11:28:16.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-26 11:28:16.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-26 11:28:16.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-26 11:28:16.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-26 11:28:16.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-26 11:28:16.834 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-26 11:28:16.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@49bb808f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-26 11:28:16.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@563ada5] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-26 11:28:16.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-26 11:28:16.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-26 11:28:16.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-26 11:28:16.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-26 11:28:16.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-26 11:28:16.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-26 11:28:16.835 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-26 11:28:16.836 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-26 11:28:16.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-26 11:28:16.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-26 11:28:16.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-26 11:28:16.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-26 11:28:16.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-26 11:28:16.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-26 11:28:16.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-26 11:28:16.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12548f9a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a
[DEBUG] 2024-11-26 11:28:16.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-26 11:28:16.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-26 11:28:16.837 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-26 11:28:16.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2838eb] under trunc; prior registration was null
[DEBUG] 2024-11-26 11:28:16.840 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-26 11:28:16.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-26 11:28:16.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb5d334] under bitand; prior registration was null
[DEBUG] 2024-11-26 11:28:16.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45dc7be] under bitor; prior registration was null
[DEBUG] 2024-11-26 11:28:16.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under bitxor; prior registration was null
[DEBUG] 2024-11-26 11:28:16.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under bitnot; prior registration was null
[DEBUG] 2024-11-26 11:28:16.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-26 11:28:16.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-26 11:28:16.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-26 11:28:16.840 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4d664323] under format; prior registration was org.hibernate.dialect.function.FormatFunction@25589735
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@432a6a69
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f52a229
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-26 11:28:16.841 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ec0d06] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d
[DEBUG] 2024-11-26 11:28:16.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2676d96a] under chr; prior registration was null
[DEBUG] 2024-11-26 11:28:16.842 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-26 11:28:16.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under sysdate; prior registration was null
[DEBUG] 2024-11-26 11:28:16.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-26 11:28:16.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-26 11:28:16.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-26 11:28:16.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-26 11:28:16.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-26 11:28:16.842 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-26 11:28:16.843 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@77a9ac36] under rank; prior registration was null
[DEBUG] 2024-11-26 11:28:16.843 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3c743d40] under dense_rank; prior registration was null
[DEBUG] 2024-11-26 11:28:16.843 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5aac6f9f] under percent_rank; prior registration was null
[DEBUG] 2024-11-26 11:28:16.843 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2444c3df] under cume_dist; prior registration was null
[DEBUG] 2024-11-26 11:28:16.844 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@38848217] under listagg; prior registration was null
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-26 11:28:16.847 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.848 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-26 11:28:16.849 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-26 11:28:16.850 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-26 11:28:16.851 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-26 11:28:16.851 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-26 11:28:16.851 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-26 11:28:16.851 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-26 11:28:16.851 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-26 11:28:16.851 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-26 11:28:16.851 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-26 11:28:16.851 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.851 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.851 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-26 11:28:16.851 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-26 11:28:16.851 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-26 11:28:16.854 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-26 11:28:16.953 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-26 11:28:16.954 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-26 11:28:17.065 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:28:17.068 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:28:17.071 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:28:17.071 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:28:17.071 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-26 11:28:17.071 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-26 11:28:17.231 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-26 11:28:17.235 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:28:17.235 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:28:17.262 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-26 11:28:17.262 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-26 11:28:17.277 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-26 11:28:17.277 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-26 11:28:17.277 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-26 11:28:17.286 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-26 11:28:17.301 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:28:17.302 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:28:17.302 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:28:17.302 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:28:17.302 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:28:17.302 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:28:17.329 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-26 11:28:17.329 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-26 11:28:17.333 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-26 11:28:17.333 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-26 11:28:17.333 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-26 11:28:17.333 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-26 11:28:17.333 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-26 11:28:17.333 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-26 11:28:17.333 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-26 11:28:17.333 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-26 11:28:17.333 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-26 11:28:17.333 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-26 11:28:17.333 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-26 11:28:17.333 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-26 11:28:17.405 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 11:28:17.407 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-26 11:28:17.416 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d01ea33] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-26 11:28:17.417 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 11:28:17.423 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c3fcbe7] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-26 11:28:17.423 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 11:28:17.428 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-26 11:28:17.437 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:28:17.446 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-26 11:28:17.446 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-26 11:28:17.447 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-26 11:28:17.447 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-26 11:28:17.447 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-26 11:28:17.447 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 11:28:17.447 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-26 11:28:17.447 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 11:28:17.449 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3ae87e38] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 11:28:17.450 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 11:28:17.455 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e9cb95] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 11:28:17.455 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 11:28:17.457 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-26 11:28:17.457 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:28:17.457 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-26 11:28:17.457 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-26 11:28:17.457 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-26 11:28:17.457 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-26 11:28:17.457 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-26 11:28:17.457 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 11:28:17.457 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-26 11:28:17.457 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-26 11:28:17.457 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@21a0795f] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-26 11:28:17.457 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-26 11:28:17.458 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2ec156fb] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-26 11:28:17.458 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 11:28:17.458 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-26 11:28:17.458 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:28:17.458 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-26 11:28:17.458 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-26 11:28:17.458 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-26 11:28:17.458 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-26 11:28:17.458 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-26 11:28:17.459 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-26 11:28:17.459 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1bf52f10] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-26 11:28:17.460 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-26 11:28:17.460 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@301e5d23] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-26 11:28:17.460 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 11:28:17.461 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74787609] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-26 11:28:17.462 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-26 11:28:17.462 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:28:17.462 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:28:17.462 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 11:28:17.462 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@355b53cc] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 11:28:17.462 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 11:28:17.463 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2568611c] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-26 11:28:17.463 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bda7a5b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 11:28:17.463 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 11:28:17.463 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-26 11:28:17.463 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:28:17.463 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:28:17.491 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-26 11:28:17.492 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-26 11:28:17.496 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-26 11:28:17.496 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-26 11:28:17.497 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@121dac1a]
[DEBUG] 2024-11-26 11:28:17.498 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-26 11:28:17.498 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-26 11:28:17.498 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-26 11:28:17.498 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-26 11:28:17.501 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3acc65f0
[DEBUG] 2024-11-26 11:28:17.501 [main] SessionFactoryRegistry - Registering SessionFactory: 895a5296-8fcf-4a65-8df5-389b160b6f56 (<unnamed>)
[DEBUG] 2024-11-26 11:28:17.501 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-26 11:28:17.501 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-26 11:28:17.539 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-26 11:28:17.555 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:28:17.571 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@656020492 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@609630217 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1104693947 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@636370090 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1072476278 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-26 11:28:17.576 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-26 11:28:17.592 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:28:17.594 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:28:17.594 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@638978471 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@959016175 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@2113710566 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@125246542 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@289039926 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-26 11:28:17.594 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-26 11:28:17.595 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:28:17.661 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:28:17.661 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1859633528 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1533375298 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@363003357 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1160651280 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@415297573 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 11:28:17.661 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:28:17.664 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:28:17.664 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:28:17.664 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:28:17.664 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:28:17.664 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:28:17.665 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:28:17.665 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:28:17.665 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:28:17.666 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 663512999
[DEBUG] 2024-11-26 11:28:17.670 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-26 11:28:17.672 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-26 11:28:17.672 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 11:28:17.676 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:28:17.676 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20e3b165
[DEBUG] 2024-11-26 11:28:17.678 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:28:17.678 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:28:17.680 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 11:28:17.680 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 11:28:17.689 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 11:28:17.689 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 11:28:17.690 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 11:28:17.693 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:28:17.696 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-26 11:28:17.696 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-26 11:28:17.697 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 11:28:17.697 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-26 11:28:17.703 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-26 11:28:17.706 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:28:17.706 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:28:17.707 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:28:17.707 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1456923361 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1318491599 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1139305484 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@208427214 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1833726536 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 11:28:17.707 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:28:17.708 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:28:17.771 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 11:28:17.771 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 11:28:17.773 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-26 11:28:17.775 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-26 11:28:17.779 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-26 11:28:17.779 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-26 11:28:17.781 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-26 11:28:17.783 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-26 11:28:17.783 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-26 11:28:17.784 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-26 11:28:17.784 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-26 11:28:17.784 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-26 11:28:17.784 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 11:28:17.784 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 11:28:17.784 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 11:28:17.785 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-26 11:28:17.785 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-26 11:28:17.785 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-26 11:28:17.785 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 11:28:17.785 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-26 11:28:17.785 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-26 11:28:17.787 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:28:17.788 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:28:17.788 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:28:17.789 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@408648902 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@546552684 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1384781563 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@913564177 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1972176213 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 11:28:17.789 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:28:17.790 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:28:17.790 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:28:17.790 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-26 11:28:17.790 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-26 11:28:17.790 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-26 11:28:17.790 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-26 11:28:17.790 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-26 11:28:17.790 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-26 11:28:17.790 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 196316233
[DEBUG] 2024-11-26 11:28:17.790 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 345518693
[DEBUG] 2024-11-26 11:28:17.790 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-26 11:28:17.790 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-26 11:28:17.790 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-26 11:28:17.791 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-26 11:28:17.791 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-26 11:28:17.791 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-26 11:28:17.791 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-26 11:28:17.791 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6055e899
[DEBUG] 2024-11-26 11:28:17.791 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-26 11:28:17.791 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:28:17.863 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:28:17.864 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1911830487 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1367787521 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@551821075 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1874842251 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1067780644 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 11:28:17.864 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:28:17.865 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:28:17.865 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:28:17.865 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:28:17.865 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:28:17.865 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:28:17.865 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:28:17.865 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:28:17.865 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:28:17.866 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1649140180
[DEBUG] 2024-11-26 11:28:17.866 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@862853054
[DEBUG] 2024-11-26 11:28:17.866 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@862853054
[DEBUG] 2024-11-26 11:28:17.866 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 11:28:17.866 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:28:17.866 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3897f9ae
[DEBUG] 2024-11-26 11:28:17.866 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:28:17.866 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:28:17.867 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 11:28:17.867 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 11:28:17.868 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 11:28:17.868 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-26 11:28:17.869 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 11:28:17.869 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@642f8b7f] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 11:28:17.869 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 11:28:17.869 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3321fb65] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 11:28:17.869 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 11:28:17.869 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-26 11:28:17.869 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:28:17.869 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:28:17.870 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1715414246 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2119380781 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1108674897 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@613097617 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@990656754 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 11:28:17.870 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:28:17.870 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:28:17.870 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:28:17.870 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:28:17.870 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:28:17.870 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:28:17.870 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:28:17.870 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:28:17.870 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:28:17.871 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1439452257
[DEBUG] 2024-11-26 11:28:17.871 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@721876120
[DEBUG] 2024-11-26 11:28:17.871 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@721876120
[DEBUG] 2024-11-26 11:28:17.871 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 11:28:17.871 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:28:17.871 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ddb9a8
[DEBUG] 2024-11-26 11:28:17.871 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:28:17.871 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:28:17.871 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 11:28:17.871 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 11:28:17.871 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 11:28:17.872 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-26 11:28:17.872 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-26 11:28:17.872 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-26 11:28:17.872 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 11:28:17.872 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-26 11:28:17.875 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-26 11:28:17.877 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:28:17.878 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:28:17.878 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:28:17.878 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1775349092 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1166754951 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1392602264 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@694841823 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1303659291 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 11:28:17.878 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:28:17.879 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:28:17.879 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:28:17.879 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:28:17.879 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:28:17.879 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:28:17.879 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:28:17.879 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:28:17.879 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:28:17.879 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1613461828
[DEBUG] 2024-11-26 11:28:17.879 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1603095377
[DEBUG] 2024-11-26 11:28:17.879 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1603095377
[DEBUG] 2024-11-26 11:28:17.879 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-26 11:28:17.879 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:28:17.879 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55821edf
[DEBUG] 2024-11-26 11:28:17.880 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:28:17.880 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:28:18.026 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:28:18.027 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@450728160 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2079936145 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1071364078 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@851478032 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1156336184 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 11:28:18.027 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:28:18.029 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:28:18.029 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:28:18.029 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:28:18.029 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:28:18.029 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:28:18.029 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:28:18.029 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:28:18.029 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:28:18.029 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1937867829
[DEBUG] 2024-11-26 11:28:18.029 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@802062915
[DEBUG] 2024-11-26 11:28:18.029 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@802062915
[DEBUG] 2024-11-26 11:28:18.029 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 11:28:18.029 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:28:18.029 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52fe87e0
[DEBUG] 2024-11-26 11:28:18.029 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:28:18.030 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:28:18.030 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:28:18.031 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@926498219 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1214687061 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@325183616 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@889633931 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1269566437 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 11:28:18.031 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:28:18.031 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:28:18.031 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:28:18.031 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:28:18.032 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:28:18.032 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:28:18.032 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:28:18.032 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:28:18.032 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:28:18.032 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1295679363
[DEBUG] 2024-11-26 11:28:18.032 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1050768030
[DEBUG] 2024-11-26 11:28:18.032 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1050768030
[DEBUG] 2024-11-26 11:28:18.032 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 11:28:18.032 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:28:18.032 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6956eb58
[DEBUG] 2024-11-26 11:28:18.032 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:28:18.032 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:30:13.141 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 11:30:13.144 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-26 11:30:13.162 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-26 11:30:13.163 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-26 11:30:13.196 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-26 11:30:13.200 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-26 11:30:13.341 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-26 11:30:13.343 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-26 11:30:13.343 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-26 11:30:13.344 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-26 11:30:13.344 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-26 11:30:13.344 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-26 11:30:13.345 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-26 11:30:13.345 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-26 11:30:13.346 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-26 11:30:13.346 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-26 11:30:13.347 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-26 11:30:13.347 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-26 11:30:13.347 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-26 11:30:13.353 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-26 11:30:13.354 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-26 11:30:13.417 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 11:30:13.417 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 11:30:13.417 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 11:30:13.417 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-26 11:30:13.417 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-26 11:30:13.418 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-26 11:30:13.418 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-26 11:30:13.418 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-26 11:30:13.418 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-26 11:30:13.418 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 11:30:13.418 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 11:30:13.418 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 11:30:13.418 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 11:30:13.418 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 11:30:13.418 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 11:30:13.418 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-26 11:30:13.418 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-26 11:30:13.419 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-26 11:30:13.419 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-26 11:30:13.419 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-26 11:30:13.419 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-26 11:30:13.419 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-26 11:30:13.419 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 11:30:13.419 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 11:30:13.419 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 11:30:13.419 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 11:30:13.419 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 11:30:13.419 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 11:30:13.419 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 11:30:13.419 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 11:30:13.420 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 11:30:13.420 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 11:30:13.420 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 11:30:13.420 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 11:30:13.420 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 11:30:13.420 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 11:30:13.420 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 11:30:13.420 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-26 11:30:13.420 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-26 11:30:13.420 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-26 11:30:13.420 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-26 11:30:13.421 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 11:30:13.421 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 11:30:13.421 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 11:30:13.421 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-26 11:30:13.421 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-26 11:30:13.421 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-26 11:30:13.421 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-26 11:30:13.421 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 11:30:13.421 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 11:30:13.421 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 11:30:13.421 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-26 11:30:13.421 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-26 11:30:13.421 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-26 11:30:13.422 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-26 11:30:13.422 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-26 11:30:13.422 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-26 11:30:13.422 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-26 11:30:13.422 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-26 11:30:13.422 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-26 11:30:13.422 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-26 11:30:13.422 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-26 11:30:13.422 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-26 11:30:13.422 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-26 11:30:13.422 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-26 11:30:13.422 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-26 11:30:13.423 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-26 11:30:13.423 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-26 11:30:13.423 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-26 11:30:13.423 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-26 11:30:13.423 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-26 11:30:13.423 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-26 11:30:13.423 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-26 11:30:13.423 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-26 11:30:13.423 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-26 11:30:13.423 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-26 11:30:13.423 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-26 11:30:13.423 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-26 11:30:13.423 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-26 11:30:13.423 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-26 11:30:13.423 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-26 11:30:13.424 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-26 11:30:13.424 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-26 11:30:13.424 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-26 11:30:13.424 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-26 11:30:13.424 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-26 11:30:13.424 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-26 11:30:13.424 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-26 11:30:13.424 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-26 11:30:13.424 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 11:30:13.424 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 11:30:13.424 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 11:30:13.424 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 11:30:13.424 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 11:30:13.425 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 11:30:13.425 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-26 11:30:13.425 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-26 11:30:13.425 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-26 11:30:13.425 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-26 11:30:13.425 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 11:30:13.425 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 11:30:13.425 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 11:30:13.425 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-26 11:30:13.425 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-26 11:30:13.425 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-26 11:30:13.425 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-26 11:30:13.426 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 11:30:13.426 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 11:30:13.426 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 11:30:13.426 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-26 11:30:13.426 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-26 11:30:13.426 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-26 11:30:13.426 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-26 11:30:13.426 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-26 11:30:13.426 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-26 11:30:13.426 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-26 11:30:13.426 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-26 11:30:13.427 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-26 11:30:13.427 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-26 11:30:13.427 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-26 11:30:13.427 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-26 11:30:13.431 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-26 11:30:13.431 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-26 11:30:13.432 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@491f8831
[DEBUG] 2024-11-26 11:30:13.433 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@691541bc
[DEBUG] 2024-11-26 11:30:13.433 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b733ef7
[DEBUG] 2024-11-26 11:30:13.433 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43a4a9e5
[DEBUG] 2024-11-26 11:30:13.433 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@764fffa0
[DEBUG] 2024-11-26 11:30:13.433 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35145874
[DEBUG] 2024-11-26 11:30:13.433 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77524ca7
[DEBUG] 2024-11-26 11:30:13.433 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11df2829
[DEBUG] 2024-11-26 11:30:13.433 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18e4674d
[INFO ] 2024-11-26 11:30:13.453 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-26 11:30:13.453 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-26 11:30:13.453 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-26 11:30:13.516 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-26 11:30:13.571 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-26 11:30:13.571 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-26 11:30:13.571 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-26 11:30:13.601 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-26 11:30:13.602 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-26 11:30:13.607 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-26 11:30:13.607 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-26 11:30:13.619 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eaf8427) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c)
[DEBUG] 2024-11-26 11:30:13.619 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d6039df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae)
[DEBUG] 2024-11-26 11:30:13.619 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e00016) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3cbe6e)
[DEBUG] 2024-11-26 11:30:13.619 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@177ede17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17176b18)
[DEBUG] 2024-11-26 11:30:13.619 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e4395c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab53860)
[DEBUG] 2024-11-26 11:30:13.620 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5ac347) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b9389f)
[DEBUG] 2024-11-26 11:30:13.620 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b2c5ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41f785e3)
[DEBUG] 2024-11-26 11:30:13.620 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9a3661) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727986ad)
[DEBUG] 2024-11-26 11:30:13.620 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1600a8a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b25ef1c)
[DEBUG] 2024-11-26 11:30:13.621 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-26 11:30:13.621 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-26 11:30:13.621 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-26 11:30:13.623 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-26 11:30:13.623 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-26 11:30:13.625 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@383cdd4d
[DEBUG] 2024-11-26 11:30:13.625 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@491f8831`
[DEBUG] 2024-11-26 11:30:13.630 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 11:30:13.630 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 11:30:13.630 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 11:30:13.632 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 11:30:13.633 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 11:30:13.633 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 11:30:13.633 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 11:30:13.633 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 11:30:13.633 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 11:30:13.633 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 11:30:13.633 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 11:30:13.634 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 11:30:13.634 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71369e1a]
[DEBUG] 2024-11-26 11:30:13.660 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-26 11:30:13.677 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-26 11:30:13.683 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-26 11:30:13.688 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-26 11:30:13.694 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 11:30:13.707 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:30:13.708 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-26 11:30:13.708 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-26 11:30:13.710 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 11:30:13.712 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-26 11:30:13.715 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 11:30:13.717 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-26 11:30:13.718 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 11:30:13.720 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 11:30:13.725 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:30:13.725 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:30:13.732 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-26 11:30:13.733 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:30:13.733 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-26 11:30:13.734 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-26 11:30:13.734 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:30:13.734 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:30:13.736 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:30:13.737 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-26 11:30:13.738 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-26 11:30:13.738 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-26 11:30:13.738 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-26 11:30:13.738 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-26 11:30:13.738 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-26 11:30:13.738 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-26 11:30:13.739 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 11:30:13.742 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-26 11:30:13.742 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-26 11:30:13.742 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-26 11:30:13.743 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 11:30:13.743 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:30:13.743 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-26 11:30:13.743 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-26 11:30:13.743 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 11:30:13.743 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-26 11:30:13.744 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 11:30:13.744 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-26 11:30:13.744 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 11:30:13.744 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 11:30:13.744 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-26 11:30:13.744 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-26 11:30:13.744 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-26 11:30:13.744 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-26 11:30:13.744 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-26 11:30:13.744 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-26 11:30:13.744 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:30:13.745 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:30:13.745 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-26 11:30:13.745 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:30:13.745 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-26 11:30:13.745 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-26 11:30:13.745 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:30:13.745 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 11:30:13.745 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:30:13.745 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-26 11:30:13.746 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 11:30:13.746 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-26 11:30:13.747 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-26 11:30:13.747 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-26 11:30:13.747 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 11:30:13.749 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:30:13.749 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-26 11:30:13.749 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-26 11:30:13.749 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 11:30:13.750 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-26 11:30:13.750 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 11:30:13.750 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-26 11:30:13.750 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 11:30:13.750 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 11:30:13.750 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-26 11:30:13.750 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:30:13.752 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-26 11:30:13.753 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-26 11:30:13.753 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-26 11:30:13.753 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-26 11:30:13.753 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-26 11:30:13.753 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-26 11:30:13.753 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-26 11:30:13.753 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-26 11:30:13.753 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 11:30:13.753 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-26 11:30:13.754 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 11:30:13.754 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 11:30:13.754 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-26 11:30:13.755 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 11:30:13.755 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-26 11:30:13.755 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 11:30:13.756 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-26 11:30:13.759 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-26 11:30:13.759 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-26 11:30:13.759 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-26 11:30:13.759 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:30:13.760 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-26 11:30:13.761 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-26 11:30:13.762 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-26 11:30:13.762 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-26 11:30:13.762 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:30:13.763 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-26 11:30:13.763 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-26 11:30:13.763 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-26 11:30:13.763 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-26 11:30:13.763 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-26 11:30:13.763 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-26 11:30:13.770 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-26 11:30:13.770 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-26 11:30:13.889 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-26 11:30:13.919 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-26 11:30:13.920 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter6188865286395452252.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire8341600777259055239tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_0609314665636987954tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter6188865286395452252.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d7d8911, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-26 11:30:13.923 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-26 11:30:13.928 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-26 11:30:13.960 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-26 11:30:13.960 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-26 11:30:13.961 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-26 11:30:13.969 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-26 11:30:13.971 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@20184ade] under count; prior registration was null
[DEBUG] 2024-11-26 11:30:13.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@77204651] under every; prior registration was null
[DEBUG] 2024-11-26 11:30:13.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@51cca357] under any; prior registration was null
[DEBUG] 2024-11-26 11:30:13.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-26 11:30:13.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-26 11:30:13.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-26 11:30:13.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-26 11:30:13.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-26 11:30:13.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-26 11:30:13.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-26 11:30:13.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-26 11:30:13.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-26 11:30:13.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-26 11:30:13.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-26 11:30:13.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-26 11:30:13.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-26 11:30:13.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-26 11:30:13.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-26 11:30:13.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-26 11:30:13.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-26 11:30:13.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350342e0] under sinh; prior registration was null
[DEBUG] 2024-11-26 11:30:13.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d] under cosh; prior registration was null
[DEBUG] 2024-11-26 11:30:13.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289] under tanh; prior registration was null
[DEBUG] 2024-11-26 11:30:13.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cc56b32] under pi; prior registration was null
[DEBUG] 2024-11-26 11:30:13.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43fe2008] under log; prior registration was null
[DEBUG] 2024-11-26 11:30:13.976 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-26 11:30:13.976 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-26 11:30:13.976 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-26 11:30:13.976 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-26 11:30:13.976 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-26 11:30:13.976 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-26 11:30:13.976 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-26 11:30:13.976 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-26 11:30:13.976 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-26 11:30:13.976 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-26 11:30:13.977 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-26 11:30:13.977 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-26 11:30:13.977 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3de45b6c] under position; prior registration was null
[DEBUG] 2024-11-26 11:30:13.979 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2fdf7da2] under overlay; prior registration was null
[DEBUG] 2024-11-26 11:30:13.979 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@54d60fa1] under trim; prior registration was null
[DEBUG] 2024-11-26 11:30:13.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5c79c5ec] under cast; prior registration was null
[DEBUG] 2024-11-26 11:30:13.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@34eaf9c1] under collate; prior registration was null
[DEBUG] 2024-11-26 11:30:13.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@248b2b61] under extract; prior registration was null
[DEBUG] 2024-11-26 11:30:13.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-26 11:30:13.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-26 11:30:13.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4ca5cb99] under ifnull; prior registration was null
[DEBUG] 2024-11-26 11:30:13.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-26 11:30:13.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-26 11:30:13.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@70169464] under pad; prior registration was null
[DEBUG] 2024-11-26 11:30:13.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@590dea35] under str; prior registration was null
[DEBUG] 2024-11-26 11:30:13.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1bb172dd] under format; prior registration was null
[DEBUG] 2024-11-26 11:30:13.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6106dfb6] under timestampadd; prior registration was null
[DEBUG] 2024-11-26 11:30:13.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3593e074] under timestampdiff; prior registration was null
[DEBUG] 2024-11-26 11:30:13.984 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-26 11:30:13.984 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e0fdc83] under current_date; prior registration was null
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5dacf18d] under current_time; prior registration was null
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@432a6a69] under current_timestamp; prior registration was null
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f52a229] under local_date; prior registration was null
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fe98084] under local_time; prior registration was null
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f33e6d] under local_datetime; prior registration was null
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@151a6598] under offset_datetime; prior registration was null
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6fa3def8] under instant; prior registration was null
[DEBUG] 2024-11-26 11:30:13.985 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-26 11:30:13.986 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@37f41a81] under sql; prior registration was null
[DEBUG] 2024-11-26 11:30:13.986 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-26 11:30:13.986 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-26 11:30:13.986 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-26 11:30:13.986 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-26 11:30:13.986 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43fe2008
[DEBUG] 2024-11-26 11:30:13.986 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-26 11:30:13.986 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-26 11:30:13.986 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-26 11:30:13.986 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-26 11:30:13.987 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-26 11:30:13.987 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-26 11:30:13.987 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-26 11:30:13.987 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-26 11:30:13.987 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@12548f9a] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-26 11:30:13.987 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@156ff70f] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-26 11:30:13.987 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-26 11:30:13.987 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-26 11:30:13.987 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-26 11:30:13.987 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-26 11:30:13.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-26 11:30:13.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-26 11:30:13.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-26 11:30:13.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-26 11:30:13.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-26 11:30:13.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-26 11:30:13.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-26 11:30:13.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-26 11:30:13.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-26 11:30:13.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-26 11:30:13.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-26 11:30:13.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-26 11:30:13.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c5a2d5] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3de45b6c
[DEBUG] 2024-11-26 11:30:13.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-26 11:30:13.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-26 11:30:13.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-26 11:30:13.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@45dc7be] under trunc; prior registration was null
[DEBUG] 2024-11-26 11:30:13.993 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-26 11:30:13.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-26 11:30:13.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under bitand; prior registration was null
[DEBUG] 2024-11-26 11:30:13.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under bitor; prior registration was null
[DEBUG] 2024-11-26 11:30:13.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d664323] under bitxor; prior registration was null
[DEBUG] 2024-11-26 11:30:13.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ec0d06] under bitnot; prior registration was null
[DEBUG] 2024-11-26 11:30:13.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-26 11:30:13.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-26 11:30:13.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-26 11:30:13.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-26 11:30:13.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-26 11:30:13.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-26 11:30:13.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-26 11:30:13.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2676d96a] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1bb172dd
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3fe98084
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5f33e6d
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cc56b32
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6da646b8] under chr; prior registration was null
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a65e237] under sysdate; prior registration was null
[DEBUG] 2024-11-26 11:30:13.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-26 11:30:13.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-26 11:30:13.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-26 11:30:13.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-26 11:30:13.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-26 11:30:13.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-26 11:30:13.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5aac6f9f] under rank; prior registration was null
[DEBUG] 2024-11-26 11:30:13.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2444c3df] under dense_rank; prior registration was null
[DEBUG] 2024-11-26 11:30:13.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1eb6037d] under percent_rank; prior registration was null
[DEBUG] 2024-11-26 11:30:13.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@335b3d6] under cume_dist; prior registration was null
[DEBUG] 2024-11-26 11:30:13.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@38826984] under listagg; prior registration was null
[DEBUG] 2024-11-26 11:30:14.000 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.000 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.000 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-26 11:30:14.000 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-26 11:30:14.000 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-26 11:30:14.000 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-26 11:30:14.000 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.000 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.000 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-26 11:30:14.000 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-26 11:30:14.000 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-26 11:30:14.000 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 11:30:14.000 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-26 11:30:14.001 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-26 11:30:14.002 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-26 11:30:14.003 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-26 11:30:14.004 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-26 11:30:14.005 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-26 11:30:14.005 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.005 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.005 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-26 11:30:14.005 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-26 11:30:14.005 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-26 11:30:14.008 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-26 11:30:14.099 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-26 11:30:14.100 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-26 11:30:14.184 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:30:14.187 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:30:14.189 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:30:14.189 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:30:14.189 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-26 11:30:14.189 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-26 11:30:14.316 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-26 11:30:14.320 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:30:14.320 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 11:30:14.347 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-26 11:30:14.347 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-26 11:30:14.362 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-26 11:30:14.363 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-26 11:30:14.363 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-26 11:30:14.371 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-26 11:30:14.382 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:30:14.383 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:30:14.383 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:30:14.383 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:30:14.383 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:30:14.383 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:30:14.403 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-26 11:30:14.403 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-26 11:30:14.405 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-26 11:30:14.405 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-26 11:30:14.406 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-26 11:30:14.406 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-26 11:30:14.406 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-26 11:30:14.406 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-26 11:30:14.406 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-26 11:30:14.406 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-26 11:30:14.406 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-26 11:30:14.406 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-26 11:30:14.406 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-26 11:30:14.406 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-26 11:30:14.461 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 11:30:14.463 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-26 11:30:14.470 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4687366b] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-26 11:30:14.471 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 11:30:14.475 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@96dfcbb] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-26 11:30:14.475 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 11:30:14.479 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-26 11:30:14.487 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:30:14.495 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-26 11:30:14.495 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-26 11:30:14.495 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-26 11:30:14.495 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-26 11:30:14.495 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-26 11:30:14.495 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 11:30:14.495 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-26 11:30:14.496 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 11:30:14.497 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@50930bff] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 11:30:14.498 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 11:30:14.503 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7978550b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 11:30:14.503 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 11:30:14.505 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-26 11:30:14.505 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:30:14.505 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-26 11:30:14.505 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-26 11:30:14.505 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-26 11:30:14.505 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-26 11:30:14.505 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-26 11:30:14.505 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 11:30:14.505 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-26 11:30:14.505 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-26 11:30:14.505 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@56d742ad] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-26 11:30:14.505 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-26 11:30:14.505 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@75784062] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-26 11:30:14.506 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 11:30:14.506 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-26 11:30:14.506 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:30:14.506 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-26 11:30:14.506 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-26 11:30:14.506 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-26 11:30:14.506 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-26 11:30:14.506 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-26 11:30:14.507 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-26 11:30:14.507 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@4da9da6c] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-26 11:30:14.507 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-26 11:30:14.508 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64a8d575] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-26 11:30:14.508 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 11:30:14.508 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51fa09c7] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-26 11:30:14.509 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-26 11:30:14.509 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:30:14.510 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 11:30:14.510 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 11:30:14.510 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2bda7a5b] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 11:30:14.510 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 11:30:14.510 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@47374fa5] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-26 11:30:14.510 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@289da1bc] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 11:30:14.510 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 11:30:14.510 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-26 11:30:14.510 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:30:14.510 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 11:30:14.534 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-26 11:30:14.534 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-26 11:30:14.538 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-26 11:30:14.538 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-26 11:30:14.538 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@23dc70c1]
[DEBUG] 2024-11-26 11:30:14.539 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-26 11:30:14.539 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-26 11:30:14.540 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-26 11:30:14.540 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-26 11:30:14.541 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@29431f61
[DEBUG] 2024-11-26 11:30:14.541 [main] SessionFactoryRegistry - Registering SessionFactory: 39e46a08-8599-4a75-9cea-8e0cb964d7ea (<unnamed>)
[DEBUG] 2024-11-26 11:30:14.542 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-26 11:30:14.542 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-26 11:30:14.572 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-26 11:30:14.585 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:30:14.598 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@392189111 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@1409842139 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1484744244 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1300011842)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@102849021 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@686350055 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@2084023356)

[DEBUG] 2024-11-26 11:30:14.601 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-26 11:30:14.613 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:30:14.615 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:30:14.615 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@2113710566 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@125246542 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@289039926 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1300011842)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@1661349610 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@2074941685 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@2084023356)

[DEBUG] 2024-11-26 11:30:14.615 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-26 11:30:14.616 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:30:14.684 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:30:14.684 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1533375298 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1160651280 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@415297573 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1750040348 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1778465757 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 11:30:14.684 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:30:14.687 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:30:14.687 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:30:14.687 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:30:14.687 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:30:14.687 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:30:14.687 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:30:14.688 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:30:14.688 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:30:14.689 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 203715427
[DEBUG] 2024-11-26 11:30:14.692 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1294553325
[DEBUG] 2024-11-26 11:30:14.694 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1294553325
[DEBUG] 2024-11-26 11:30:14.694 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 11:30:14.697 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:30:14.697 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6655f3cd
[DEBUG] 2024-11-26 11:30:14.698 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:30:14.698 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:30:14.701 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 11:30:14.702 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 11:30:14.708 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 11:30:14.709 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 11:30:14.709 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 11:30:14.711 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:30:14.713 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-26 11:30:14.713 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-26 11:30:14.714 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 11:30:14.714 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-26 11:30:14.720 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-26 11:30:14.722 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:30:14.723 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:30:14.723 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:30:14.723 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1139305484 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@208427214 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1833726536 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@395229891 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@386284594 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 11:30:14.723 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:30:14.724 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:30:14.783 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 11:30:14.783 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 11:30:14.784 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-26 11:30:14.786 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-26 11:30:14.790 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-26 11:30:14.790 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-26 11:30:14.791 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-26 11:30:14.793 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-26 11:30:14.793 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-26 11:30:14.794 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-26 11:30:14.794 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-26 11:30:14.794 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-26 11:30:14.794 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 11:30:14.794 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 11:30:14.794 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 11:30:14.795 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-26 11:30:14.795 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-26 11:30:14.795 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-26 11:30:14.795 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 11:30:14.795 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-26 11:30:14.795 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-26 11:30:14.797 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:30:14.798 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:30:14.798 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:30:14.799 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1384781563 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@913564177 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1972176213 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1215858771 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1254584937 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 11:30:14.799 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:30:14.800 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:30:14.800 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:30:14.800 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-26 11:30:14.800 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-26 11:30:14.800 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-26 11:30:14.800 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-26 11:30:14.800 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-26 11:30:14.800 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-26 11:30:14.800 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 907314155
[DEBUG] 2024-11-26 11:30:14.800 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 1917593312
[DEBUG] 2024-11-26 11:30:14.800 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1616242841
[DEBUG] 2024-11-26 11:30:14.800 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1616242841
[DEBUG] 2024-11-26 11:30:14.801 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-26 11:30:14.801 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-26 11:30:14.801 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1616242841
[DEBUG] 2024-11-26 11:30:14.801 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-26 11:30:14.801 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-26 11:30:14.801 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@478cebdb
[DEBUG] 2024-11-26 11:30:14.801 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-26 11:30:14.801 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:30:14.867 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:30:14.867 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@551821075 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1874842251 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1067780644 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1476664081 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1478007685 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 11:30:14.867 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:30:14.868 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:30:14.868 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:30:14.868 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:30:14.868 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:30:14.869 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:30:14.869 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:30:14.869 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:30:14.869 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:30:14.869 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 949483950
[DEBUG] 2024-11-26 11:30:14.869 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1819701896
[DEBUG] 2024-11-26 11:30:14.869 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1819701896
[DEBUG] 2024-11-26 11:30:14.869 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 11:30:14.869 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:30:14.869 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@510e6b93
[DEBUG] 2024-11-26 11:30:14.869 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:30:14.869 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:30:14.869 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 11:30:14.869 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 11:30:14.871 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 11:30:14.871 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-26 11:30:14.871 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 11:30:14.871 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7272914b] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 11:30:14.871 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 11:30:14.871 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@663f24e6] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 11:30:14.871 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 11:30:14.872 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-26 11:30:14.872 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 11:30:14.872 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:30:14.872 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1108674897 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@613097617 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@990656754 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1556173561 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@921999281 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 11:30:14.872 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:30:14.873 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:30:14.873 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:30:14.873 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:30:14.873 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:30:14.873 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:30:14.873 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:30:14.873 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:30:14.873 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:30:14.873 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 81639848
[DEBUG] 2024-11-26 11:30:14.873 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2066011620
[DEBUG] 2024-11-26 11:30:14.873 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2066011620
[DEBUG] 2024-11-26 11:30:14.873 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 11:30:14.873 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:30:14.873 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c3c31a5
[DEBUG] 2024-11-26 11:30:14.873 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:30:14.873 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:30:14.874 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 11:30:14.874 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 11:30:14.874 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 11:30:14.874 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-26 11:30:14.874 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-26 11:30:14.875 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-26 11:30:14.875 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 11:30:14.875 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-26 11:30:14.876 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-26 11:30:14.878 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:30:14.878 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:30:14.879 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:30:14.879 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1392602264 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@694841823 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1303659291 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1384421718 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@179915314 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 11:30:14.879 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:30:14.879 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:30:14.879 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:30:14.879 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:30:14.880 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:30:14.880 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:30:14.880 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:30:14.880 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:30:14.880 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:30:14.880 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1434590943
[DEBUG] 2024-11-26 11:30:14.880 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1582967668
[DEBUG] 2024-11-26 11:30:14.880 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1582967668
[DEBUG] 2024-11-26 11:30:14.880 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-26 11:30:14.880 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:30:14.880 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@658098a2
[DEBUG] 2024-11-26 11:30:14.880 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:30:14.880 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:30:14.996 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:30:14.996 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1071364078 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@851478032 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1156336184 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1968179698 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@391554161 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 11:30:14.997 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:30:14.998 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:30:14.998 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:30:14.998 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:30:14.998 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:30:14.998 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:30:14.998 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:30:14.998 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:30:14.998 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:30:14.998 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1392412640
[DEBUG] 2024-11-26 11:30:14.998 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@926498219
[DEBUG] 2024-11-26 11:30:14.998 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@926498219
[DEBUG] 2024-11-26 11:30:14.998 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 11:30:14.998 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:30:14.998 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4866a755
[DEBUG] 2024-11-26 11:30:14.998 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:30:14.998 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 11:30:14.999 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 11:30:14.999 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@325183616 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@889633931 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1269566437 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@915231178 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@708090483 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 11:30:14.999 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 11:30:15.000 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 11:30:15.000 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 11:30:15.000 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 11:30:15.000 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 11:30:15.000 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 11:30:15.000 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 11:30:15.000 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 11:30:15.000 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 11:30:15.000 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1767304024
[DEBUG] 2024-11-26 11:30:15.000 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2147434909
[DEBUG] 2024-11-26 11:30:15.000 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2147434909
[DEBUG] 2024-11-26 11:30:15.000 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 11:30:15.000 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 11:30:15.000 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6127ef86
[DEBUG] 2024-11-26 11:30:15.000 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 11:30:15.000 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 12:24:50.989 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 12:24:50.996 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-26 12:24:51.027 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-26 12:24:51.029 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-26 12:24:51.082 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-26 12:24:51.087 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-26 12:24:51.256 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-26 12:24:51.260 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-26 12:24:51.260 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-26 12:24:51.261 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-26 12:24:51.261 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-26 12:24:51.261 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-26 12:24:51.262 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-26 12:24:51.262 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-26 12:24:51.263 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-26 12:24:51.264 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-26 12:24:51.264 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-26 12:24:51.264 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-26 12:24:51.265 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-26 12:24:51.274 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-26 12:24:51.274 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-26 12:24:51.369 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 12:24:51.369 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 12:24:51.369 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 12:24:51.369 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-26 12:24:51.369 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-26 12:24:51.369 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-26 12:24:51.369 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-26 12:24:51.369 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-26 12:24:51.369 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-26 12:24:51.370 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 12:24:51.370 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 12:24:51.370 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 12:24:51.370 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 12:24:51.370 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 12:24:51.370 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 12:24:51.370 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-26 12:24:51.370 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-26 12:24:51.370 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-26 12:24:51.370 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-26 12:24:51.370 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-26 12:24:51.370 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-26 12:24:51.370 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-26 12:24:51.370 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 12:24:51.371 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 12:24:51.371 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 12:24:51.371 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 12:24:51.371 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 12:24:51.371 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 12:24:51.371 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 12:24:51.371 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 12:24:51.371 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 12:24:51.371 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 12:24:51.371 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 12:24:51.371 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 12:24:51.371 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 12:24:51.372 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 12:24:51.372 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 12:24:51.372 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-26 12:24:51.372 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-26 12:24:51.372 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-26 12:24:51.372 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-26 12:24:51.372 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 12:24:51.372 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 12:24:51.372 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 12:24:51.372 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-26 12:24:51.373 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-26 12:24:51.373 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-26 12:24:51.373 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-26 12:24:51.373 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 12:24:51.373 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 12:24:51.373 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 12:24:51.373 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-26 12:24:51.373 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-26 12:24:51.373 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-26 12:24:51.373 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-26 12:24:51.373 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-26 12:24:51.373 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-26 12:24:51.373 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-26 12:24:51.373 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-26 12:24:51.374 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-26 12:24:51.374 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-26 12:24:51.374 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-26 12:24:51.374 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-26 12:24:51.374 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-26 12:24:51.374 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-26 12:24:51.374 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-26 12:24:51.375 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-26 12:24:51.375 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-26 12:24:51.375 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-26 12:24:51.375 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-26 12:24:51.375 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-26 12:24:51.375 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-26 12:24:51.375 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-26 12:24:51.375 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-26 12:24:51.375 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-26 12:24:51.376 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-26 12:24:51.376 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-26 12:24:51.376 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-26 12:24:51.376 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-26 12:24:51.376 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-26 12:24:51.376 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-26 12:24:51.376 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-26 12:24:51.376 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-26 12:24:51.376 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-26 12:24:51.376 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-26 12:24:51.376 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-26 12:24:51.376 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-26 12:24:51.376 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-26 12:24:51.376 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-26 12:24:51.377 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 12:24:51.377 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 12:24:51.377 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 12:24:51.377 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 12:24:51.377 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 12:24:51.377 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 12:24:51.377 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-26 12:24:51.378 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-26 12:24:51.378 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-26 12:24:51.378 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-26 12:24:51.378 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 12:24:51.378 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 12:24:51.378 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 12:24:51.378 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-26 12:24:51.378 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-26 12:24:51.378 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-26 12:24:51.378 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-26 12:24:51.378 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 12:24:51.379 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 12:24:51.379 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 12:24:51.379 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-26 12:24:51.379 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-26 12:24:51.379 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-26 12:24:51.379 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-26 12:24:51.379 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-26 12:24:51.380 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-26 12:24:51.380 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-26 12:24:51.380 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-26 12:24:51.380 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-26 12:24:51.380 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-26 12:24:51.380 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-26 12:24:51.380 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-26 12:24:51.385 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-26 12:24:51.385 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-26 12:24:51.386 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@491f8831
[DEBUG] 2024-11-26 12:24:51.387 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@691541bc
[DEBUG] 2024-11-26 12:24:51.387 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b733ef7
[DEBUG] 2024-11-26 12:24:51.387 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43a4a9e5
[DEBUG] 2024-11-26 12:24:51.387 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@764fffa0
[DEBUG] 2024-11-26 12:24:51.387 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35145874
[DEBUG] 2024-11-26 12:24:51.387 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77524ca7
[DEBUG] 2024-11-26 12:24:51.387 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11df2829
[DEBUG] 2024-11-26 12:24:51.387 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18e4674d
[INFO ] 2024-11-26 12:24:51.414 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-26 12:24:51.414 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-26 12:24:51.414 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-26 12:24:51.501 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-26 12:24:51.583 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-26 12:24:51.583 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-26 12:24:51.584 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-26 12:24:51.624 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-26 12:24:51.625 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-26 12:24:51.632 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-26 12:24:51.632 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-26 12:24:51.647 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eaf8427) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c)
[DEBUG] 2024-11-26 12:24:51.647 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d6039df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae)
[DEBUG] 2024-11-26 12:24:51.647 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e00016) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3cbe6e)
[DEBUG] 2024-11-26 12:24:51.647 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@177ede17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17176b18)
[DEBUG] 2024-11-26 12:24:51.647 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e4395c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab53860)
[DEBUG] 2024-11-26 12:24:51.647 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5ac347) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b9389f)
[DEBUG] 2024-11-26 12:24:51.648 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b2c5ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41f785e3)
[DEBUG] 2024-11-26 12:24:51.648 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9a3661) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727986ad)
[DEBUG] 2024-11-26 12:24:51.648 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1600a8a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b25ef1c)
[DEBUG] 2024-11-26 12:24:51.649 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-26 12:24:51.649 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-26 12:24:51.650 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-26 12:24:51.652 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-26 12:24:51.652 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-26 12:24:51.655 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@383cdd4d
[DEBUG] 2024-11-26 12:24:51.655 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@491f8831`
[DEBUG] 2024-11-26 12:24:51.660 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 12:24:51.660 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 12:24:51.660 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 12:24:51.664 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 12:24:51.664 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 12:24:51.664 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 12:24:51.664 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 12:24:51.664 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 12:24:51.664 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 12:24:51.664 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 12:24:51.665 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 12:24:51.665 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 12:24:51.666 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71369e1a]
[DEBUG] 2024-11-26 12:24:51.704 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-26 12:24:51.731 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-26 12:24:51.739 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-26 12:24:51.745 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-26 12:24:51.754 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 12:24:51.772 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 12:24:51.772 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-26 12:24:51.773 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-26 12:24:51.775 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 12:24:51.779 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-26 12:24:51.783 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 12:24:51.786 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-26 12:24:51.786 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 12:24:51.790 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 12:24:51.796 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 12:24:51.797 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 12:24:51.806 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-26 12:24:51.808 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 12:24:51.808 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-26 12:24:51.809 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-26 12:24:51.810 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 12:24:51.810 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 12:24:51.813 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 12:24:51.815 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-26 12:24:51.815 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-26 12:24:51.816 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-26 12:24:51.816 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-26 12:24:51.816 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-26 12:24:51.816 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-26 12:24:51.816 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-26 12:24:51.817 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 12:24:51.821 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-26 12:24:51.821 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-26 12:24:51.821 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-26 12:24:51.822 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 12:24:51.822 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 12:24:51.823 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-26 12:24:51.823 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-26 12:24:51.823 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 12:24:51.823 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-26 12:24:51.823 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 12:24:51.823 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-26 12:24:51.823 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 12:24:51.823 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 12:24:51.823 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-26 12:24:51.824 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-26 12:24:51.824 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-26 12:24:51.824 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-26 12:24:51.824 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-26 12:24:51.824 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-26 12:24:51.824 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 12:24:51.824 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 12:24:51.824 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-26 12:24:51.825 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 12:24:51.825 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-26 12:24:51.825 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-26 12:24:51.825 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 12:24:51.825 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 12:24:51.825 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 12:24:51.826 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-26 12:24:51.826 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 12:24:51.826 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-26 12:24:51.827 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-26 12:24:51.827 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-26 12:24:51.827 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 12:24:51.830 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 12:24:51.831 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-26 12:24:51.831 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-26 12:24:51.831 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 12:24:51.831 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-26 12:24:51.831 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 12:24:51.831 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-26 12:24:51.831 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 12:24:51.831 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 12:24:51.832 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-26 12:24:51.832 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 12:24:51.834 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-26 12:24:51.835 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-26 12:24:51.835 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-26 12:24:51.835 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-26 12:24:51.835 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-26 12:24:51.835 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-26 12:24:51.835 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-26 12:24:51.835 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-26 12:24:51.835 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 12:24:51.836 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-26 12:24:51.836 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 12:24:51.837 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 12:24:51.837 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-26 12:24:51.838 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 12:24:51.838 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-26 12:24:51.838 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 12:24:51.839 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-26 12:24:51.843 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-26 12:24:51.843 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-26 12:24:51.843 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-26 12:24:51.844 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 12:24:51.846 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-26 12:24:51.848 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-26 12:24:51.849 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-26 12:24:51.849 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-26 12:24:51.849 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 12:24:51.849 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-26 12:24:51.849 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-26 12:24:51.850 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-26 12:24:51.850 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-26 12:24:51.850 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-26 12:24:51.851 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-26 12:24:51.859 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-26 12:24:51.860 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-26 12:24:52.054 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-26 12:24:52.095 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-26 12:24:52.095 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter12805440701410406275.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire16379368961833257168tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_013551057750625687338tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter12805440701410406275.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d7d8911, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-26 12:24:52.100 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-26 12:24:52.106 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-26 12:24:52.151 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-26 12:24:52.151 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-26 12:24:52.152 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-26 12:24:52.152 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-26 12:24:52.153 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@20184ade] under count; prior registration was null
[DEBUG] 2024-11-26 12:24:52.154 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@77204651] under every; prior registration was null
[DEBUG] 2024-11-26 12:24:52.154 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@51cca357] under any; prior registration was null
[DEBUG] 2024-11-26 12:24:52.155 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-26 12:24:52.155 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-26 12:24:52.155 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-26 12:24:52.155 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-26 12:24:52.155 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-26 12:24:52.155 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-26 12:24:52.155 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-26 12:24:52.155 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-26 12:24:52.155 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-26 12:24:52.155 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-26 12:24:52.156 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-26 12:24:52.156 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-26 12:24:52.156 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-26 12:24:52.156 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-26 12:24:52.156 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-26 12:24:52.156 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-26 12:24:52.156 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-26 12:24:52.158 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350342e0] under sinh; prior registration was null
[DEBUG] 2024-11-26 12:24:52.158 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d] under cosh; prior registration was null
[DEBUG] 2024-11-26 12:24:52.158 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289] under tanh; prior registration was null
[DEBUG] 2024-11-26 12:24:52.158 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cc56b32] under pi; prior registration was null
[DEBUG] 2024-11-26 12:24:52.158 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43fe2008] under log; prior registration was null
[DEBUG] 2024-11-26 12:24:52.158 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-26 12:24:52.158 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-26 12:24:52.158 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-26 12:24:52.159 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-26 12:24:52.159 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-26 12:24:52.159 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-26 12:24:52.159 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-26 12:24:52.159 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-26 12:24:52.159 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-26 12:24:52.159 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-26 12:24:52.159 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-26 12:24:52.159 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-26 12:24:52.160 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3de45b6c] under position; prior registration was null
[DEBUG] 2024-11-26 12:24:52.162 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2fdf7da2] under overlay; prior registration was null
[DEBUG] 2024-11-26 12:24:52.163 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@54d60fa1] under trim; prior registration was null
[DEBUG] 2024-11-26 12:24:52.164 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5c79c5ec] under cast; prior registration was null
[DEBUG] 2024-11-26 12:24:52.164 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@34eaf9c1] under collate; prior registration was null
[DEBUG] 2024-11-26 12:24:52.165 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@248b2b61] under extract; prior registration was null
[DEBUG] 2024-11-26 12:24:52.165 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-26 12:24:52.165 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-26 12:24:52.166 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4ca5cb99] under ifnull; prior registration was null
[DEBUG] 2024-11-26 12:24:52.166 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-26 12:24:52.166 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-26 12:24:52.166 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@70169464] under pad; prior registration was null
[DEBUG] 2024-11-26 12:24:52.167 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@590dea35] under str; prior registration was null
[DEBUG] 2024-11-26 12:24:52.168 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1bb172dd] under format; prior registration was null
[DEBUG] 2024-11-26 12:24:52.169 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6106dfb6] under timestampadd; prior registration was null
[DEBUG] 2024-11-26 12:24:52.170 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3593e074] under timestampdiff; prior registration was null
[DEBUG] 2024-11-26 12:24:52.170 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-26 12:24:52.170 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-26 12:24:52.170 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e0fdc83] under current_date; prior registration was null
[DEBUG] 2024-11-26 12:24:52.170 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5dacf18d] under current_time; prior registration was null
[DEBUG] 2024-11-26 12:24:52.170 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@432a6a69] under current_timestamp; prior registration was null
[DEBUG] 2024-11-26 12:24:52.170 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-26 12:24:52.170 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-26 12:24:52.170 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-26 12:24:52.170 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f52a229] under local_date; prior registration was null
[DEBUG] 2024-11-26 12:24:52.170 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fe98084] under local_time; prior registration was null
[DEBUG] 2024-11-26 12:24:52.170 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f33e6d] under local_datetime; prior registration was null
[DEBUG] 2024-11-26 12:24:52.170 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@151a6598] under offset_datetime; prior registration was null
[DEBUG] 2024-11-26 12:24:52.171 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-26 12:24:52.171 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-26 12:24:52.171 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-26 12:24:52.171 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-26 12:24:52.171 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6fa3def8] under instant; prior registration was null
[DEBUG] 2024-11-26 12:24:52.171 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-26 12:24:52.171 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@37f41a81] under sql; prior registration was null
[DEBUG] 2024-11-26 12:24:52.171 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-26 12:24:52.171 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-26 12:24:52.172 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-26 12:24:52.172 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-26 12:24:52.172 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43fe2008
[DEBUG] 2024-11-26 12:24:52.172 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-26 12:24:52.172 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-26 12:24:52.172 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-26 12:24:52.172 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-26 12:24:52.172 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-26 12:24:52.172 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-26 12:24:52.172 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-26 12:24:52.172 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-26 12:24:52.173 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@12548f9a] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-26 12:24:52.173 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@156ff70f] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-26 12:24:52.173 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-26 12:24:52.173 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-26 12:24:52.173 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-26 12:24:52.173 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-26 12:24:52.173 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-26 12:24:52.173 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-26 12:24:52.173 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-26 12:24:52.173 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-26 12:24:52.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-26 12:24:52.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-26 12:24:52.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-26 12:24:52.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-26 12:24:52.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-26 12:24:52.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-26 12:24:52.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-26 12:24:52.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-26 12:24:52.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-26 12:24:52.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-26 12:24:52.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c5a2d5] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3de45b6c
[DEBUG] 2024-11-26 12:24:52.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-26 12:24:52.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-26 12:24:52.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-26 12:24:52.179 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@45dc7be] under trunc; prior registration was null
[DEBUG] 2024-11-26 12:24:52.179 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-26 12:24:52.179 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-26 12:24:52.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under bitand; prior registration was null
[DEBUG] 2024-11-26 12:24:52.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under bitor; prior registration was null
[DEBUG] 2024-11-26 12:24:52.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d664323] under bitxor; prior registration was null
[DEBUG] 2024-11-26 12:24:52.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ec0d06] under bitnot; prior registration was null
[DEBUG] 2024-11-26 12:24:52.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-26 12:24:52.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-26 12:24:52.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-26 12:24:52.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-26 12:24:52.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-26 12:24:52.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-26 12:24:52.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-26 12:24:52.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-26 12:24:52.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-26 12:24:52.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-26 12:24:52.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-26 12:24:52.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-26 12:24:52.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-26 12:24:52.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2676d96a] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1bb172dd
[DEBUG] 2024-11-26 12:24:52.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-26 12:24:52.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-26 12:24:52.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-26 12:24:52.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-26 12:24:52.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3fe98084
[DEBUG] 2024-11-26 12:24:52.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5f33e6d
[DEBUG] 2024-11-26 12:24:52.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-26 12:24:52.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cc56b32
[DEBUG] 2024-11-26 12:24:52.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6da646b8] under chr; prior registration was null
[DEBUG] 2024-11-26 12:24:52.181 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-26 12:24:52.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a65e237] under sysdate; prior registration was null
[DEBUG] 2024-11-26 12:24:52.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-26 12:24:52.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-26 12:24:52.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-26 12:24:52.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-26 12:24:52.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-26 12:24:52.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-26 12:24:52.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5aac6f9f] under rank; prior registration was null
[DEBUG] 2024-11-26 12:24:52.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2444c3df] under dense_rank; prior registration was null
[DEBUG] 2024-11-26 12:24:52.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1eb6037d] under percent_rank; prior registration was null
[DEBUG] 2024-11-26 12:24:52.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@335b3d6] under cume_dist; prior registration was null
[DEBUG] 2024-11-26 12:24:52.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@38826984] under listagg; prior registration was null
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-26 12:24:52.188 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-26 12:24:52.189 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-26 12:24:52.190 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-26 12:24:52.191 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-26 12:24:52.192 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-26 12:24:52.193 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-26 12:24:52.198 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-26 12:24:52.310 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-26 12:24:52.312 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-26 12:24:52.428 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 12:24:52.431 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 12:24:52.435 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 12:24:52.435 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 12:24:52.435 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-26 12:24:52.435 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-26 12:24:52.623 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-26 12:24:52.627 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 12:24:52.628 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 12:24:52.660 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-26 12:24:52.660 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-26 12:24:52.677 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-26 12:24:52.678 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-26 12:24:52.678 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-26 12:24:52.687 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-26 12:24:52.705 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 12:24:52.706 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 12:24:52.706 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 12:24:52.706 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 12:24:52.706 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 12:24:52.707 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 12:24:52.736 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-26 12:24:52.736 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-26 12:24:52.740 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-26 12:24:52.740 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-26 12:24:52.740 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-26 12:24:52.740 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-26 12:24:52.740 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-26 12:24:52.741 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-26 12:24:52.741 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-26 12:24:52.741 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-26 12:24:52.741 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-26 12:24:52.741 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-26 12:24:52.741 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-26 12:24:52.741 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-26 12:24:52.816 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 12:24:52.818 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-26 12:24:52.828 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4687366b] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-26 12:24:52.829 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 12:24:52.833 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@96dfcbb] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-26 12:24:52.834 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 12:24:52.839 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-26 12:24:52.849 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 12:24:52.859 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-26 12:24:52.859 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-26 12:24:52.859 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-26 12:24:52.859 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-26 12:24:52.859 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-26 12:24:52.859 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 12:24:52.859 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-26 12:24:52.860 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 12:24:52.861 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@50930bff] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 12:24:52.862 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 12:24:52.868 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7978550b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 12:24:52.868 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 12:24:52.870 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-26 12:24:52.870 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 12:24:52.871 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-26 12:24:52.871 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-26 12:24:52.871 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-26 12:24:52.871 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-26 12:24:52.871 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-26 12:24:52.871 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 12:24:52.871 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-26 12:24:52.871 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-26 12:24:52.871 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@56d742ad] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-26 12:24:52.871 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-26 12:24:52.871 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@75784062] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-26 12:24:52.871 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 12:24:52.872 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-26 12:24:52.872 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 12:24:52.872 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-26 12:24:52.872 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-26 12:24:52.872 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-26 12:24:52.872 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-26 12:24:52.872 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-26 12:24:52.873 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-26 12:24:52.873 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@4da9da6c] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-26 12:24:52.873 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-26 12:24:52.874 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64a8d575] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-26 12:24:52.874 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 12:24:52.874 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51fa09c7] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-26 12:24:52.876 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-26 12:24:52.876 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 12:24:52.876 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 12:24:52.876 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 12:24:52.876 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2bda7a5b] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 12:24:52.876 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 12:24:52.876 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@47374fa5] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-26 12:24:52.876 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@289da1bc] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 12:24:52.876 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 12:24:52.877 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-26 12:24:52.877 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 12:24:52.877 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 12:24:52.905 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-26 12:24:52.906 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-26 12:24:52.910 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-26 12:24:52.911 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-26 12:24:52.912 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@23dc70c1]
[DEBUG] 2024-11-26 12:24:52.913 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-26 12:24:52.913 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-26 12:24:52.913 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-26 12:24:52.913 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-26 12:24:52.916 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@29431f61
[DEBUG] 2024-11-26 12:24:52.916 [main] SessionFactoryRegistry - Registering SessionFactory: 6662bcc8-1d73-4d53-8afc-88df3ac03f3c (<unnamed>)
[DEBUG] 2024-11-26 12:24:52.916 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-26 12:24:52.916 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-26 12:24:52.955 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-26 12:24:52.972 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 12:24:52.991 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@392189111 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@1409842139 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1484744244 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1300011842)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@102849021 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@686350055 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@2084023356)

[DEBUG] 2024-11-26 12:24:52.997 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-26 12:24:53.032 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 12:24:53.034 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 12:24:53.035 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@2113710566 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@125246542 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@289039926 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1300011842)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@1661349610 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@2074941685 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@2084023356)

[DEBUG] 2024-11-26 12:24:53.035 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-26 12:24:53.040 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 12:24:53.183 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 12:24:53.183 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1859633528 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1533375298 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@363003357 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1160651280 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@415297573 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 12:24:53.183 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 12:24:53.187 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 12:24:53.187 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 12:24:53.187 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 12:24:53.187 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 12:24:53.187 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 12:24:53.187 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 12:24:53.188 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 12:24:53.188 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 12:24:53.189 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 663512999
[DEBUG] 2024-11-26 12:24:53.193 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-26 12:24:53.195 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-26 12:24:53.196 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 12:24:53.200 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 12:24:53.200 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20e3b165
[DEBUG] 2024-11-26 12:24:53.203 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 12:24:53.203 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 12:24:53.205 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 12:24:53.205 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 12:24:53.215 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 12:24:53.216 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 12:24:53.216 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 12:24:53.219 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 12:24:53.223 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-26 12:24:53.223 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-26 12:24:53.223 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 12:24:53.224 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-26 12:24:53.231 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-26 12:24:53.234 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 12:24:53.234 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 12:24:53.235 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 12:24:53.235 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1456923361 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1318491599 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1139305484 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@208427214 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1833726536 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 12:24:53.235 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 12:24:53.236 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 12:24:53.359 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 12:24:53.360 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 12:24:53.362 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-26 12:24:53.364 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-26 12:24:53.383 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-26 12:24:53.383 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-26 12:24:53.384 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-26 12:24:53.387 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-26 12:24:53.387 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-26 12:24:53.388 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-26 12:24:53.388 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-26 12:24:53.388 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-26 12:24:53.388 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 12:24:53.388 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 12:24:53.389 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 12:24:53.389 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-26 12:24:53.389 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-26 12:24:53.389 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-26 12:24:53.389 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 12:24:53.390 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-26 12:24:53.390 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-26 12:24:53.392 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 12:24:53.393 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 12:24:53.394 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 12:24:53.394 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1384781563 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@913564177 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1972176213 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1215858771 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1254584937 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 12:24:53.394 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 12:24:53.395 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 12:24:53.395 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 12:24:53.396 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-26 12:24:53.396 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-26 12:24:53.396 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-26 12:24:53.396 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-26 12:24:53.396 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-26 12:24:53.396 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-26 12:24:53.396 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 907314155
[DEBUG] 2024-11-26 12:24:53.396 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 1917593312
[DEBUG] 2024-11-26 12:24:53.396 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1616242841
[DEBUG] 2024-11-26 12:24:53.396 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1616242841
[DEBUG] 2024-11-26 12:24:53.396 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-26 12:24:53.397 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-26 12:24:53.397 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1616242841
[DEBUG] 2024-11-26 12:24:53.397 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-26 12:24:53.397 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-26 12:24:53.397 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@478cebdb
[DEBUG] 2024-11-26 12:24:53.397 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-26 12:24:53.397 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 12:24:53.542 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 12:24:53.543 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1911830487 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1367787521 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@551821075 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1874842251 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1067780644 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 12:24:53.543 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 12:24:53.545 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 12:24:53.545 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 12:24:53.545 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 12:24:53.545 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 12:24:53.545 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 12:24:53.545 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 12:24:53.545 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 12:24:53.545 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 12:24:53.546 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1649140180
[DEBUG] 2024-11-26 12:24:53.546 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@862853054
[DEBUG] 2024-11-26 12:24:53.546 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@862853054
[DEBUG] 2024-11-26 12:24:53.546 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 12:24:53.546 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 12:24:53.546 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3897f9ae
[DEBUG] 2024-11-26 12:24:53.546 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 12:24:53.546 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 12:24:53.547 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 12:24:53.547 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 12:24:53.549 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 12:24:53.549 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-26 12:24:53.549 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 12:24:53.549 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@642f8b7f] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 12:24:53.549 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 12:24:53.549 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3321fb65] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 12:24:53.549 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 12:24:53.550 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-26 12:24:53.550 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 12:24:53.550 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 12:24:53.550 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1715414246 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2119380781 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1108674897 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@613097617 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@990656754 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 12:24:53.550 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 12:24:53.551 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 12:24:53.551 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 12:24:53.551 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 12:24:53.551 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 12:24:53.551 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 12:24:53.551 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 12:24:53.551 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 12:24:53.551 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 12:24:53.551 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1439452257
[DEBUG] 2024-11-26 12:24:53.552 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@721876120
[DEBUG] 2024-11-26 12:24:53.552 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@721876120
[DEBUG] 2024-11-26 12:24:53.552 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 12:24:53.552 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 12:24:53.552 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ddb9a8
[DEBUG] 2024-11-26 12:24:53.552 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 12:24:53.552 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 12:24:53.552 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 12:24:53.552 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 12:24:53.552 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 12:24:53.553 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-26 12:24:53.553 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-26 12:24:53.553 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-26 12:24:53.553 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 12:24:53.554 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-26 12:24:53.556 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-26 12:24:53.558 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 12:24:53.558 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 12:24:53.558 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 12:24:53.558 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1775349092 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1166754951 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1392602264 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@694841823 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1303659291 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 12:24:53.558 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 12:24:53.559 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 12:24:53.559 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 12:24:53.559 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 12:24:53.559 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 12:24:53.559 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 12:24:53.559 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 12:24:53.559 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 12:24:53.560 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 12:24:53.560 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1613461828
[DEBUG] 2024-11-26 12:24:53.560 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1603095377
[DEBUG] 2024-11-26 12:24:53.560 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1603095377
[DEBUG] 2024-11-26 12:24:53.560 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-26 12:24:53.560 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 12:24:53.560 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55821edf
[DEBUG] 2024-11-26 12:24:53.560 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 12:24:53.560 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 12:24:53.809 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 12:24:53.809 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1071364078 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@851478032 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1156336184 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1968179698 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@391554161 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 12:24:53.809 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 12:24:53.811 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 12:24:53.811 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 12:24:53.811 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 12:24:53.811 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 12:24:53.812 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 12:24:53.812 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 12:24:53.812 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 12:24:53.812 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 12:24:53.812 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1392412640
[DEBUG] 2024-11-26 12:24:53.812 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@926498219
[DEBUG] 2024-11-26 12:24:53.812 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@926498219
[DEBUG] 2024-11-26 12:24:53.812 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 12:24:53.812 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 12:24:53.812 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4866a755
[DEBUG] 2024-11-26 12:24:53.812 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 12:24:53.812 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 12:24:53.830 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 12:24:53.831 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@325183616 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@889633931 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1269566437 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@915231178 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@708090483 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 12:24:53.831 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 12:24:53.832 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 12:24:53.832 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 12:24:53.832 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 12:24:53.832 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 12:24:53.832 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 12:24:53.832 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 12:24:53.832 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 12:24:53.832 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 12:24:53.832 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1767304024
[DEBUG] 2024-11-26 12:24:53.832 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2147434909
[DEBUG] 2024-11-26 12:24:53.832 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2147434909
[DEBUG] 2024-11-26 12:24:53.832 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 12:24:53.833 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 12:24:53.833 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6127ef86
[DEBUG] 2024-11-26 12:24:53.833 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 12:24:53.833 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:06:13.022 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 16:06:13.031 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-26 16:06:13.062 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-26 16:06:13.064 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-26 16:06:13.115 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-26 16:06:13.121 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-26 16:06:13.285 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-26 16:06:13.288 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-26 16:06:13.288 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-26 16:06:13.289 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-26 16:06:13.289 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-26 16:06:13.290 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-26 16:06:13.291 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-26 16:06:13.291 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-26 16:06:13.292 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-26 16:06:13.292 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-26 16:06:13.293 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-26 16:06:13.293 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-26 16:06:13.294 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-26 16:06:13.305 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-26 16:06:13.306 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-26 16:06:13.400 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 16:06:13.400 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 16:06:13.400 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 16:06:13.400 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-26 16:06:13.400 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-26 16:06:13.400 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-26 16:06:13.400 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-26 16:06:13.400 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-26 16:06:13.400 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-26 16:06:13.401 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 16:06:13.401 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 16:06:13.401 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 16:06:13.401 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 16:06:13.401 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 16:06:13.401 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 16:06:13.401 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-26 16:06:13.401 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-26 16:06:13.401 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-26 16:06:13.401 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-26 16:06:13.401 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-26 16:06:13.401 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-26 16:06:13.402 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-26 16:06:13.402 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 16:06:13.402 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 16:06:13.402 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 16:06:13.402 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 16:06:13.402 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 16:06:13.402 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 16:06:13.402 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 16:06:13.402 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 16:06:13.402 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 16:06:13.402 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 16:06:13.402 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 16:06:13.403 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 16:06:13.403 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 16:06:13.403 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 16:06:13.403 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 16:06:13.403 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-26 16:06:13.403 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-26 16:06:13.403 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-26 16:06:13.403 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-26 16:06:13.403 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 16:06:13.403 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 16:06:13.403 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 16:06:13.403 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-26 16:06:13.404 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-26 16:06:13.404 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-26 16:06:13.404 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-26 16:06:13.404 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 16:06:13.404 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 16:06:13.404 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 16:06:13.404 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-26 16:06:13.404 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-26 16:06:13.404 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-26 16:06:13.404 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-26 16:06:13.404 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-26 16:06:13.404 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-26 16:06:13.404 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-26 16:06:13.405 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-26 16:06:13.405 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-26 16:06:13.405 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-26 16:06:13.405 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-26 16:06:13.405 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-26 16:06:13.405 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-26 16:06:13.405 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-26 16:06:13.405 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-26 16:06:13.405 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-26 16:06:13.405 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-26 16:06:13.405 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-26 16:06:13.406 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-26 16:06:13.406 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-26 16:06:13.406 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-26 16:06:13.406 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-26 16:06:13.406 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-26 16:06:13.406 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-26 16:06:13.406 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-26 16:06:13.406 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-26 16:06:13.406 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-26 16:06:13.406 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-26 16:06:13.406 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-26 16:06:13.406 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-26 16:06:13.406 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-26 16:06:13.406 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-26 16:06:13.407 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-26 16:06:13.407 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-26 16:06:13.407 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-26 16:06:13.407 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-26 16:06:13.407 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-26 16:06:13.407 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-26 16:06:13.407 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 16:06:13.407 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 16:06:13.407 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 16:06:13.407 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 16:06:13.407 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 16:06:13.407 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 16:06:13.407 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-26 16:06:13.407 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-26 16:06:13.408 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-26 16:06:13.408 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-26 16:06:13.408 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 16:06:13.408 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 16:06:13.408 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 16:06:13.408 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-26 16:06:13.408 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-26 16:06:13.408 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-26 16:06:13.408 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-26 16:06:13.408 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 16:06:13.408 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 16:06:13.408 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 16:06:13.409 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-26 16:06:13.409 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-26 16:06:13.409 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-26 16:06:13.409 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-26 16:06:13.409 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-26 16:06:13.409 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-26 16:06:13.409 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-26 16:06:13.409 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-26 16:06:13.409 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-26 16:06:13.409 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-26 16:06:13.409 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-26 16:06:13.409 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-26 16:06:13.414 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-26 16:06:13.414 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-26 16:06:13.415 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@491f8831
[DEBUG] 2024-11-26 16:06:13.416 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@691541bc
[DEBUG] 2024-11-26 16:06:13.416 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b733ef7
[DEBUG] 2024-11-26 16:06:13.416 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43a4a9e5
[DEBUG] 2024-11-26 16:06:13.416 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@764fffa0
[DEBUG] 2024-11-26 16:06:13.416 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35145874
[DEBUG] 2024-11-26 16:06:13.416 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77524ca7
[DEBUG] 2024-11-26 16:06:13.416 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11df2829
[DEBUG] 2024-11-26 16:06:13.416 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18e4674d
[INFO ] 2024-11-26 16:06:13.446 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-26 16:06:13.446 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-26 16:06:13.446 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-26 16:06:13.535 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-26 16:06:13.598 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-26 16:06:13.599 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-26 16:06:13.599 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-26 16:06:13.645 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-26 16:06:13.646 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-26 16:06:13.653 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-26 16:06:13.653 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-26 16:06:13.667 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eaf8427) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c)
[DEBUG] 2024-11-26 16:06:13.667 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d6039df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae)
[DEBUG] 2024-11-26 16:06:13.667 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e00016) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3cbe6e)
[DEBUG] 2024-11-26 16:06:13.667 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@177ede17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17176b18)
[DEBUG] 2024-11-26 16:06:13.667 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e4395c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab53860)
[DEBUG] 2024-11-26 16:06:13.668 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5ac347) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b9389f)
[DEBUG] 2024-11-26 16:06:13.668 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b2c5ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41f785e3)
[DEBUG] 2024-11-26 16:06:13.668 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9a3661) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727986ad)
[DEBUG] 2024-11-26 16:06:13.668 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1600a8a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b25ef1c)
[DEBUG] 2024-11-26 16:06:13.669 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-26 16:06:13.669 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-26 16:06:13.670 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-26 16:06:13.672 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-26 16:06:13.672 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-26 16:06:13.674 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@383cdd4d
[DEBUG] 2024-11-26 16:06:13.675 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@491f8831`
[DEBUG] 2024-11-26 16:06:13.680 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 16:06:13.680 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 16:06:13.680 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 16:06:13.683 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 16:06:13.684 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 16:06:13.684 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 16:06:13.684 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 16:06:13.684 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 16:06:13.684 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 16:06:13.684 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 16:06:13.684 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 16:06:13.685 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 16:06:13.686 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71369e1a]
[DEBUG] 2024-11-26 16:06:13.724 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-26 16:06:13.751 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-26 16:06:13.758 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-26 16:06:13.765 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-26 16:06:13.773 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 16:06:13.790 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:06:13.791 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-26 16:06:13.791 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-26 16:06:13.793 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 16:06:13.797 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-26 16:06:13.801 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 16:06:13.804 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-26 16:06:13.804 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 16:06:13.808 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 16:06:13.814 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 16:06:13.814 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:06:13.824 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-26 16:06:13.826 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:06:13.826 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-26 16:06:13.827 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-26 16:06:13.828 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 16:06:13.828 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 16:06:13.831 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 16:06:13.833 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-26 16:06:13.834 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-26 16:06:13.834 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-26 16:06:13.834 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-26 16:06:13.834 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-26 16:06:13.834 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-26 16:06:13.834 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-26 16:06:13.835 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 16:06:13.839 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-26 16:06:13.839 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-26 16:06:13.840 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-26 16:06:13.840 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 16:06:13.841 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:06:13.841 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-26 16:06:13.841 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-26 16:06:13.841 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 16:06:13.841 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-26 16:06:13.841 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 16:06:13.841 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-26 16:06:13.841 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 16:06:13.841 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 16:06:13.842 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-26 16:06:13.842 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-26 16:06:13.842 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-26 16:06:13.842 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-26 16:06:13.842 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-26 16:06:13.842 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-26 16:06:13.842 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 16:06:13.842 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:06:13.842 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-26 16:06:13.843 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:06:13.843 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-26 16:06:13.843 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-26 16:06:13.843 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 16:06:13.843 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 16:06:13.843 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 16:06:13.843 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-26 16:06:13.844 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 16:06:13.844 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-26 16:06:13.845 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-26 16:06:13.845 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-26 16:06:13.845 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 16:06:13.848 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:06:13.848 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-26 16:06:13.848 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-26 16:06:13.848 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 16:06:13.848 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-26 16:06:13.849 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 16:06:13.849 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-26 16:06:13.849 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 16:06:13.849 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 16:06:13.849 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-26 16:06:13.849 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:06:13.852 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-26 16:06:13.852 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-26 16:06:13.852 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-26 16:06:13.852 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-26 16:06:13.852 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-26 16:06:13.853 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-26 16:06:13.853 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-26 16:06:13.853 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-26 16:06:13.853 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:06:13.853 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-26 16:06:13.853 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 16:06:13.854 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 16:06:13.854 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-26 16:06:13.856 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 16:06:13.856 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-26 16:06:13.856 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 16:06:13.856 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-26 16:06:13.860 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-26 16:06:13.860 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-26 16:06:13.860 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-26 16:06:13.860 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 16:06:13.862 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-26 16:06:13.864 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-26 16:06:13.865 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-26 16:06:13.866 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-26 16:06:13.866 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 16:06:13.866 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-26 16:06:13.866 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-26 16:06:13.866 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-26 16:06:13.866 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-26 16:06:13.867 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-26 16:06:13.867 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-26 16:06:13.875 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-26 16:06:13.875 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-26 16:06:14.066 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-26 16:06:14.105 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-26 16:06:14.105 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter17840948850317888123.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire2336753557509977149tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_015504502496860516971tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter17840948850317888123.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d7d8911, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-26 16:06:14.109 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-26 16:06:14.115 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-26 16:06:14.160 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-26 16:06:14.161 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-26 16:06:14.161 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-26 16:06:14.162 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-26 16:06:14.163 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@20184ade] under count; prior registration was null
[DEBUG] 2024-11-26 16:06:14.164 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@77204651] under every; prior registration was null
[DEBUG] 2024-11-26 16:06:14.164 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@51cca357] under any; prior registration was null
[DEBUG] 2024-11-26 16:06:14.164 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-26 16:06:14.165 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-26 16:06:14.165 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-26 16:06:14.165 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-26 16:06:14.165 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-26 16:06:14.165 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-26 16:06:14.165 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-26 16:06:14.165 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-26 16:06:14.165 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-26 16:06:14.165 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-26 16:06:14.165 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-26 16:06:14.165 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-26 16:06:14.166 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-26 16:06:14.166 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-26 16:06:14.166 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-26 16:06:14.166 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-26 16:06:14.166 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-26 16:06:14.167 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350342e0] under sinh; prior registration was null
[DEBUG] 2024-11-26 16:06:14.167 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d] under cosh; prior registration was null
[DEBUG] 2024-11-26 16:06:14.168 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289] under tanh; prior registration was null
[DEBUG] 2024-11-26 16:06:14.168 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cc56b32] under pi; prior registration was null
[DEBUG] 2024-11-26 16:06:14.168 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43fe2008] under log; prior registration was null
[DEBUG] 2024-11-26 16:06:14.168 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-26 16:06:14.168 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-26 16:06:14.168 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-26 16:06:14.168 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-26 16:06:14.168 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-26 16:06:14.169 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-26 16:06:14.169 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-26 16:06:14.169 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-26 16:06:14.169 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-26 16:06:14.169 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-26 16:06:14.169 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-26 16:06:14.169 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-26 16:06:14.170 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3de45b6c] under position; prior registration was null
[DEBUG] 2024-11-26 16:06:14.172 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2fdf7da2] under overlay; prior registration was null
[DEBUG] 2024-11-26 16:06:14.172 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@54d60fa1] under trim; prior registration was null
[DEBUG] 2024-11-26 16:06:14.173 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5c79c5ec] under cast; prior registration was null
[DEBUG] 2024-11-26 16:06:14.173 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@34eaf9c1] under collate; prior registration was null
[DEBUG] 2024-11-26 16:06:14.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@248b2b61] under extract; prior registration was null
[DEBUG] 2024-11-26 16:06:14.174 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-26 16:06:14.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-26 16:06:14.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4ca5cb99] under ifnull; prior registration was null
[DEBUG] 2024-11-26 16:06:14.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-26 16:06:14.175 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-26 16:06:14.176 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@70169464] under pad; prior registration was null
[DEBUG] 2024-11-26 16:06:14.176 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@590dea35] under str; prior registration was null
[DEBUG] 2024-11-26 16:06:14.178 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1bb172dd] under format; prior registration was null
[DEBUG] 2024-11-26 16:06:14.178 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6106dfb6] under timestampadd; prior registration was null
[DEBUG] 2024-11-26 16:06:14.179 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3593e074] under timestampdiff; prior registration was null
[DEBUG] 2024-11-26 16:06:14.179 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-26 16:06:14.179 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-26 16:06:14.179 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e0fdc83] under current_date; prior registration was null
[DEBUG] 2024-11-26 16:06:14.179 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5dacf18d] under current_time; prior registration was null
[DEBUG] 2024-11-26 16:06:14.179 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@432a6a69] under current_timestamp; prior registration was null
[DEBUG] 2024-11-26 16:06:14.179 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-26 16:06:14.179 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-26 16:06:14.180 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-26 16:06:14.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f52a229] under local_date; prior registration was null
[DEBUG] 2024-11-26 16:06:14.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fe98084] under local_time; prior registration was null
[DEBUG] 2024-11-26 16:06:14.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f33e6d] under local_datetime; prior registration was null
[DEBUG] 2024-11-26 16:06:14.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@151a6598] under offset_datetime; prior registration was null
[DEBUG] 2024-11-26 16:06:14.180 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-26 16:06:14.180 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-26 16:06:14.180 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-26 16:06:14.180 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-26 16:06:14.180 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6fa3def8] under instant; prior registration was null
[DEBUG] 2024-11-26 16:06:14.180 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-26 16:06:14.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@37f41a81] under sql; prior registration was null
[DEBUG] 2024-11-26 16:06:14.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-26 16:06:14.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-26 16:06:14.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-26 16:06:14.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-26 16:06:14.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43fe2008
[DEBUG] 2024-11-26 16:06:14.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-26 16:06:14.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-26 16:06:14.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-26 16:06:14.181 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-26 16:06:14.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-26 16:06:14.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-26 16:06:14.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-26 16:06:14.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-26 16:06:14.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@12548f9a] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-26 16:06:14.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@156ff70f] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-26 16:06:14.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-26 16:06:14.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-26 16:06:14.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-26 16:06:14.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-26 16:06:14.182 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-26 16:06:14.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-26 16:06:14.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-26 16:06:14.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-26 16:06:14.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-26 16:06:14.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-26 16:06:14.183 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-26 16:06:14.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-26 16:06:14.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-26 16:06:14.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-26 16:06:14.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-26 16:06:14.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-26 16:06:14.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-26 16:06:14.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-26 16:06:14.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-26 16:06:14.183 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c5a2d5] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3de45b6c
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-26 16:06:14.184 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-26 16:06:14.188 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@45dc7be] under trunc; prior registration was null
[DEBUG] 2024-11-26 16:06:14.188 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-26 16:06:14.188 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-26 16:06:14.188 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under bitand; prior registration was null
[DEBUG] 2024-11-26 16:06:14.188 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under bitor; prior registration was null
[DEBUG] 2024-11-26 16:06:14.188 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d664323] under bitxor; prior registration was null
[DEBUG] 2024-11-26 16:06:14.188 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ec0d06] under bitnot; prior registration was null
[DEBUG] 2024-11-26 16:06:14.188 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-26 16:06:14.188 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-26 16:06:14.188 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-26 16:06:14.188 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2676d96a] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1bb172dd
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3fe98084
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5f33e6d
[DEBUG] 2024-11-26 16:06:14.189 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-26 16:06:14.190 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cc56b32
[DEBUG] 2024-11-26 16:06:14.190 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6da646b8] under chr; prior registration was null
[DEBUG] 2024-11-26 16:06:14.190 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-26 16:06:14.190 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a65e237] under sysdate; prior registration was null
[DEBUG] 2024-11-26 16:06:14.190 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-26 16:06:14.190 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-26 16:06:14.190 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-26 16:06:14.190 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-26 16:06:14.190 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-26 16:06:14.190 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-26 16:06:14.191 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5aac6f9f] under rank; prior registration was null
[DEBUG] 2024-11-26 16:06:14.192 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2444c3df] under dense_rank; prior registration was null
[DEBUG] 2024-11-26 16:06:14.192 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1eb6037d] under percent_rank; prior registration was null
[DEBUG] 2024-11-26 16:06:14.192 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@335b3d6] under cume_dist; prior registration was null
[DEBUG] 2024-11-26 16:06:14.192 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@38826984] under listagg; prior registration was null
[DEBUG] 2024-11-26 16:06:14.196 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.196 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.196 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-26 16:06:14.196 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-26 16:06:14.196 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-26 16:06:14.196 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-26 16:06:14.196 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.196 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.196 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-26 16:06:14.196 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-26 16:06:14.196 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-26 16:06:14.196 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-26 16:06:14.197 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-26 16:06:14.198 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-26 16:06:14.198 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-26 16:06:14.198 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-26 16:06:14.198 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-26 16:06:14.198 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-26 16:06:14.198 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-26 16:06:14.198 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-26 16:06:14.198 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-26 16:06:14.198 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-26 16:06:14.199 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-26 16:06:14.200 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-26 16:06:14.201 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-26 16:06:14.202 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-26 16:06:14.202 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-26 16:06:14.202 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-26 16:06:14.202 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-26 16:06:14.202 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-26 16:06:14.202 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-26 16:06:14.202 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-26 16:06:14.202 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-26 16:06:14.202 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.202 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.202 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-26 16:06:14.202 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-26 16:06:14.202 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-26 16:06:14.206 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-26 16:06:14.317 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-26 16:06:14.318 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-26 16:06:14.430 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 16:06:14.434 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 16:06:14.437 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 16:06:14.437 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 16:06:14.437 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-26 16:06:14.437 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-26 16:06:14.619 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-26 16:06:14.623 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 16:06:14.623 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 16:06:14.653 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-26 16:06:14.653 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-26 16:06:14.668 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-26 16:06:14.669 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-26 16:06:14.669 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-26 16:06:14.678 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-26 16:06:14.694 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 16:06:14.695 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 16:06:14.695 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 16:06:14.696 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 16:06:14.696 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 16:06:14.696 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 16:06:14.724 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-26 16:06:14.724 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-26 16:06:14.728 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-26 16:06:14.728 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-26 16:06:14.728 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-26 16:06:14.728 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-26 16:06:14.728 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-26 16:06:14.728 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-26 16:06:14.728 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-26 16:06:14.728 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-26 16:06:14.728 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-26 16:06:14.728 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-26 16:06:14.728 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-26 16:06:14.728 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-26 16:06:14.799 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 16:06:14.800 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-26 16:06:14.810 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4687366b] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-26 16:06:14.811 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 16:06:14.815 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@96dfcbb] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-26 16:06:14.816 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 16:06:14.820 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-26 16:06:14.830 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 16:06:14.840 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-26 16:06:14.840 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-26 16:06:14.840 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-26 16:06:14.840 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-26 16:06:14.840 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-26 16:06:14.841 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 16:06:14.841 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-26 16:06:14.841 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 16:06:14.843 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@50930bff] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 16:06:14.844 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 16:06:14.850 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7978550b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 16:06:14.851 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 16:06:14.852 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-26 16:06:14.853 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 16:06:14.853 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-26 16:06:14.853 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-26 16:06:14.853 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-26 16:06:14.853 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-26 16:06:14.853 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-26 16:06:14.853 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 16:06:14.853 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-26 16:06:14.853 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-26 16:06:14.853 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@56d742ad] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-26 16:06:14.853 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-26 16:06:14.853 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@75784062] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-26 16:06:14.853 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 16:06:14.854 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-26 16:06:14.854 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 16:06:14.854 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-26 16:06:14.854 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-26 16:06:14.854 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-26 16:06:14.854 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-26 16:06:14.854 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-26 16:06:14.855 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-26 16:06:14.855 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@4da9da6c] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-26 16:06:14.855 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-26 16:06:14.856 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64a8d575] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-26 16:06:14.856 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 16:06:14.856 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51fa09c7] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-26 16:06:14.857 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-26 16:06:14.858 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 16:06:14.858 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 16:06:14.858 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 16:06:14.858 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2bda7a5b] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 16:06:14.858 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 16:06:14.858 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@47374fa5] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-26 16:06:14.858 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@289da1bc] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 16:06:14.858 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 16:06:14.858 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-26 16:06:14.858 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 16:06:14.859 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 16:06:14.886 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-26 16:06:14.887 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-26 16:06:14.891 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-26 16:06:14.891 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-26 16:06:14.892 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@23dc70c1]
[DEBUG] 2024-11-26 16:06:14.893 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-26 16:06:14.893 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-26 16:06:14.893 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-26 16:06:14.893 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-26 16:06:14.895 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@29431f61
[DEBUG] 2024-11-26 16:06:14.895 [main] SessionFactoryRegistry - Registering SessionFactory: ffe0472c-eaed-434f-bf2e-4ca6a24415c0 (<unnamed>)
[DEBUG] 2024-11-26 16:06:14.895 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-26 16:06:14.895 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-26 16:06:14.932 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-26 16:06:14.948 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:06:14.966 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@392189111 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@1409842139 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1484744244 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1300011842)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@102849021 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@686350055 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@2084023356)

[DEBUG] 2024-11-26 16:06:14.972 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-26 16:06:14.989 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:06:14.990 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:06:14.991 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@2113710566 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@125246542 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@289039926 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1300011842)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@1661349610 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@2074941685 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@2084023356)

[DEBUG] 2024-11-26 16:06:14.991 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-26 16:06:14.992 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:06:15.073 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:06:15.073 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1533375298 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1160651280 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@415297573 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1750040348 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1778465757 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 16:06:15.073 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:06:15.076 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 16:06:15.076 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 16:06:15.076 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 16:06:15.076 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 16:06:15.076 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 16:06:15.076 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 16:06:15.077 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 16:06:15.077 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 16:06:15.078 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 203715427
[DEBUG] 2024-11-26 16:06:15.083 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1294553325
[DEBUG] 2024-11-26 16:06:15.085 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1294553325
[DEBUG] 2024-11-26 16:06:15.085 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 16:06:15.089 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 16:06:15.089 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6655f3cd
[DEBUG] 2024-11-26 16:06:15.092 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:06:15.092 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:06:15.095 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 16:06:15.095 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 16:06:15.103 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 16:06:15.104 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 16:06:15.104 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 16:06:15.107 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:06:15.110 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-26 16:06:15.110 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-26 16:06:15.110 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 16:06:15.111 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-26 16:06:15.118 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-26 16:06:15.121 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:06:15.121 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:06:15.122 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:06:15.122 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1139305484 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@208427214 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1833726536 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@395229891 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@386284594 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 16:06:15.122 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:06:15.123 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:06:15.199 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 16:06:15.199 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 16:06:15.200 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-26 16:06:15.202 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-26 16:06:15.208 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-26 16:06:15.208 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-26 16:06:15.209 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-26 16:06:15.212 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-26 16:06:15.212 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-26 16:06:15.214 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-26 16:06:15.214 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-26 16:06:15.214 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-26 16:06:15.215 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 16:06:15.215 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 16:06:15.215 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 16:06:15.215 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-26 16:06:15.216 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-26 16:06:15.216 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-26 16:06:15.216 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 16:06:15.216 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-26 16:06:15.216 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-26 16:06:15.218 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:06:15.219 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:06:15.220 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:06:15.220 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1384781563 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@913564177 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1972176213 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1215858771 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1254584937 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 16:06:15.220 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:06:15.221 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 16:06:15.221 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 16:06:15.221 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-26 16:06:15.222 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-26 16:06:15.222 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-26 16:06:15.222 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-26 16:06:15.222 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-26 16:06:15.222 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-26 16:06:15.222 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 907314155
[DEBUG] 2024-11-26 16:06:15.222 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 1917593312
[DEBUG] 2024-11-26 16:06:15.222 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1616242841
[DEBUG] 2024-11-26 16:06:15.222 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1616242841
[DEBUG] 2024-11-26 16:06:15.222 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-26 16:06:15.222 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-26 16:06:15.222 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1616242841
[DEBUG] 2024-11-26 16:06:15.223 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-26 16:06:15.223 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-26 16:06:15.223 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@478cebdb
[DEBUG] 2024-11-26 16:06:15.223 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-26 16:06:15.223 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:06:15.296 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:06:15.296 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@551821075 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1874842251 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1067780644 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1476664081 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1478007685 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 16:06:15.296 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:06:15.298 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 16:06:15.298 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 16:06:15.298 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 16:06:15.298 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 16:06:15.298 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 16:06:15.298 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 16:06:15.298 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 16:06:15.298 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 16:06:15.298 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 949483950
[DEBUG] 2024-11-26 16:06:15.298 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1819701896
[DEBUG] 2024-11-26 16:06:15.299 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1819701896
[DEBUG] 2024-11-26 16:06:15.299 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 16:06:15.299 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 16:06:15.299 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@510e6b93
[DEBUG] 2024-11-26 16:06:15.299 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:06:15.299 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:06:15.299 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 16:06:15.299 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 16:06:15.301 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 16:06:15.301 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-26 16:06:15.301 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 16:06:15.302 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7272914b] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 16:06:15.302 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 16:06:15.302 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@663f24e6] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 16:06:15.302 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 16:06:15.302 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-26 16:06:15.302 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 16:06:15.302 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:06:15.303 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1108674897 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@613097617 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@990656754 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1556173561 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@921999281 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 16:06:15.303 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:06:15.304 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 16:06:15.304 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 16:06:15.305 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 16:06:15.305 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 16:06:15.305 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 16:06:15.305 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 16:06:15.305 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 16:06:15.305 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 16:06:15.305 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 81639848
[DEBUG] 2024-11-26 16:06:15.305 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2066011620
[DEBUG] 2024-11-26 16:06:15.305 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2066011620
[DEBUG] 2024-11-26 16:06:15.305 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 16:06:15.305 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 16:06:15.305 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c3c31a5
[DEBUG] 2024-11-26 16:06:15.305 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:06:15.305 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:06:15.306 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 16:06:15.306 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 16:06:15.306 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 16:06:15.307 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-26 16:06:15.307 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-26 16:06:15.307 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-26 16:06:15.307 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 16:06:15.307 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-26 16:06:15.309 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-26 16:06:15.311 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:06:15.311 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:06:15.312 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:06:15.312 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1392602264 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@694841823 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1303659291 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1384421718 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@179915314 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 16:06:15.312 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:06:15.313 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 16:06:15.313 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 16:06:15.313 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 16:06:15.313 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 16:06:15.313 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 16:06:15.313 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 16:06:15.313 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 16:06:15.313 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 16:06:15.313 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1434590943
[DEBUG] 2024-11-26 16:06:15.313 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1582967668
[DEBUG] 2024-11-26 16:06:15.313 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1582967668
[DEBUG] 2024-11-26 16:06:15.313 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-26 16:06:15.313 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 16:06:15.314 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@658098a2
[DEBUG] 2024-11-26 16:06:15.314 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:06:15.314 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:06:15.473 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:06:15.474 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1071364078 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@851478032 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1156336184 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1968179698 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@391554161 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 16:06:15.474 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:06:15.475 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 16:06:15.475 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 16:06:15.475 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 16:06:15.475 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 16:06:15.475 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 16:06:15.476 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 16:06:15.476 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 16:06:15.476 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 16:06:15.476 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1392412640
[DEBUG] 2024-11-26 16:06:15.476 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@926498219
[DEBUG] 2024-11-26 16:06:15.476 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@926498219
[DEBUG] 2024-11-26 16:06:15.476 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 16:06:15.476 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 16:06:15.476 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4866a755
[DEBUG] 2024-11-26 16:06:15.476 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:06:15.476 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:06:15.477 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:06:15.477 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@325183616 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@363003357)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@889633931 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1269566437 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@915231178 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@708090483 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1577826863)

[DEBUG] 2024-11-26 16:06:15.477 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:06:15.478 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 16:06:15.478 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 16:06:15.478 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 16:06:15.478 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 16:06:15.478 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 16:06:15.478 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 16:06:15.478 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 16:06:15.478 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 16:06:15.478 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1767304024
[DEBUG] 2024-11-26 16:06:15.478 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2147434909
[DEBUG] 2024-11-26 16:06:15.478 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2147434909
[DEBUG] 2024-11-26 16:06:15.479 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 16:06:15.479 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 16:06:15.479 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6127ef86
[DEBUG] 2024-11-26 16:06:15.479 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:06:15.479 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:08:46.666 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 16:08:46.672 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-26 16:08:46.703 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-26 16:08:46.705 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-26 16:08:46.756 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-26 16:08:46.762 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-26 16:08:46.929 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-26 16:08:46.933 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-26 16:08:46.934 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-26 16:08:46.935 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-26 16:08:46.935 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-26 16:08:46.935 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-26 16:08:46.936 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-26 16:08:46.936 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-26 16:08:46.938 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-26 16:08:46.938 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-26 16:08:46.938 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-26 16:08:46.939 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-26 16:08:46.939 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-26 16:08:46.947 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-26 16:08:46.948 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-26 16:08:47.042 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 16:08:47.042 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 16:08:47.042 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 16:08:47.042 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-26 16:08:47.042 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-26 16:08:47.042 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-26 16:08:47.042 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-26 16:08:47.042 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-26 16:08:47.042 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-26 16:08:47.042 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 16:08:47.043 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 16:08:47.043 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 16:08:47.043 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 16:08:47.043 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 16:08:47.043 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 16:08:47.043 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-26 16:08:47.043 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-26 16:08:47.043 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-26 16:08:47.043 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-26 16:08:47.043 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-26 16:08:47.043 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-26 16:08:47.043 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-26 16:08:47.043 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 16:08:47.044 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 16:08:47.044 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 16:08:47.044 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 16:08:47.044 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 16:08:47.044 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 16:08:47.044 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 16:08:47.044 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 16:08:47.044 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 16:08:47.044 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 16:08:47.044 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 16:08:47.044 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 16:08:47.044 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 16:08:47.045 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 16:08:47.045 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 16:08:47.045 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-26 16:08:47.045 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-26 16:08:47.045 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-26 16:08:47.045 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-26 16:08:47.045 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 16:08:47.045 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 16:08:47.045 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 16:08:47.045 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-26 16:08:47.045 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-26 16:08:47.046 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-26 16:08:47.046 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-26 16:08:47.046 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 16:08:47.046 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 16:08:47.046 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 16:08:47.046 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-26 16:08:47.046 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-26 16:08:47.046 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-26 16:08:47.046 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-26 16:08:47.046 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-26 16:08:47.046 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-26 16:08:47.046 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-26 16:08:47.047 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-26 16:08:47.047 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-26 16:08:47.047 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-26 16:08:47.047 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-26 16:08:47.047 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-26 16:08:47.047 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-26 16:08:47.047 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-26 16:08:47.047 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-26 16:08:47.047 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-26 16:08:47.047 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-26 16:08:47.047 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-26 16:08:47.047 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-26 16:08:47.048 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-26 16:08:47.048 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-26 16:08:47.048 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-26 16:08:47.048 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-26 16:08:47.048 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-26 16:08:47.048 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-26 16:08:47.048 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-26 16:08:47.048 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-26 16:08:47.048 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-26 16:08:47.048 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-26 16:08:47.048 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-26 16:08:47.048 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-26 16:08:47.048 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-26 16:08:47.049 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-26 16:08:47.049 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-26 16:08:47.049 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-26 16:08:47.049 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-26 16:08:47.049 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-26 16:08:47.049 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-26 16:08:47.049 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 16:08:47.049 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 16:08:47.049 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 16:08:47.049 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 16:08:47.049 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 16:08:47.049 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 16:08:47.049 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-26 16:08:47.049 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-26 16:08:47.050 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-26 16:08:47.050 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-26 16:08:47.050 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 16:08:47.050 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 16:08:47.050 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 16:08:47.050 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-26 16:08:47.050 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-26 16:08:47.050 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-26 16:08:47.050 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-26 16:08:47.050 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 16:08:47.050 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 16:08:47.051 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 16:08:47.051 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-26 16:08:47.051 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-26 16:08:47.051 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-26 16:08:47.051 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-26 16:08:47.051 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-26 16:08:47.051 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-26 16:08:47.051 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-26 16:08:47.051 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-26 16:08:47.051 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-26 16:08:47.051 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-26 16:08:47.051 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-26 16:08:47.051 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-26 16:08:47.056 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-26 16:08:47.056 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-26 16:08:47.057 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@491f8831
[DEBUG] 2024-11-26 16:08:47.058 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@691541bc
[DEBUG] 2024-11-26 16:08:47.058 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b733ef7
[DEBUG] 2024-11-26 16:08:47.058 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43a4a9e5
[DEBUG] 2024-11-26 16:08:47.058 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@764fffa0
[DEBUG] 2024-11-26 16:08:47.058 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35145874
[DEBUG] 2024-11-26 16:08:47.058 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77524ca7
[DEBUG] 2024-11-26 16:08:47.058 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11df2829
[DEBUG] 2024-11-26 16:08:47.058 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18e4674d
[INFO ] 2024-11-26 16:08:47.087 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-26 16:08:47.087 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-26 16:08:47.087 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-26 16:08:47.176 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-26 16:08:47.241 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-26 16:08:47.241 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-26 16:08:47.242 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-26 16:08:47.283 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-26 16:08:47.284 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-26 16:08:47.291 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-26 16:08:47.291 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-26 16:08:47.306 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eaf8427) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c)
[DEBUG] 2024-11-26 16:08:47.306 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d6039df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae)
[DEBUG] 2024-11-26 16:08:47.306 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e00016) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3cbe6e)
[DEBUG] 2024-11-26 16:08:47.306 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@177ede17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17176b18)
[DEBUG] 2024-11-26 16:08:47.306 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e4395c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab53860)
[DEBUG] 2024-11-26 16:08:47.306 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5ac347) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b9389f)
[DEBUG] 2024-11-26 16:08:47.306 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b2c5ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41f785e3)
[DEBUG] 2024-11-26 16:08:47.306 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9a3661) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727986ad)
[DEBUG] 2024-11-26 16:08:47.307 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1600a8a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b25ef1c)
[DEBUG] 2024-11-26 16:08:47.308 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-26 16:08:47.308 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-26 16:08:47.308 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-26 16:08:47.310 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-26 16:08:47.310 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-26 16:08:47.313 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@383cdd4d
[DEBUG] 2024-11-26 16:08:47.313 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@491f8831`
[DEBUG] 2024-11-26 16:08:47.318 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 16:08:47.319 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 16:08:47.319 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 16:08:47.322 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 16:08:47.322 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 16:08:47.322 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 16:08:47.322 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 16:08:47.322 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 16:08:47.323 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 16:08:47.323 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 16:08:47.323 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 16:08:47.323 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 16:08:47.324 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71369e1a]
[DEBUG] 2024-11-26 16:08:47.361 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-26 16:08:47.389 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-26 16:08:47.398 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-26 16:08:47.405 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-26 16:08:47.414 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 16:08:47.433 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:08:47.434 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-26 16:08:47.434 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-26 16:08:47.437 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 16:08:47.441 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-26 16:08:47.445 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 16:08:47.449 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-26 16:08:47.449 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 16:08:47.453 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 16:08:47.459 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 16:08:47.459 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:08:47.470 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-26 16:08:47.471 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:08:47.472 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-26 16:08:47.472 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-26 16:08:47.473 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 16:08:47.473 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 16:08:47.476 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 16:08:47.478 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-26 16:08:47.479 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-26 16:08:47.479 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-26 16:08:47.479 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-26 16:08:47.479 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-26 16:08:47.479 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-26 16:08:47.479 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-26 16:08:47.480 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 16:08:47.484 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-26 16:08:47.485 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-26 16:08:47.485 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-26 16:08:47.486 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 16:08:47.487 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:08:47.487 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-26 16:08:47.487 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-26 16:08:47.487 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 16:08:47.487 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-26 16:08:47.487 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 16:08:47.487 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-26 16:08:47.487 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 16:08:47.487 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 16:08:47.488 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-26 16:08:47.488 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-26 16:08:47.488 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-26 16:08:47.488 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-26 16:08:47.488 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-26 16:08:47.488 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-26 16:08:47.488 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 16:08:47.488 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:08:47.488 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-26 16:08:47.489 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:08:47.489 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-26 16:08:47.489 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-26 16:08:47.489 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 16:08:47.489 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 16:08:47.489 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 16:08:47.489 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-26 16:08:47.490 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 16:08:47.490 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-26 16:08:47.491 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-26 16:08:47.491 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-26 16:08:47.491 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 16:08:47.495 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:08:47.495 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-26 16:08:47.496 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-26 16:08:47.496 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 16:08:47.496 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-26 16:08:47.496 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 16:08:47.496 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-26 16:08:47.496 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 16:08:47.496 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 16:08:47.496 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-26 16:08:47.497 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:08:47.500 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-26 16:08:47.501 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-26 16:08:47.501 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-26 16:08:47.501 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-26 16:08:47.501 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-26 16:08:47.501 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-26 16:08:47.501 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-26 16:08:47.501 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-26 16:08:47.502 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 16:08:47.502 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-26 16:08:47.502 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 16:08:47.503 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 16:08:47.503 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-26 16:08:47.505 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 16:08:47.505 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-26 16:08:47.505 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 16:08:47.505 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-26 16:08:47.509 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-26 16:08:47.510 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-26 16:08:47.510 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-26 16:08:47.510 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 16:08:47.512 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-26 16:08:47.514 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-26 16:08:47.515 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-26 16:08:47.516 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-26 16:08:47.516 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 16:08:47.516 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-26 16:08:47.516 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-26 16:08:47.516 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-26 16:08:47.516 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-26 16:08:47.516 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-26 16:08:47.517 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-26 16:08:47.525 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-26 16:08:47.526 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-26 16:08:47.769 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-26 16:08:47.813 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-26 16:08:47.813 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter7469206773131828392.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire5430229653665562213tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_012497639791353115363tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter7469206773131828392.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d7d8911, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-26 16:08:47.818 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-26 16:08:47.824 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-26 16:08:47.871 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-26 16:08:47.871 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-26 16:08:47.871 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-26 16:08:47.872 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-26 16:08:47.873 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@20184ade] under count; prior registration was null
[DEBUG] 2024-11-26 16:08:47.874 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@77204651] under every; prior registration was null
[DEBUG] 2024-11-26 16:08:47.874 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@51cca357] under any; prior registration was null
[DEBUG] 2024-11-26 16:08:47.874 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-26 16:08:47.874 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-26 16:08:47.874 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-26 16:08:47.874 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-26 16:08:47.874 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-26 16:08:47.874 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-26 16:08:47.875 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-26 16:08:47.875 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-26 16:08:47.875 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-26 16:08:47.875 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-26 16:08:47.875 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-26 16:08:47.875 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-26 16:08:47.875 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-26 16:08:47.875 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-26 16:08:47.875 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-26 16:08:47.875 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-26 16:08:47.876 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-26 16:08:47.877 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350342e0] under sinh; prior registration was null
[DEBUG] 2024-11-26 16:08:47.877 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d] under cosh; prior registration was null
[DEBUG] 2024-11-26 16:08:47.877 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289] under tanh; prior registration was null
[DEBUG] 2024-11-26 16:08:47.877 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cc56b32] under pi; prior registration was null
[DEBUG] 2024-11-26 16:08:47.878 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43fe2008] under log; prior registration was null
[DEBUG] 2024-11-26 16:08:47.878 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-26 16:08:47.878 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-26 16:08:47.878 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-26 16:08:47.878 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-26 16:08:47.878 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-26 16:08:47.878 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-26 16:08:47.878 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-26 16:08:47.879 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-26 16:08:47.879 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-26 16:08:47.879 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-26 16:08:47.879 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-26 16:08:47.879 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-26 16:08:47.880 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3de45b6c] under position; prior registration was null
[DEBUG] 2024-11-26 16:08:47.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2fdf7da2] under overlay; prior registration was null
[DEBUG] 2024-11-26 16:08:47.882 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@54d60fa1] under trim; prior registration was null
[DEBUG] 2024-11-26 16:08:47.883 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5c79c5ec] under cast; prior registration was null
[DEBUG] 2024-11-26 16:08:47.883 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@34eaf9c1] under collate; prior registration was null
[DEBUG] 2024-11-26 16:08:47.884 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@248b2b61] under extract; prior registration was null
[DEBUG] 2024-11-26 16:08:47.884 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-26 16:08:47.885 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-26 16:08:47.885 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4ca5cb99] under ifnull; prior registration was null
[DEBUG] 2024-11-26 16:08:47.885 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-26 16:08:47.885 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-26 16:08:47.886 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@70169464] under pad; prior registration was null
[DEBUG] 2024-11-26 16:08:47.886 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@590dea35] under str; prior registration was null
[DEBUG] 2024-11-26 16:08:47.888 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1bb172dd] under format; prior registration was null
[DEBUG] 2024-11-26 16:08:47.888 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6106dfb6] under timestampadd; prior registration was null
[DEBUG] 2024-11-26 16:08:47.889 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3593e074] under timestampdiff; prior registration was null
[DEBUG] 2024-11-26 16:08:47.889 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-26 16:08:47.889 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-26 16:08:47.889 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e0fdc83] under current_date; prior registration was null
[DEBUG] 2024-11-26 16:08:47.889 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5dacf18d] under current_time; prior registration was null
[DEBUG] 2024-11-26 16:08:47.889 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@432a6a69] under current_timestamp; prior registration was null
[DEBUG] 2024-11-26 16:08:47.889 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-26 16:08:47.889 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-26 16:08:47.889 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-26 16:08:47.889 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f52a229] under local_date; prior registration was null
[DEBUG] 2024-11-26 16:08:47.890 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fe98084] under local_time; prior registration was null
[DEBUG] 2024-11-26 16:08:47.890 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f33e6d] under local_datetime; prior registration was null
[DEBUG] 2024-11-26 16:08:47.890 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@151a6598] under offset_datetime; prior registration was null
[DEBUG] 2024-11-26 16:08:47.890 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-26 16:08:47.890 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-26 16:08:47.890 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-26 16:08:47.890 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-26 16:08:47.890 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6fa3def8] under instant; prior registration was null
[DEBUG] 2024-11-26 16:08:47.890 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-26 16:08:47.891 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@37f41a81] under sql; prior registration was null
[DEBUG] 2024-11-26 16:08:47.891 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-26 16:08:47.891 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-26 16:08:47.891 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-26 16:08:47.891 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-26 16:08:47.891 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43fe2008
[DEBUG] 2024-11-26 16:08:47.891 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-26 16:08:47.891 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-26 16:08:47.891 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-26 16:08:47.891 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-26 16:08:47.891 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-26 16:08:47.891 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-26 16:08:47.891 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-26 16:08:47.891 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-26 16:08:47.892 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@12548f9a] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-26 16:08:47.892 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@156ff70f] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-26 16:08:47.892 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-26 16:08:47.892 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-26 16:08:47.892 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-26 16:08:47.892 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-26 16:08:47.892 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-26 16:08:47.892 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-26 16:08:47.892 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-26 16:08:47.892 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-26 16:08:47.892 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-26 16:08:47.893 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-26 16:08:47.894 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-26 16:08:47.894 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-26 16:08:47.894 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-26 16:08:47.894 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-26 16:08:47.894 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-26 16:08:47.894 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-26 16:08:47.894 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-26 16:08:47.894 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c5a2d5] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3de45b6c
[DEBUG] 2024-11-26 16:08:47.894 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-26 16:08:47.894 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-26 16:08:47.894 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-26 16:08:47.898 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@45dc7be] under trunc; prior registration was null
[DEBUG] 2024-11-26 16:08:47.898 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-26 16:08:47.899 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-26 16:08:47.899 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under bitand; prior registration was null
[DEBUG] 2024-11-26 16:08:47.899 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under bitor; prior registration was null
[DEBUG] 2024-11-26 16:08:47.899 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d664323] under bitxor; prior registration was null
[DEBUG] 2024-11-26 16:08:47.899 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ec0d06] under bitnot; prior registration was null
[DEBUG] 2024-11-26 16:08:47.899 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-26 16:08:47.899 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-26 16:08:47.899 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-26 16:08:47.899 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-26 16:08:47.899 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-26 16:08:47.899 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-26 16:08:47.899 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-26 16:08:47.899 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-26 16:08:47.899 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2676d96a] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1bb172dd
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3fe98084
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5f33e6d
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cc56b32
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6da646b8] under chr; prior registration was null
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a65e237] under sysdate; prior registration was null
[DEBUG] 2024-11-26 16:08:47.900 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-26 16:08:47.901 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-26 16:08:47.901 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-26 16:08:47.901 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-26 16:08:47.901 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-26 16:08:47.901 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-26 16:08:47.902 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5aac6f9f] under rank; prior registration was null
[DEBUG] 2024-11-26 16:08:47.903 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2444c3df] under dense_rank; prior registration was null
[DEBUG] 2024-11-26 16:08:47.903 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1eb6037d] under percent_rank; prior registration was null
[DEBUG] 2024-11-26 16:08:47.903 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@335b3d6] under cume_dist; prior registration was null
[DEBUG] 2024-11-26 16:08:47.903 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@38826984] under listagg; prior registration was null
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-26 16:08:47.907 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-26 16:08:47.908 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-26 16:08:47.909 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-26 16:08:47.910 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.911 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-26 16:08:47.912 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-26 16:08:47.916 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-26 16:08:48.028 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-26 16:08:48.030 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-26 16:08:48.141 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 16:08:48.145 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 16:08:48.148 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 16:08:48.148 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 16:08:48.148 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-26 16:08:48.148 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-26 16:08:48.329 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-26 16:08:48.334 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 16:08:48.334 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 16:08:48.367 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-26 16:08:48.367 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-26 16:08:48.385 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-26 16:08:48.385 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-26 16:08:48.385 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-26 16:08:48.395 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-26 16:08:48.411 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 16:08:48.412 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 16:08:48.412 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 16:08:48.413 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 16:08:48.413 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 16:08:48.413 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 16:08:48.442 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-26 16:08:48.442 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-26 16:08:48.446 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-26 16:08:48.446 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-26 16:08:48.446 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-26 16:08:48.446 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-26 16:08:48.446 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-26 16:08:48.447 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-26 16:08:48.447 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-26 16:08:48.447 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-26 16:08:48.447 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-26 16:08:48.447 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-26 16:08:48.447 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-26 16:08:48.447 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-26 16:08:48.517 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 16:08:48.519 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-26 16:08:48.529 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4687366b] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-26 16:08:48.530 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 16:08:48.535 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@96dfcbb] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-26 16:08:48.535 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 16:08:48.539 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-26 16:08:48.550 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 16:08:48.559 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-26 16:08:48.559 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-26 16:08:48.559 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-26 16:08:48.559 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-26 16:08:48.559 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-26 16:08:48.559 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 16:08:48.559 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-26 16:08:48.560 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 16:08:48.561 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@50930bff] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 16:08:48.562 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 16:08:48.568 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7978550b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 16:08:48.569 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 16:08:48.570 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-26 16:08:48.571 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 16:08:48.571 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-26 16:08:48.571 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-26 16:08:48.571 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-26 16:08:48.571 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-26 16:08:48.571 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-26 16:08:48.571 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 16:08:48.571 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-26 16:08:48.571 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-26 16:08:48.571 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@56d742ad] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-26 16:08:48.571 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-26 16:08:48.571 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@75784062] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-26 16:08:48.571 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 16:08:48.572 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-26 16:08:48.572 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 16:08:48.572 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-26 16:08:48.572 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-26 16:08:48.572 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-26 16:08:48.572 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-26 16:08:48.572 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-26 16:08:48.573 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-26 16:08:48.573 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@4da9da6c] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-26 16:08:48.573 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-26 16:08:48.574 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64a8d575] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-26 16:08:48.574 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 16:08:48.574 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51fa09c7] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-26 16:08:48.576 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-26 16:08:48.576 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 16:08:48.576 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 16:08:48.576 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 16:08:48.576 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2bda7a5b] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 16:08:48.576 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 16:08:48.576 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@47374fa5] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-26 16:08:48.576 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@289da1bc] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 16:08:48.576 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 16:08:48.577 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-26 16:08:48.577 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 16:08:48.577 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 16:08:48.604 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-26 16:08:48.605 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-26 16:08:48.609 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-26 16:08:48.609 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-26 16:08:48.609 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@23dc70c1]
[DEBUG] 2024-11-26 16:08:48.610 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-26 16:08:48.610 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-26 16:08:48.611 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-26 16:08:48.611 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-26 16:08:48.613 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@29431f61
[DEBUG] 2024-11-26 16:08:48.613 [main] SessionFactoryRegistry - Registering SessionFactory: cf85e1b1-5fdc-45f1-b45f-d6e1e6787172 (<unnamed>)
[DEBUG] 2024-11-26 16:08:48.613 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-26 16:08:48.613 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-26 16:08:48.650 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-26 16:08:48.667 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:08:48.685 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@392189111 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@1409842139 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1484744244 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1300011842)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@102849021 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@686350055 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@2084023356)

[DEBUG] 2024-11-26 16:08:48.690 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-26 16:08:48.721 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:08:48.722 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:08:48.722 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@2113710566 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@125246542 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@289039926 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1300011842)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@1661349610 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@2074941685 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@2084023356)

[DEBUG] 2024-11-26 16:08:48.722 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-26 16:08:48.724 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:08:48.839 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:08:48.839 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1859633528 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1533375298 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@363003357 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1160651280 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@415297573 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 16:08:48.839 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:08:48.843 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 16:08:48.843 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 16:08:48.843 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 16:08:48.843 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 16:08:48.843 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 16:08:48.843 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 16:08:48.844 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 16:08:48.844 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 16:08:48.845 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 663512999
[DEBUG] 2024-11-26 16:08:48.850 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-26 16:08:48.852 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-26 16:08:48.852 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 16:08:48.856 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 16:08:48.856 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20e3b165
[DEBUG] 2024-11-26 16:08:48.858 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:08:48.859 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:08:48.869 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 16:08:48.869 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 16:08:48.878 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 16:08:48.879 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 16:08:48.879 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 16:08:48.883 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:08:48.885 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-26 16:08:48.886 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-26 16:08:48.886 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 16:08:48.886 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-26 16:08:48.893 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-26 16:08:48.897 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:08:48.897 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:08:48.898 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:08:48.898 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1456923361 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1318491599 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1139305484 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@208427214 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1833726536 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 16:08:48.898 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:08:48.899 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:08:49.028 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 16:08:49.028 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 16:08:49.031 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-26 16:08:49.033 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-26 16:08:49.038 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-26 16:08:49.038 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-26 16:08:49.039 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-26 16:08:49.042 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-26 16:08:49.042 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-26 16:08:49.043 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-26 16:08:49.043 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-26 16:08:49.044 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-26 16:08:49.044 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 16:08:49.044 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 16:08:49.044 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 16:08:49.044 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-26 16:08:49.045 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-26 16:08:49.045 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-26 16:08:49.045 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 16:08:49.045 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-26 16:08:49.045 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-26 16:08:49.047 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:08:49.047 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:08:49.048 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:08:49.049 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1384781563 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@913564177 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1972176213 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1215858771 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1254584937 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 16:08:49.049 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:08:49.050 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 16:08:49.050 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 16:08:49.050 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-26 16:08:49.050 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-26 16:08:49.050 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-26 16:08:49.050 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-26 16:08:49.050 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-26 16:08:49.050 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-26 16:08:49.050 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 907314155
[DEBUG] 2024-11-26 16:08:49.050 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 1917593312
[DEBUG] 2024-11-26 16:08:49.050 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1616242841
[DEBUG] 2024-11-26 16:08:49.051 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@1616242841
[DEBUG] 2024-11-26 16:08:49.051 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-26 16:08:49.051 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-26 16:08:49.051 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@1616242841
[DEBUG] 2024-11-26 16:08:49.051 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-26 16:08:49.051 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-26 16:08:49.051 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@478cebdb
[DEBUG] 2024-11-26 16:08:49.051 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-26 16:08:49.051 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:08:49.188 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:08:49.189 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1911830487 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1367787521 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@551821075 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1874842251 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1067780644 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 16:08:49.189 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:08:49.190 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 16:08:49.190 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 16:08:49.190 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 16:08:49.191 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 16:08:49.191 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 16:08:49.191 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 16:08:49.191 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 16:08:49.191 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 16:08:49.191 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1649140180
[DEBUG] 2024-11-26 16:08:49.191 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@862853054
[DEBUG] 2024-11-26 16:08:49.191 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@862853054
[DEBUG] 2024-11-26 16:08:49.191 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 16:08:49.191 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 16:08:49.191 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3897f9ae
[DEBUG] 2024-11-26 16:08:49.191 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:08:49.191 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:08:49.192 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 16:08:49.192 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 16:08:49.194 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 16:08:49.194 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-26 16:08:49.194 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 16:08:49.194 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@642f8b7f] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 16:08:49.194 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 16:08:49.195 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3321fb65] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 16:08:49.195 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 16:08:49.195 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-26 16:08:49.195 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 16:08:49.195 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:08:49.195 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1715414246 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2119380781 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1108674897 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@613097617 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@990656754 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 16:08:49.196 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:08:49.196 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 16:08:49.196 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 16:08:49.196 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 16:08:49.196 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 16:08:49.197 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 16:08:49.197 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 16:08:49.197 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 16:08:49.197 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 16:08:49.197 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1439452257
[DEBUG] 2024-11-26 16:08:49.197 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@721876120
[DEBUG] 2024-11-26 16:08:49.197 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@721876120
[DEBUG] 2024-11-26 16:08:49.197 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 16:08:49.197 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 16:08:49.197 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ddb9a8
[DEBUG] 2024-11-26 16:08:49.197 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:08:49.197 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:08:49.197 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 16:08:49.198 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 16:08:49.198 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 16:08:49.199 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-26 16:08:49.199 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-26 16:08:49.199 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-26 16:08:49.199 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 16:08:49.199 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-26 16:08:49.201 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-26 16:08:49.219 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:08:49.219 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:08:49.220 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:08:49.220 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1775349092 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1166754951 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1392602264 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@694841823 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1303659291 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 16:08:49.220 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:08:49.221 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 16:08:49.221 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 16:08:49.221 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 16:08:49.221 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 16:08:49.221 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 16:08:49.221 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 16:08:49.221 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 16:08:49.221 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 16:08:49.221 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1613461828
[DEBUG] 2024-11-26 16:08:49.221 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1603095377
[DEBUG] 2024-11-26 16:08:49.221 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1603095377
[DEBUG] 2024-11-26 16:08:49.221 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-26 16:08:49.221 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 16:08:49.221 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55821edf
[DEBUG] 2024-11-26 16:08:49.222 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:08:49.222 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:08:49.468 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:08:49.468 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1071364078 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@851478032 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1156336184 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1968179698 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@391554161 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 16:08:49.468 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:08:49.471 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 16:08:49.471 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 16:08:49.471 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 16:08:49.471 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 16:08:49.471 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 16:08:49.471 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 16:08:49.471 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 16:08:49.471 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 16:08:49.471 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1392412640
[DEBUG] 2024-11-26 16:08:49.471 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@926498219
[DEBUG] 2024-11-26 16:08:49.471 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@926498219
[DEBUG] 2024-11-26 16:08:49.471 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 16:08:49.471 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 16:08:49.471 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4866a755
[DEBUG] 2024-11-26 16:08:49.472 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:08:49.472 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 16:08:49.472 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 16:08:49.473 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@325183616 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@889633931 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1269566437 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@915231178 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@708090483 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 16:08:49.473 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 16:08:49.473 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 16:08:49.474 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 16:08:49.474 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 16:08:49.474 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 16:08:49.474 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 16:08:49.474 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 16:08:49.474 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 16:08:49.474 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 16:08:49.474 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1767304024
[DEBUG] 2024-11-26 16:08:49.474 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2147434909
[DEBUG] 2024-11-26 16:08:49.474 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@2147434909
[DEBUG] 2024-11-26 16:08:49.474 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 16:08:49.474 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 16:08:49.474 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6127ef86
[DEBUG] 2024-11-26 16:08:49.474 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 16:08:49.474 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 18:33:12.324 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2024-11-26 18:33:12.331 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2024-11-26 18:33:12.357 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2024-11-26 18:33:12.359 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2024-11-26 18:33:12.411 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2024-11-26 18:33:12.419 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2024-11-26 18:33:12.597 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2024-11-26 18:33:12.600 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2024-11-26 18:33:12.600 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2024-11-26 18:33:12.601 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-26 18:33:12.601 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2024-11-26 18:33:12.601 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2024-11-26 18:33:12.602 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2024-11-26 18:33:12.602 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2024-11-26 18:33:12.603 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-26 18:33:12.604 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2024-11-26 18:33:12.604 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2024-11-26 18:33:12.604 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2024-11-26 18:33:12.605 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2024-11-26 18:33:12.612 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2024-11-26 18:33:12.613 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2024-11-26 18:33:12.697 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 18:33:12.697 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 18:33:12.697 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13213f26
[DEBUG] 2024-11-26 18:33:12.697 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-26 18:33:12.697 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e4162bc
[DEBUG] 2024-11-26 18:33:12.697 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-26 18:33:12.697 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c319d52
[DEBUG] 2024-11-26 18:33:12.697 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-26 18:33:12.697 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@72fbf94d
[DEBUG] 2024-11-26 18:33:12.697 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 18:33:12.697 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 18:33:12.697 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6839203b
[DEBUG] 2024-11-26 18:33:12.698 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 18:33:12.698 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 18:33:12.698 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d28fb02
[DEBUG] 2024-11-26 18:33:12.698 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-26 18:33:12.698 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6db328f8
[DEBUG] 2024-11-26 18:33:12.698 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@402f8592
[DEBUG] 2024-11-26 18:33:12.698 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-26 18:33:12.698 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61b65d54
[DEBUG] 2024-11-26 18:33:12.698 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b2c4a8b
[DEBUG] 2024-11-26 18:33:12.698 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7f2c57fe
[DEBUG] 2024-11-26 18:33:12.698 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 18:33:12.698 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 18:33:12.698 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43935e9c
[DEBUG] 2024-11-26 18:33:12.699 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 18:33:12.699 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 18:33:12.699 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@101cf747
[DEBUG] 2024-11-26 18:33:12.699 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 18:33:12.699 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 18:33:12.699 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@790d8fdd
[DEBUG] 2024-11-26 18:33:12.699 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 18:33:12.699 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 18:33:12.699 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6403a4a5
[DEBUG] 2024-11-26 18:33:12.699 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 18:33:12.699 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 18:33:12.699 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3dbd7107
[DEBUG] 2024-11-26 18:33:12.699 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-26 18:33:12.699 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4a6c0f38
[DEBUG] 2024-11-26 18:33:12.699 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-26 18:33:12.700 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f8a02cf
[DEBUG] 2024-11-26 18:33:12.700 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 18:33:12.700 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 18:33:12.700 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@26d5a317
[DEBUG] 2024-11-26 18:33:12.700 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70b6db83
[DEBUG] 2024-11-26 18:33:12.700 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-26 18:33:12.700 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a090f62
[DEBUG] 2024-11-26 18:33:12.700 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@559af296
[DEBUG] 2024-11-26 18:33:12.700 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 18:33:12.700 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 18:33:12.700 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5edc3e29
[DEBUG] 2024-11-26 18:33:12.700 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18709cb2
[DEBUG] 2024-11-26 18:33:12.700 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@a90e2c1
[DEBUG] 2024-11-26 18:33:12.700 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@89caf47
[DEBUG] 2024-11-26 18:33:12.700 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-26 18:33:12.701 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@370ef50b
[DEBUG] 2024-11-26 18:33:12.701 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-26 18:33:12.701 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b877a54
[DEBUG] 2024-11-26 18:33:12.701 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268c030f
[DEBUG] 2024-11-26 18:33:12.701 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b87760e
[DEBUG] 2024-11-26 18:33:12.701 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@be164d8
[DEBUG] 2024-11-26 18:33:12.701 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b24ea2a
[DEBUG] 2024-11-26 18:33:12.701 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5df6163a
[DEBUG] 2024-11-26 18:33:12.701 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2d313c8c
[DEBUG] 2024-11-26 18:33:12.701 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-26 18:33:12.701 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2df65a56
[DEBUG] 2024-11-26 18:33:12.701 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-26 18:33:12.701 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@113f9078
[DEBUG] 2024-11-26 18:33:12.701 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c1503a3
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@586495f1
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47df5041
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a0ea492
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7e52a26b
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2e56b4d
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f857e08
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6070775e
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b5ac0c1
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@224c7de4
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36ad229b
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55846997
[DEBUG] 2024-11-26 18:33:12.702 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-26 18:33:12.703 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@805e72e
[DEBUG] 2024-11-26 18:33:12.703 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-26 18:33:12.703 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@49671897
[DEBUG] 2024-11-26 18:33:12.703 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 18:33:12.703 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 18:33:12.703 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@168142da
[DEBUG] 2024-11-26 18:33:12.703 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 18:33:12.703 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 18:33:12.703 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60bf494c
[DEBUG] 2024-11-26 18:33:12.703 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47a4eee2
[DEBUG] 2024-11-26 18:33:12.703 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36f6e521
[DEBUG] 2024-11-26 18:33:12.703 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-26 18:33:12.703 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2afdf6b7
[DEBUG] 2024-11-26 18:33:12.704 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 18:33:12.704 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 18:33:12.704 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@30922f8d
[DEBUG] 2024-11-26 18:33:12.704 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50211483
[DEBUG] 2024-11-26 18:33:12.704 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2024-11-26 18:33:12.704 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-26 18:33:12.704 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2024-11-26 18:33:12.704 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 18:33:12.704 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 18:33:12.704 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2024-11-26 18:33:12.704 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-26 18:33:12.704 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2024-11-26 18:33:12.704 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-26 18:33:12.704 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2024-11-26 18:33:12.705 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-26 18:33:12.705 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2024-11-26 18:33:12.705 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-26 18:33:12.705 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2024-11-26 18:33:12.705 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-26 18:33:12.705 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2024-11-26 18:33:12.705 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1a8e9ed9
[DEBUG] 2024-11-26 18:33:12.705 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68ea253b
[DEBUG] 2024-11-26 18:33:12.709 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-26 18:33:12.709 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d9618f2
[DEBUG] 2024-11-26 18:33:12.710 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@491f8831
[DEBUG] 2024-11-26 18:33:12.710 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@691541bc
[DEBUG] 2024-11-26 18:33:12.710 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b733ef7
[DEBUG] 2024-11-26 18:33:12.710 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43a4a9e5
[DEBUG] 2024-11-26 18:33:12.710 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@764fffa0
[DEBUG] 2024-11-26 18:33:12.711 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35145874
[DEBUG] 2024-11-26 18:33:12.711 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77524ca7
[DEBUG] 2024-11-26 18:33:12.711 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11df2829
[DEBUG] 2024-11-26 18:33:12.711 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18e4674d
[INFO ] 2024-11-26 18:33:12.736 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost/sportsAnalyticsPro_test
[INFO ] 2024-11-26 18:33:12.736 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=student}
[INFO ] 2024-11-26 18:33:12.736 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2024-11-26 18:33:12.816 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2024-11-26 18:33:12.878 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.0.1
      major : 9
      minor : 0
[DEBUG] 2024-11-26 18:33:12.878 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2024-11-26 18:33:12.879 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[WARN ] 2024-11-26 18:33:12.927 [main] deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[DEBUG] 2024-11-26 18:33:12.928 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.0.1
[DEBUG] 2024-11-26 18:33:12.934 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2024-11-26 18:33:12.934 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2024-11-26 18:33:12.948 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eaf8427) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf4680c)
[DEBUG] 2024-11-26 18:33:12.948 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d6039df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@611c3eae)
[DEBUG] 2024-11-26 18:33:12.948 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e00016) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3cbe6e)
[DEBUG] 2024-11-26 18:33:12.948 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@177ede17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17176b18)
[DEBUG] 2024-11-26 18:33:12.948 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e4395c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab53860)
[DEBUG] 2024-11-26 18:33:12.948 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5ac347) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b9389f)
[DEBUG] 2024-11-26 18:33:12.949 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b2c5ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41f785e3)
[DEBUG] 2024-11-26 18:33:12.949 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9a3661) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727986ad)
[DEBUG] 2024-11-26 18:33:12.949 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1600a8a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b25ef1c)
[DEBUG] 2024-11-26 18:33:12.950 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2024-11-26 18:33:12.950 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2024-11-26 18:33:12.951 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2024-11-26 18:33:12.953 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-26 18:33:12.953 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2024-11-26 18:33:12.955 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@383cdd4d
[DEBUG] 2024-11-26 18:33:12.956 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@491f8831`
[DEBUG] 2024-11-26 18:33:12.961 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 18:33:12.961 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 18:33:12.961 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2024-11-26 18:33:12.964 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 18:33:12.964 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 18:33:12.964 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2024-11-26 18:33:12.964 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 18:33:12.964 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 18:33:12.964 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2024-11-26 18:33:12.965 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 18:33:12.965 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 18:33:12.965 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2024-11-26 18:33:12.966 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71369e1a]
[DEBUG] 2024-11-26 18:33:13.007 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2024-11-26 18:33:13.033 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.User
[DEBUG] 2024-11-26 18:33:13.039 [main] EntityBinder - Import with entity name User
[DEBUG] 2024-11-26 18:33:13.045 [main] EntityBinder - Bind entity com.radams.entity.User on table users
[DEBUG] 2024-11-26 18:33:13.072 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 18:33:13.087 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 18:33:13.088 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-26 18:33:13.088 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-26 18:33:13.090 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 18:33:13.093 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:id]
[DEBUG] 2024-11-26 18:33:13.097 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 18:33:13.099 [main] BasicValue - Skipping column re-registration: users.id
[DEBUG] 2024-11-26 18:33:13.100 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 18:33:13.103 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 18:33:13.108 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 18:33:13.108 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 18:33:13.118 [main] AnnotatedColumn - Binding column: IndexColumn(column='favoriteTeams_ORDER')
[DEBUG] 2024-11-26 18:33:13.120 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 18:33:13.120 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-26 18:33:13.121 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='favoriteTeams_KEY')
[DEBUG] 2024-11-26 18:33:13.122 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 18:33:13.122 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 18:33:13.124 [main] CollectionBinder - Collection role: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 18:33:13.126 [main] PropertyBinder - Building property favoriteTeams
[DEBUG] 2024-11-26 18:33:13.127 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='email')
[DEBUG] 2024-11-26 18:33:13.127 [main] PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2024-11-26 18:33:13.127 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.User:userEmail]
[DEBUG] 2024-11-26 18:33:13.127 [main] BasicValueBinder - building BasicValue for userEmail
[DEBUG] 2024-11-26 18:33:13.127 [main] BasicValue - Skipping column re-registration: users.email
[DEBUG] 2024-11-26 18:33:13.127 [main] PropertyBinder - Building property userEmail
[DEBUG] 2024-11-26 18:33:13.128 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 18:33:13.132 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Sport
[DEBUG] 2024-11-26 18:33:13.132 [main] EntityBinder - Import with entity name Sport
[DEBUG] 2024-11-26 18:33:13.132 [main] EntityBinder - Bind entity com.radams.entity.Sport on table sports
[DEBUG] 2024-11-26 18:33:13.132 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 18:33:13.133 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 18:33:13.133 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-26 18:33:13.133 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-26 18:33:13.133 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 18:33:13.133 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:id]
[DEBUG] 2024-11-26 18:33:13.134 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 18:33:13.134 [main] BasicValue - Skipping column re-registration: sports.id
[DEBUG] 2024-11-26 18:33:13.134 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 18:33:13.134 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 18:33:13.134 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='name')
[DEBUG] 2024-11-26 18:33:13.134 [main] PropertyBinder - MetadataSourceProcessor property sportName with lazy=false
[DEBUG] 2024-11-26 18:33:13.134 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Sport:sportName]
[DEBUG] 2024-11-26 18:33:13.134 [main] BasicValueBinder - building BasicValue for sportName
[DEBUG] 2024-11-26 18:33:13.134 [main] BasicValue - Skipping column re-registration: sports.name
[DEBUG] 2024-11-26 18:33:13.134 [main] PropertyBinder - Building property sportName
[DEBUG] 2024-11-26 18:33:13.135 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 18:33:13.135 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 18:33:13.135 [main] AnnotatedColumn - Binding column: IndexColumn(column='teams_ORDER')
[DEBUG] 2024-11-26 18:33:13.135 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 18:33:13.135 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='teams_KEY')
[DEBUG] 2024-11-26 18:33:13.135 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='teams_KEY')
[DEBUG] 2024-11-26 18:33:13.135 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 18:33:13.136 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2024-11-26 18:33:13.136 [main] CollectionBinder - Collection role: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 18:33:13.136 [main] PropertyBinder - Building property teams
[DEBUG] 2024-11-26 18:33:13.136 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 18:33:13.136 [main] EntityBinder - Binding entity from annotated class: com.radams.entity.Team
[DEBUG] 2024-11-26 18:33:13.137 [main] EntityBinder - Import with entity name Team
[DEBUG] 2024-11-26 18:33:13.137 [main] EntityBinder - Bind entity com.radams.entity.Team on table favorite_teams
[DEBUG] 2024-11-26 18:33:13.137 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2024-11-26 18:33:13.140 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 18:33:13.140 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-26 18:33:13.140 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-26 18:33:13.140 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2024-11-26 18:33:13.140 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:id]
[DEBUG] 2024-11-26 18:33:13.140 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2024-11-26 18:33:13.140 [main] BasicValue - Skipping column re-registration: favorite_teams.id
[DEBUG] 2024-11-26 18:33:13.140 [main] PropertyBinder - Building property id
[DEBUG] 2024-11-26 18:33:13.140 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2024-11-26 18:33:13.141 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='sport_id')
[DEBUG] 2024-11-26 18:33:13.141 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 18:33:13.143 [main] PropertyBinder - Building property sport
[DEBUG] 2024-11-26 18:33:13.144 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='team_name')
[DEBUG] 2024-11-26 18:33:13.144 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2024-11-26 18:33:13.144 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.radams.entity.Team:teamName]
[DEBUG] 2024-11-26 18:33:13.144 [main] BasicValueBinder - building BasicValue for teamName
[DEBUG] 2024-11-26 18:33:13.144 [main] BasicValue - Skipping column re-registration: favorite_teams.team_name
[DEBUG] 2024-11-26 18:33:13.144 [main] PropertyBinder - Building property teamName
[DEBUG] 2024-11-26 18:33:13.144 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
[DEBUG] 2024-11-26 18:33:13.144 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2024-11-26 18:33:13.144 [main] PropertyBinder - Building property user
[DEBUG] 2024-11-26 18:33:13.145 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: com.radams.entity
[DEBUG] 2024-11-26 18:33:13.146 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 18:33:13.146 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
[DEBUG] 2024-11-26 18:33:13.147 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 18:33:13.147 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sportName
[DEBUG] 2024-11-26 18:33:13.147 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2024-11-26 18:33:13.147 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for teamName
[DEBUG] 2024-11-26 18:33:13.151 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2024-11-26 18:33:13.151 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [sports]
[DEBUG] 2024-11-26 18:33:13.152 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorite_teams]
[DEBUG] 2024-11-26 18:33:13.152 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 18:33:13.153 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.User.favoriteTeams through a foreign key
[DEBUG] 2024-11-26 18:33:13.155 [main] CollectionBinder - Mapping collection: com.radams.entity.User.favoriteTeams -> favorite_teams
[DEBUG] 2024-11-26 18:33:13.156 [main] TableBinder - Retrieving property com.radams.entity.Team.user
[DEBUG] 2024-11-26 18:33:13.157 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-26 18:33:13.157 [main] CollectionSecondPass - Second pass for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 18:33:13.157 [main] CollectionBinder - Binding a OneToMany: com.radams.entity.Sport.teams through a foreign key
[DEBUG] 2024-11-26 18:33:13.157 [main] CollectionBinder - Mapping collection: com.radams.entity.Sport.teams -> favorite_teams
[DEBUG] 2024-11-26 18:33:13.157 [main] TableBinder - Retrieving property com.radams.entity.Team.sport
[DEBUG] 2024-11-26 18:33:13.157 [main] CollectionSecondPass - Mapped collection key: sport_id, one-to-many: com.radams.entity.Team
[DEBUG] 2024-11-26 18:33:13.157 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-26 18:33:13.158 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-26 18:33:13.166 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.Sport
[DEBUG] 2024-11-26 18:33:13.166 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.radams.entity.User
[DEBUG] 2024-11-26 18:33:13.344 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2024-11-26 18:33:13.379 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-26 18:33:13.379 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.debugUnreturnedConnectionStackTraces=false, hibernate.c3p0.min_size=5, java.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib, sun.java.command=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter5776865205494479172.jar /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire7676266797851665648tmp /Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefire_06990831571126724874tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/test-classes:/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/classes:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-core/6.4.3.Final/hibernate-core-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/rashadadams/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/rashadadams/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/rashadadams/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/rashadadams/.m2/repository/net/bytebuddy/byte-buddy/1.14.7/byte-buddy-1.14.7.jar:/Users/rashadadams/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/rashadadams/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/rashadadams/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/rashadadams/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/rashadadams/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/rashadadams/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/rashadadams/.m2/repository/org/hibernate/orm/hibernate-c3p0/6.4.3.Final/hibernate-c3p0-6.4.3.Final.jar:/Users/rashadadams/.m2/repository/com/mchange/c3p0/0.9.5.5/c3p0-0.9.5.5.jar:/Users/rashadadams/.m2/repository/com/mchange/mchange-commons-java/0.2.19/mchange-commons-java-0.2.19.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/rashadadams/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/rashadadams/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/rashadadams/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/rashadadams/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/rashadadams/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/rashadadams/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/rashadadams/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/rashadadams/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/rashadadams/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/rashadadams/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/Users/rashadadams/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/Users/rashadadams/.m2/repository/com/auth0/java-jwt/3.4.1/java-jwt-3.4.1.jar:/Users/rashadadams/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/rashadadams/.m2/repository/org/json/json/20170516/json-20170516.jar:/Users/rashadadams/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/rashadadams/.m2/repository/org/javassist/javassist/3.22.0-CR2/javassist-3.22.0-CR2.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/Users/rashadadams/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/Users/rashadadams/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/rashadadams/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/Users/rashadadams/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/rashadadams/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/rashadadams/.m2/repository/com/sun/xml/bind/jaxb-impl/2.3.3/jaxb-impl-2.3.3.jar:/Users/rashadadams/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:, sun.cpu.endian=little, user.home=/Users/rashadadams, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-07-18, java.home=/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home, file.separator=/, basedir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor/target/surefire/surefirebooter5776865205494479172.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.20+8, user.name=rashadadams, path.separator=:, hibernate.connection.username=****, os.version=15.1.1, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Temurin-11.0.20+8, localRepository=/Users/rashadadams/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/var/folders/0j/24v3d27s3676y9nl_twl5ycc0000gn/T/, idea.version=2024.2.4, java.version=11.0.20, user.dir=/Users/rashadadams/Documents/GitHub/enterpriseJava/projects/sportsPerformancePredictor, os.arch=x86_64, connection.username=student, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d7d8911, java.library.path=/Users/rashadadams/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.20+8, java.specification.maintenance.version=2, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost/sportsAnalyticsPro_test, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2024-11-26 18:33:13.383 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2024-11-26 18:33:13.389 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-26 18:33:13.434 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2024-11-26 18:33:13.434 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2024-11-26 18:33:13.434 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2024-11-26 18:33:13.435 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2024-11-26 18:33:13.436 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@347b370c] under count; prior registration was null
[DEBUG] 2024-11-26 18:33:13.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@72a33316] under every; prior registration was null
[DEBUG] 2024-11-26 18:33:13.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@57fce8b] under any; prior registration was null
[DEBUG] 2024-11-26 18:33:13.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2024-11-26 18:33:13.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2024-11-26 18:33:13.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2024-11-26 18:33:13.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2024-11-26 18:33:13.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2024-11-26 18:33:13.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2024-11-26 18:33:13.437 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2024-11-26 18:33:13.438 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2024-11-26 18:33:13.438 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2024-11-26 18:33:13.438 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2024-11-26 18:33:13.438 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2024-11-26 18:33:13.438 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2024-11-26 18:33:13.438 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2024-11-26 18:33:13.438 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2024-11-26 18:33:13.438 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2024-11-26 18:33:13.438 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2024-11-26 18:33:13.438 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2024-11-26 18:33:13.440 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56f2c9e8] under sinh; prior registration was null
[DEBUG] 2024-11-26 18:33:13.440 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@457692cb] under cosh; prior registration was null
[DEBUG] 2024-11-26 18:33:13.440 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350342e0] under tanh; prior registration was null
[DEBUG] 2024-11-26 18:33:13.440 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d] under pi; prior registration was null
[DEBUG] 2024-11-26 18:33:13.440 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289] under log; prior registration was null
[DEBUG] 2024-11-26 18:33:13.440 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2024-11-26 18:33:13.440 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2024-11-26 18:33:13.440 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2024-11-26 18:33:13.440 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2024-11-26 18:33:13.440 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2024-11-26 18:33:13.441 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2024-11-26 18:33:13.441 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2024-11-26 18:33:13.441 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2024-11-26 18:33:13.441 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2024-11-26 18:33:13.441 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2024-11-26 18:33:13.441 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2024-11-26 18:33:13.441 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2024-11-26 18:33:13.442 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a] under position; prior registration was null
[DEBUG] 2024-11-26 18:33:13.444 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6fa2a006] under overlay; prior registration was null
[DEBUG] 2024-11-26 18:33:13.444 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@39695803] under trim; prior registration was null
[DEBUG] 2024-11-26 18:33:13.445 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@57b711b6] under cast; prior registration was null
[DEBUG] 2024-11-26 18:33:13.445 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2db461b5] under collate; prior registration was null
[DEBUG] 2024-11-26 18:33:13.446 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@55881f40] under extract; prior registration was null
[DEBUG] 2024-11-26 18:33:13.446 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2024-11-26 18:33:13.446 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2024-11-26 18:33:13.446 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11d1735e] under ifnull; prior registration was null
[DEBUG] 2024-11-26 18:33:13.446 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2024-11-26 18:33:13.447 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2024-11-26 18:33:13.447 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6282f1eb] under pad; prior registration was null
[DEBUG] 2024-11-26 18:33:13.447 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@64ed18ec] under str; prior registration was null
[DEBUG] 2024-11-26 18:33:13.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@25589735] under format; prior registration was null
[DEBUG] 2024-11-26 18:33:13.449 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7dddfc35] under timestampadd; prior registration was null
[DEBUG] 2024-11-26 18:33:13.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2336cd91] under timestampdiff; prior registration was null
[DEBUG] 2024-11-26 18:33:13.450 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2024-11-26 18:33:13.450 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2024-11-26 18:33:13.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c1e40d9] under current_date; prior registration was null
[DEBUG] 2024-11-26 18:33:13.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b50c21] under current_time; prior registration was null
[DEBUG] 2024-11-26 18:33:13.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e0fdc83] under current_timestamp; prior registration was null
[DEBUG] 2024-11-26 18:33:13.450 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2024-11-26 18:33:13.450 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2024-11-26 18:33:13.450 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2024-11-26 18:33:13.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5dacf18d] under local_date; prior registration was null
[DEBUG] 2024-11-26 18:33:13.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@432a6a69] under local_time; prior registration was null
[DEBUG] 2024-11-26 18:33:13.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f52a229] under local_datetime; prior registration was null
[DEBUG] 2024-11-26 18:33:13.450 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fe98084] under offset_datetime; prior registration was null
[DEBUG] 2024-11-26 18:33:13.450 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2024-11-26 18:33:13.450 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2024-11-26 18:33:13.451 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2024-11-26 18:33:13.451 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2024-11-26 18:33:13.451 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5f33e6d] under instant; prior registration was null
[DEBUG] 2024-11-26 18:33:13.451 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2024-11-26 18:33:13.451 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a1cb94] under sql; prior registration was null
[DEBUG] 2024-11-26 18:33:13.451 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2024-11-26 18:33:13.451 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2024-11-26 18:33:13.451 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2024-11-26 18:33:13.451 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2024-11-26 18:33:13.452 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dd44289
[DEBUG] 2024-11-26 18:33:13.452 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2024-11-26 18:33:13.452 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2024-11-26 18:33:13.452 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2024-11-26 18:33:13.452 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2024-11-26 18:33:13.452 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2024-11-26 18:33:13.452 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2024-11-26 18:33:13.452 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2024-11-26 18:33:13.452 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2024-11-26 18:33:13.452 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@49bb808f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2024-11-26 18:33:13.452 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@563ada5] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2024-11-26 18:33:13.452 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2024-11-26 18:33:13.452 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2024-11-26 18:33:13.453 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2024-11-26 18:33:13.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2024-11-26 18:33:13.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2024-11-26 18:33:13.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2024-11-26 18:33:13.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2024-11-26 18:33:13.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2024-11-26 18:33:13.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2024-11-26 18:33:13.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2024-11-26 18:33:13.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2024-11-26 18:33:13.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2024-11-26 18:33:13.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2024-11-26 18:33:13.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12548f9a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@8b89b3a
[DEBUG] 2024-11-26 18:33:13.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2024-11-26 18:33:13.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2024-11-26 18:33:13.454 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2024-11-26 18:33:13.457 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2838eb] under trunc; prior registration was null
[DEBUG] 2024-11-26 18:33:13.457 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2024-11-26 18:33:13.457 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2024-11-26 18:33:13.457 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fb5d334] under bitand; prior registration was null
[DEBUG] 2024-11-26 18:33:13.457 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45dc7be] under bitor; prior registration was null
[DEBUG] 2024-11-26 18:33:13.457 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under bitxor; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under bitnot; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4d664323] under format; prior registration was org.hibernate.dialect.function.FormatFunction@25589735
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2024-11-26 18:33:13.458 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@432a6a69
[DEBUG] 2024-11-26 18:33:13.459 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f52a229
[DEBUG] 2024-11-26 18:33:13.459 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2024-11-26 18:33:13.459 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27ec0d06] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d297d4d
[DEBUG] 2024-11-26 18:33:13.459 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2676d96a] under chr; prior registration was null
[DEBUG] 2024-11-26 18:33:13.459 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2024-11-26 18:33:13.459 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under sysdate; prior registration was null
[DEBUG] 2024-11-26 18:33:13.459 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2024-11-26 18:33:13.459 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2024-11-26 18:33:13.459 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2024-11-26 18:33:13.459 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2024-11-26 18:33:13.459 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2024-11-26 18:33:13.459 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2024-11-26 18:33:13.460 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@77a9ac36] under rank; prior registration was null
[DEBUG] 2024-11-26 18:33:13.460 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3c743d40] under dense_rank; prior registration was null
[DEBUG] 2024-11-26 18:33:13.460 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5aac6f9f] under percent_rank; prior registration was null
[DEBUG] 2024-11-26 18:33:13.460 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2444c3df] under cume_dist; prior registration was null
[DEBUG] 2024-11-26 18:33:13.461 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@38848217] under listagg; prior registration was null
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2024-11-26 18:33:13.464 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.465 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2024-11-26 18:33:13.466 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2024-11-26 18:33:13.467 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2024-11-26 18:33:13.468 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2024-11-26 18:33:13.472 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2024-11-26 18:33:13.569 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2024-11-26 18:33:13.570 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2024-11-26 18:33:13.665 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 18:33:13.669 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 18:33:13.672 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 18:33:13.672 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 18:33:13.672 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Team] is safe
[DEBUG] 2024-11-26 18:33:13.672 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Team
[DEBUG] 2024-11-26 18:33:13.821 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Team]: private accessor [sport]
[DEBUG] 2024-11-26 18:33:13.824 [main] interceptor - To-one property `com.radams.entity.Team#sport` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 18:33:13.825 [main] interceptor - To-one property `com.radams.entity.Team#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2024-11-26 18:33:13.850 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.Sport] is safe
[DEBUG] 2024-11-26 18:33:13.850 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.Sport
[DEBUG] 2024-11-26 18:33:13.863 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.Sport]: private accessor [sportName]
[DEBUG] 2024-11-26 18:33:13.864 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.radams.entity.User] is safe
[DEBUG] 2024-11-26 18:33:13.864 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.radams.entity.User
[DEBUG] 2024-11-26 18:33:13.871 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.radams.entity.User]: private accessor [favoriteTeams]
[DEBUG] 2024-11-26 18:33:13.885 [main] mutation - Skipping collection (re)creation - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 18:33:13.886 [main] mutation - Skipping collection row deletions - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 18:33:13.886 [main] mutation - Skipping collection removals - com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 18:33:13.887 [main] mutation - Skipping collection (re)creation - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 18:33:13.887 [main] mutation - Skipping collection row deletions - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 18:33:13.887 [main] mutation - Skipping collection removals - com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 18:33:13.911 [main] creation - Starting post-init callbacks
[DEBUG] 2024-11-26 18:33:13.911 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.sport]
[DEBUG] 2024-11-26 18:33:13.915 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.radams.entity.Team.user]
[DEBUG] 2024-11-26 18:33:13.915 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Team) `staticFetchableList` generator
[DEBUG] 2024-11-26 18:33:13.915 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-26 18:33:13.915 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams)#finishInitialization
[DEBUG] 2024-11-26 18:33:13.915 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.Sport.teams) - key descriptor
[DEBUG] 2024-11-26 18:33:13.915 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.Sport) `staticFetchableList` generator
[DEBUG] 2024-11-26 18:33:13.915 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-26 18:33:13.915 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams)#finishInitialization
[DEBUG] 2024-11-26 18:33:13.915 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.radams.entity.User.favoriteTeams) - key descriptor
[DEBUG] 2024-11-26 18:33:13.915 [main] creation - Starting PostInitCallbackEntry : Entity(com.radams.entity.User) `staticFetchableList` generator
[DEBUG] 2024-11-26 18:33:13.915 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.Sport.teams#{element}]) - element descriptor
[DEBUG] 2024-11-26 18:33:13.915 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.radams.entity.User.favoriteTeams#{element}]) - element descriptor
[DEBUG] 2024-11-26 18:33:13.981 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 18:33:13.983 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Team)] with identifierForTableGroup [com.radams.entity.Team] for NavigablePath [com.radams.entity.Team] 
[DEBUG] 2024-11-26 18:33:13.992 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d01ea33] with identifierForTableGroup [com.radams.entity.Team.sport] for NavigablePath [com.radams.entity.Team.sport] 
[DEBUG] 2024-11-26 18:33:13.993 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 18:33:13.998 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c3fcbe7] with identifierForTableGroup [com.radams.entity.Team.user] for NavigablePath [com.radams.entity.Team.user] 
[DEBUG] 2024-11-26 18:33:13.998 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 18:33:14.002 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Team]
 |  +-EntityFetchJoinedImpl [com.radams.entity.Team.sport]
 |  +-BasicFetch [com.radams.entity.Team.teamName]
 |  \-EntityFetchJoinedImpl [com.radams.entity.Team.user]

[DEBUG] 2024-11-26 18:33:14.010 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.radams.entity.Team) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Team.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Team.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 18:33:14.018 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Team
[DEBUG] 2024-11-26 18:33:14.018 [main] AbstractEntityPersister -  Version select: select id from favorite_teams where id=?
[DEBUG] 2024-11-26 18:33:14.018 [main] AbstractEntityPersister -  Insert (0): insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-26 18:33:14.018 [main] AbstractEntityPersister -  Update (0): update favorite_teams set sport_id=?,team_name=?,user_id=? where id=?
[DEBUG] 2024-11-26 18:33:14.018 [main] AbstractEntityPersister -  Delete (0): delete from favorite_teams where id=?
[DEBUG] 2024-11-26 18:33:14.018 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 18:33:14.018 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-26 18:33:14.019 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 18:33:14.021 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3ae87e38] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 18:33:14.022 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 18:33:14.028 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e9cb95] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 18:33:14.028 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 18:33:14.030 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-26 18:33:14.030 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 18:33:14.030 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.Sport
[DEBUG] 2024-11-26 18:33:14.031 [main] AbstractEntityPersister -  Version select: select id from sports where id=?
[DEBUG] 2024-11-26 18:33:14.031 [main] AbstractEntityPersister -  Insert (0): insert into sports (name) values (?)
[DEBUG] 2024-11-26 18:33:14.031 [main] AbstractEntityPersister -  Update (0): update sports set name=? where id=?
[DEBUG] 2024-11-26 18:33:14.031 [main] AbstractEntityPersister -  Delete (0): delete from sports where id=?
[DEBUG] 2024-11-26 18:33:14.031 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 18:33:14.031 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User)] with identifierForTableGroup [com.radams.entity.User] for NavigablePath [com.radams.entity.User] 
[DEBUG] 2024-11-26 18:33:14.031 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-26 18:33:14.031 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@21a0795f] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-26 18:33:14.031 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-26 18:33:14.031 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2ec156fb] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-26 18:33:14.031 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 18:33:14.031 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.User]
 |  +-EagerCollectionFetch [com.radams.entity.User.favoriteTeams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.User.favoriteTeams.{element}]
 |  \-BasicFetch [com.radams.entity.User.userEmail]

[DEBUG] 2024-11-26 18:33:14.031 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.radams.entity.User) {
          primaryTableReference : users as u1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
              primaryTableReference : favorite_teams as ft1_0
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
                  primaryTableReference : sports as s1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 18:33:14.032 [main] AbstractEntityPersister - Static SQL for entity: com.radams.entity.User
[DEBUG] 2024-11-26 18:33:14.032 [main] AbstractEntityPersister -  Version select: select id from users where id=?
[DEBUG] 2024-11-26 18:33:14.032 [main] AbstractEntityPersister -  Insert (0): insert into users (email) values (?)
[DEBUG] 2024-11-26 18:33:14.032 [main] AbstractEntityPersister -  Update (0): update users set email=? where id=?
[DEBUG] 2024-11-26 18:33:14.032 [main] AbstractEntityPersister -  Delete (0): delete from users where id=?
[DEBUG] 2024-11-26 18:33:14.033 [main] create - Created new SQL alias : ft1_0
[DEBUG] 2024-11-26 18:33:14.033 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1bf52f10] with identifierForTableGroup [com.radams.entity.User.favoriteTeams] for NavigablePath [com.radams.entity.User.favoriteTeams] 
[DEBUG] 2024-11-26 18:33:14.033 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.User.favoriteTeams.{element})] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}] 
[DEBUG] 2024-11-26 18:33:14.033 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@301e5d23] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.sport] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.sport] 
[DEBUG] 2024-11-26 18:33:14.033 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 18:33:14.034 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74787609] with identifierForTableGroup [com.radams.entity.User.favoriteTeams.{element}.user] for NavigablePath [com.radams.entity.User.favoriteTeams.{element}.user] 
[DEBUG] 2024-11-26 18:33:14.035 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.User.favoriteTeams]

[DEBUG] 2024-11-26 18:33:14.035 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (ft1 : com.radams.entity.User.favoriteTeams) {
          primaryTableReference : favorite_teams as ft1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.User.favoriteTeams.{element}.sport) {
              primaryTableReference : sports as s1_0
            }
            left  join LazyTableGroup (u1 : com.radams.entity.User.favoriteTeams.{element}.user) {
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 18:33:14.035 [main] mutation - Static SQL for collection: com.radams.entity.User.favoriteTeams
[DEBUG] 2024-11-26 18:33:14.035 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 18:33:14.035 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@355b53cc] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 18:33:14.036 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 18:33:14.036 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2568611c] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.sport] for NavigablePath [com.radams.entity.Sport.teams.{element}.sport] 
[DEBUG] 2024-11-26 18:33:14.036 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bda7a5b] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 18:33:14.036 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 18:33:14.036 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [com.radams.entity.Sport.teams]

[DEBUG] 2024-11-26 18:33:14.036 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
          primaryTableReference : favorite_teams as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.radams.entity.Sport.teams.{element}.sport) {
            }
            left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 18:33:14.036 [main] mutation - Static SQL for collection: com.radams.entity.Sport.teams
[DEBUG] 2024-11-26 18:33:14.060 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2024-11-26 18:33:14.060 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2024-11-26 18:33:14.063 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2024-11-26 18:33:14.063 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2024-11-26 18:33:14.064 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71567f33] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@121dac1a]
[DEBUG] 2024-11-26 18:33:14.065 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2024-11-26 18:33:14.065 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2024-11-26 18:33:14.065 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2024-11-26 18:33:14.065 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2024-11-26 18:33:14.067 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3acc65f0
[DEBUG] 2024-11-26 18:33:14.067 [main] SessionFactoryRegistry - Registering SessionFactory: 7efa6618-2756-41a1-8131-14ead1ae5262 (<unnamed>)
[DEBUG] 2024-11-26 18:33:14.067 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2024-11-26 18:33:14.067 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2024-11-26 18:33:14.097 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2024-11-26 18:33:14.111 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 18:33:14.125 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@656020492 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@609630217 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@1104693947 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@636370090 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@1072476278 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-26 18:33:14.129 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-26 18:33:14.143 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 18:33:14.144 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 18:33:14.144 [main] results - Initializer list:
	  com.radams.entity.User.favoriteTeams -> SetInitializer(com.radams.entity.User.favoriteTeams)@638978471 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.User.favoriteTeams.{element}.sport.teams -> SelectEagerCollectionInitializer(com.radams.entity.User.favoriteTeams.{element}.sport.teams)@959016175 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.User.favoriteTeams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element})@2113710566 (EntityCollectionPart(com.radams.entity.User.favoriteTeams#{element})@1409842139)
	  com.radams.entity.User -> EntityResultInitializer(com.radams.entity.User)@125246542 (SingleTableEntityPersister(com.radams.entity.User))
	  com.radams.entity.User.favoriteTeams.{element}.sport -> EntityJoinedFetchInitializer(com.radams.entity.User.favoriteTeams.{element}.sport)@289039926 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.sport])@102849021)

[DEBUG] 2024-11-26 18:33:14.144 [main] SQL - select u1_0.id,ft1_0.user_id,ft1_0.id,s1_0.id,s1_0.name,ft1_0.team_name,u1_0.email from users u1_0 left join favorite_teams ft1_0 on u1_0.id=ft1_0.user_id left join sports s1_0 on s1_0.id=ft1_0.sport_id where u1_0.id=?
[DEBUG] 2024-11-26 18:33:14.145 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 18:33:14.212 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 18:33:14.212 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1859633528 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1533375298 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@363003357 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1160651280 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@415297573 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 18:33:14.212 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 18:33:14.216 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 18:33:14.216 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 18:33:14.216 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 18:33:14.216 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 18:33:14.216 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 18:33:14.216 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 18:33:14.217 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 18:33:14.217 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 18:33:14.218 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 663512999
[DEBUG] 2024-11-26 18:33:14.221 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-26 18:33:14.222 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1934770572
[DEBUG] 2024-11-26 18:33:14.222 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 18:33:14.226 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 18:33:14.226 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20e3b165
[DEBUG] 2024-11-26 18:33:14.228 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 18:33:14.228 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 18:33:14.230 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 18:33:14.230 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 18:33:14.237 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 18:33:14.238 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 18:33:14.238 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 18:33:14.240 [main] Collections - Collection dereferenced: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 18:33:14.243 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2024-11-26 18:33:14.243 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2024-11-26 18:33:14.243 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 18:33:14.244 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=NBA, id=1}
[DEBUG] 2024-11-26 18:33:14.249 [main] SQL - delete from sports where id=?
[DEBUG] 2024-11-26 18:33:14.252 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 18:33:14.252 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 18:33:14.252 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 18:33:14.252 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1456923361 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1318491599 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1139305484 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@208427214 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1833726536 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 18:33:14.252 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 18:33:14.253 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 18:33:14.337 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 18:33:14.337 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 18:33:14.339 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-26 18:33:14.341 [main] SQL - insert into sports (name) values (?)
[DEBUG] 2024-11-26 18:33:14.345 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Sport) : 2
[DEBUG] 2024-11-26 18:33:14.345 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-26 18:33:14.346 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-26 18:33:14.349 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2024-11-26 18:33:14.349 [main] SQL - insert into favorite_teams (sport_id,team_name,user_id) values (?,?,?)
[DEBUG] 2024-11-26 18:33:14.350 [main] IdentifierGeneratorHelper - Natively generated identity (com.radams.entity.Team) : 1
[DEBUG] 2024-11-26 18:33:14.350 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2024-11-26 18:33:14.350 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2024-11-26 18:33:14.350 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 18:33:14.350 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 18:33:14.350 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 18:33:14.351 [main] Collections - Collection found: [com.radams.entity.Sport.teams#2], was: [<unreferenced>] (initialized)
[DEBUG] 2024-11-26 18:33:14.351 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2024-11-26 18:33:14.351 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-26 18:33:14.351 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 18:33:14.351 [main] EntityPrinter - com.radams.entity.Team{teamName=New Team, id=1, sport=com.radams.entity.Sport#2, user=null}
[DEBUG] 2024-11-26 18:33:14.351 [main] EntityPrinter - com.radams.entity.Sport{teams=[com.radams.entity.Team#1], sportName=New Sport, id=2}
[DEBUG] 2024-11-26 18:33:14.354 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 18:33:14.354 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 18:33:14.355 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 18:33:14.355 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@408648902 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@546552684 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1384781563 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@913564177 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1972176213 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 18:33:14.355 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 18:33:14.356 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 18:33:14.357 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 18:33:14.357 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2024-11-26 18:33:14.357 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.radams.entity.Sport.teams.{element}): 1
[DEBUG] 2024-11-26 18:33:14.357 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 2
[DEBUG] 2024-11-26 18:33:14.357 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2024-11-26 18:33:14.357 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#2
[DEBUG] 2024-11-26 18:33:14.357 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2024-11-26 18:33:14.357 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [com.radams.entity.Sport.teams.{element}#1] : 196316233
[DEBUG] 2024-11-26 18:33:14.357 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#2] : 345518693
[DEBUG] 2024-11-26 18:33:14.357 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-26 18:33:14.357 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#2] : org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-26 18:33:14.357 [main] results - Extracted JDBC value [4] - [New Team]
[DEBUG] 2024-11-26 18:33:14.358 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.radams.entity.Sport.teams.{element}#1
[DEBUG] 2024-11-26 18:33:14.358 [main] collection - (SetInitializer) Reading element from row for collection [com.radams.entity.Sport.teams#2] -> org.hibernate.collection.spi.PersistentSet@56505723
[DEBUG] 2024-11-26 18:33:14.358 [main] results - Extracted JDBC value [1] - [New Sport]
[DEBUG] 2024-11-26 18:33:14.358 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#2
[DEBUG] 2024-11-26 18:33:14.358 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6055e899
[DEBUG] 2024-11-26 18:33:14.358 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#2]
[DEBUG] 2024-11-26 18:33:14.358 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 18:33:14.428 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 18:33:14.428 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1911830487 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1367787521 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@551821075 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@1874842251 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1067780644 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 18:33:14.428 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 18:33:14.430 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 18:33:14.430 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 18:33:14.430 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 18:33:14.430 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 18:33:14.430 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 18:33:14.430 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 18:33:14.430 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 18:33:14.430 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 18:33:14.430 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1649140180
[DEBUG] 2024-11-26 18:33:14.430 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@862853054
[DEBUG] 2024-11-26 18:33:14.430 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@862853054
[DEBUG] 2024-11-26 18:33:14.430 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 18:33:14.431 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 18:33:14.431 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3897f9ae
[DEBUG] 2024-11-26 18:33:14.431 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 18:33:14.431 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 18:33:14.431 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2024-11-26 18:33:14.431 [main] TransactionImpl - begin
[DEBUG] 2024-11-26 18:33:14.433 [main] create - Created new SQL alias : s1_0
[DEBUG] 2024-11-26 18:33:14.433 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport)] with identifierForTableGroup [com.radams.entity.Sport] for NavigablePath [com.radams.entity.Sport] 
[DEBUG] 2024-11-26 18:33:14.434 [main] create - Created new SQL alias : t1_0
[DEBUG] 2024-11-26 18:33:14.434 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@642f8b7f] with identifierForTableGroup [com.radams.entity.Sport.teams] for NavigablePath [com.radams.entity.Sport.teams] 
[DEBUG] 2024-11-26 18:33:14.434 [main] create - Registration of TableGroup [StandardTableGroup(com.radams.entity.Sport.teams.{element})] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}] for NavigablePath [com.radams.entity.Sport.teams.{element}] 
[DEBUG] 2024-11-26 18:33:14.434 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3321fb65] with identifierForTableGroup [com.radams.entity.Sport.teams.{element}.user] for NavigablePath [com.radams.entity.Sport.teams.{element}.user] 
[DEBUG] 2024-11-26 18:33:14.434 [main] create - Created new SQL alias : u1_0
[DEBUG] 2024-11-26 18:33:14.434 [main] AST - DomainResult Graph:
 \-EntityResultImpl [com.radams.entity.Sport]
 |  +-BasicFetch [com.radams.entity.Sport.sportName]
 |  \-EagerCollectionFetch [com.radams.entity.Sport.teams]
 |  |  \-EntityFetchJoinedImpl [com.radams.entity.Sport.teams.{element}]

[DEBUG] 2024-11-26 18:33:14.434 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.radams.entity.Sport) {
          primaryTableReference : sports as s1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (t1 : com.radams.entity.Sport.teams) {
              primaryTableReference : favorite_teams as t1_0
              TableGroupJoins {
                left  join LazyTableGroup (u1 : com.radams.entity.Sport.teams.{element}.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2024-11-26 18:33:14.435 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 18:33:14.435 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1715414246 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2119380781 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1108674897 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@613097617 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@990656754 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 18:33:14.435 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 18:33:14.436 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 18:33:14.436 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 18:33:14.436 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 18:33:14.436 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 18:33:14.436 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 18:33:14.436 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 18:33:14.436 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 18:33:14.436 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 18:33:14.436 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1439452257
[DEBUG] 2024-11-26 18:33:14.436 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@721876120
[DEBUG] 2024-11-26 18:33:14.436 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@721876120
[DEBUG] 2024-11-26 18:33:14.436 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 18:33:14.436 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 18:33:14.436 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4ddb9a8
[DEBUG] 2024-11-26 18:33:14.436 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 18:33:14.436 [main] CollectionEntry - Reset storedSnapshot to {} for CollectionEntry[com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 18:33:14.437 [main] TransactionImpl - committing
[DEBUG] 2024-11-26 18:33:14.437 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2024-11-26 18:33:14.437 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2024-11-26 18:33:14.438 [main] Collections - Collection found: [com.radams.entity.Sport.teams#1], was: [com.radams.entity.Sport.teams#1] (initialized)
[DEBUG] 2024-11-26 18:33:14.438 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2024-11-26 18:33:14.438 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2024-11-26 18:33:14.438 [main] EntityPrinter - Listing entities:
[DEBUG] 2024-11-26 18:33:14.438 [main] EntityPrinter - com.radams.entity.Sport{teams=[], sportName=Name Change, id=1}
[DEBUG] 2024-11-26 18:33:14.440 [main] SQL - update sports set name=? where id=?
[DEBUG] 2024-11-26 18:33:14.442 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 18:33:14.442 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 18:33:14.442 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 18:33:14.442 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@1775349092 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1166754951 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1392602264 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@694841823 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1303659291 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 18:33:14.442 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 18:33:14.443 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 18:33:14.443 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 18:33:14.443 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 18:33:14.443 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 18:33:14.443 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 18:33:14.443 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 18:33:14.443 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 18:33:14.443 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 18:33:14.443 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1613461828
[DEBUG] 2024-11-26 18:33:14.443 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1603095377
[DEBUG] 2024-11-26 18:33:14.443 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1603095377
[DEBUG] 2024-11-26 18:33:14.443 [main] results - Extracted JDBC value [1] - [Name Change]
[DEBUG] 2024-11-26 18:33:14.444 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 18:33:14.444 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55821edf
[DEBUG] 2024-11-26 18:33:14.444 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 18:33:14.444 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 18:33:14.576 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 18:33:14.577 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@450728160 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@2079936145 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@1071364078 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@851478032 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1156336184 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 18:33:14.577 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 18:33:14.578 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 18:33:14.578 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 18:33:14.578 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 18:33:14.578 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 18:33:14.578 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 18:33:14.578 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 18:33:14.578 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 18:33:14.578 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 18:33:14.579 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1937867829
[DEBUG] 2024-11-26 18:33:14.579 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@802062915
[DEBUG] 2024-11-26 18:33:14.579 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@802062915
[DEBUG] 2024-11-26 18:33:14.579 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 18:33:14.579 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 18:33:14.579 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52fe87e0
[DEBUG] 2024-11-26 18:33:14.579 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 18:33:14.579 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2024-11-26 18:33:14.580 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2024-11-26 18:33:14.580 [main] results - Initializer list:
	  com.radams.entity.Sport.teams.{element}.user -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element}.user)@926498219 (ToOneAttributeMapping(NavigableRole[com.radams.entity.Team.user])@473440633)
	  com.radams.entity.Sport -> EntityResultInitializer(com.radams.entity.Sport)@1214687061 (SingleTableEntityPersister(com.radams.entity.Sport))
	  com.radams.entity.Sport.teams.{element}.user.favoriteTeams -> SelectEagerCollectionInitializer(com.radams.entity.Sport.teams.{element}.user.favoriteTeams)@325183616 (PluralAttribute(com.radams.entity.User.favoriteTeams))
	  com.radams.entity.Sport.teams -> SetInitializer(com.radams.entity.Sport.teams)@889633931 (PluralAttribute(com.radams.entity.Sport.teams))
	  com.radams.entity.Sport.teams.{element} -> EntityJoinedFetchInitializer(com.radams.entity.Sport.teams.{element})@1269566437 (EntityCollectionPart(com.radams.entity.Sport.teams#{element})@1750040348)

[DEBUG] 2024-11-26 18:33:14.580 [main] SQL - select s1_0.id,s1_0.name,t1_0.sport_id,t1_0.id,t1_0.team_name,u1_0.id,u1_0.email from sports s1_0 left join favorite_teams t1_0 on s1_0.id=t1_0.sport_id left join users u1_0 on u1_0.id=t1_0.user_id where s1_0.id=?
[DEBUG] 2024-11-26 18:33:14.580 [main] results - Extracted JDBC value [5] - [null]
[DEBUG] 2024-11-26 18:33:14.580 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}.user) is null
[DEBUG] 2024-11-26 18:33:14.581 [main] results - Extracted JDBC value [3] - [null]
[DEBUG] 2024-11-26 18:33:14.581 [main] entity - (EntityJoinedFetchInitializer) EntityKey (com.radams.entity.Sport.teams.{element}) is null
[DEBUG] 2024-11-26 18:33:14.581 [main] entity - (EntityResultInitializer) Hydrated EntityKey (com.radams.entity.Sport): 1
[DEBUG] 2024-11-26 18:33:14.581 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2024-11-26 18:33:14.581 [main] collection - (SetInitializer) Current row collection key : com.radams.entity.Sport.teams#1
[DEBUG] 2024-11-26 18:33:14.581 [main] results - Extracted JDBC value [2] - [null]
[DEBUG] 2024-11-26 18:33:14.581 [main] entity - (EntityResultInitializer) Created new entity instance [com.radams.entity.Sport#1] : 1295679363
[DEBUG] 2024-11-26 18:33:14.581 [main] collection - (SetInitializer) Created new collection wrapper [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1050768030
[DEBUG] 2024-11-26 18:33:14.581 [main] collection - (SetInitializer) Responsible for loading collection [com.radams.entity.Sport.teams#1] : org.hibernate.collection.spi.PersistentSet@1050768030
[DEBUG] 2024-11-26 18:33:14.581 [main] results - Extracted JDBC value [1] - [NBA]
[DEBUG] 2024-11-26 18:33:14.581 [main] entity - (EntityResultInitializer) Done materializing entityInstance : com.radams.entity.Sport#1
[DEBUG] 2024-11-26 18:33:14.581 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6956eb58
[DEBUG] 2024-11-26 18:33:14.581 [main] ResultsHelper - Collection fully initialized: [com.radams.entity.Sport.teams#1]
[DEBUG] 2024-11-26 18:33:14.581 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
